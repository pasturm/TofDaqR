<!DOCTYPE html>
<html dir="ltr" class="desktop" lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <meta charset="utf-8">
  <title>manuals:daq:twh5dll</title>
<meta name="generator" content="DokuWiki">
<meta name="robots" content="noindex,nofollow">
<meta name="keywords" content="manuals,daq,twh5dll">
<link rel="search" type="application/opensearchdescription+xml" href="http://wiki.tofwerk.com/lib/exe/opensearch.php" title="Tofwerk Documentation Wiki">
<link rel="start" href="http://wiki.tofwerk.com/">
<link rel="contents" href="http://wiki.tofwerk.com/doku.php?id=manuals:daq:twh5dll&amp;do=index" title="Sitemap">
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://wiki.tofwerk.com/feed.php">
<link rel="alternate" type="application/rss+xml" title="Current namespace" href="http://wiki.tofwerk.com/feed.php?mode=list&amp;ns=manuals:daq">
<link rel="alternate" type="text/html" title="Plain HTML" href="http://wiki.tofwerk.com/doku.php?do=export_xhtml&amp;id=manuals:daq:twh5dll">
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://wiki.tofwerk.com/doku.php?do=export_raw&amp;id=manuals:daq:twh5dll">
<link rel="canonical" href="http://wiki.tofwerk.com/doku.php?id=manuals:daq:twh5dll">
<link rel="stylesheet" type="text/css" href="TwH5Dll_files/css.css">
<!--[if gte IE 9]><!-->
<script type="text/javascript">/*<![CDATA[*/var NS='manuals:daq';var SIG=' --- //[[tanner@tofwerk.com|Christian Tanner]] 01.12.2017 13:31//';var JSINFO = {"id":"manuals:daq:twh5dll","namespace":"manuals:daq","plugins":{"edittable":{"default columnwidth":""}}};
/*!]]>*/</script>
<script type="text/javascript" charset="utf-8" src="TwH5Dll_files/jquery.php"></script>
<script type="text/javascript" charset="utf-8" src="TwH5Dll_files/js.php"></script><style id="iris-css">.iris-picker{display:block;position:relative}.iris-picker,.iris-picker *{-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input+.iris-picker{margin-top:4px}.iris-error{background-color:#ffafaf}.iris-border{border-radius:3px;border:1px solid #aaa;width:200px;background-color:#fff}.iris-picker-inner{position:absolute;top:0;right:0;left:0;bottom:0}.iris-border .iris-picker-inner{top:10px;right:10px;left:10px;bottom:10px}.iris-picker .iris-square-inner{position:absolute;left:0;right:0;top:0;bottom:0}.iris-picker .iris-square,.iris-picker .iris-slider,.iris-picker .iris-square-inner,.iris-picker .iris-palette{border-radius:3px;box-shadow:inset 0 0 5px rgba(0,0,0,.4);height:100%;width:12.5%;float:left;margin-right:5%}.iris-picker .iris-square{width:76%;margin-right:10%;position:relative}.iris-picker .iris-square-inner{width:auto;margin:0}.iris-ie-9 .iris-square,.iris-ie-9 .iris-slider,.iris-ie-9 .iris-square-inner,.iris-ie-9 .iris-palette{box-shadow:none;border-radius:0}.iris-ie-9 .iris-square,.iris-ie-9 .iris-slider,.iris-ie-9 .iris-palette{outline:1px solid rgba(0,0,0,.1)}.iris-ie-lt9 .iris-square,.iris-ie-lt9 .iris-slider,.iris-ie-lt9 .iris-square-inner,.iris-ie-lt9 .iris-palette{outline:1px solid #aaa}.iris-ie-lt9 .iris-square .ui-slider-handle{outline:1px solid #aaa;background-color:#fff;-ms-filter:"alpha(Opacity=30)"}.iris-ie-lt9 .iris-square .iris-square-handle{background:0;border:3px solid #fff;-ms-filter:"alpha(Opacity=50)"}.iris-picker .iris-strip{margin-right:0;position:relative}.iris-picker .iris-strip .ui-slider-handle{position:absolute;background:0;margin:0;right:-3px;left:-3px;border:4px solid #aaa;border-width:4px 3px;width:auto;height:6px;border-radius:4px;box-shadow:0 1px 2px rgba(0,0,0,.2);opacity:.9;z-index:5;cursor:ns-resize}.iris-strip .ui-slider-handle:before{content:" ";position:absolute;left:-2px;right:-2px;top:-3px;bottom:-3px;border:2px solid #fff;border-radius:3px}.iris-picker .iris-slider-offset{position:absolute;top:11px;left:0;right:0;bottom:-3px;width:auto;height:auto;background:transparent;border:0;border-radius:0}.iris-picker .iris-square-handle{background:transparent;border:5px solid #aaa;border-radius:50%;border-color:rgba(128,128,128,.5);box-shadow:none;width:12px;height:12px;position:absolute;left:-10px;top:-10px;cursor:move;opacity:1;z-index:10}.iris-picker .ui-state-focus .iris-square-handle{opacity:.8}.iris-picker .iris-square-handle:hover{border-color:#999}.iris-picker .iris-square-value:focus .iris-square-handle{box-shadow:0 0 2px rgba(0,0,0,.75);opacity:.8}.iris-picker .iris-square-handle:hover::after{border-color:#fff}.iris-picker .iris-square-handle::after{position:absolute;bottom:-4px;right:-4px;left:-4px;top:-4px;border:3px solid #f9f9f9;border-color:rgba(255,255,255,.8);border-radius:50%;content:" "}.iris-picker .iris-square-value{width:8px;height:8px;position:absolute}.iris-ie-lt9 .iris-square-value,.iris-mozilla .iris-square-value{width:1px;height:1px}.iris-palette-container{position:absolute;bottom:0;left:0;margin:0;padding:0}.iris-border .iris-palette-container{left:10px;bottom:10px}.iris-picker .iris-palette{margin:0;cursor:pointer}.iris-square-handle,.ui-slider-handle{border:0;outline:0}</style>
<!--<![endif]-->
</head>
<body>
<div class="dokuwiki export">
<!-- TOC START -->
<div id="dw__toc">
<h3 class="toggle open" style="cursor: pointer;"><strong><span>−</span></strong>Table of Contents</h3>
<div style="" aria-expanded="true">

<ul class="toc">
<li class="level1"><div class="li"><a href="#twh5dlldll_version_199">TwH5Dll.dll version 1.99</a></div>
<ul class="toc">
<li class="level2"><div class="li"><a href="#functions">Functions</a></div>
<ul class="toc">
<li class="level3"><div class="li"><a href="#twgeth5descriptor">TwGetH5Descriptor</a></div></li>
<li class="level3"><div class="li"><a href="#twcloseh5">TwCloseH5</a></div></li>
<li class="level3"><div class="li"><a href="#twcloseall">TwCloseAll</a></div></li>
<li class="level3"><div class="li"><a href="#twgetsumspectrumfromh5">TwGetSumSpectrumFromH5</a></div></li>
<li class="level3"><div class="li"><a href="#twgettofspectrumfromh5">TwGetTofSpectrumFromH5</a></div></li>
<li class="level3"><div class="li"><a href="#twgetstickspectrumfromh5">TwGetStickSpectrumFromH5</a></div></li>
<li class="level3"><div class="li"><a href="#twgetpeakparametersfromh5">TwGetPeakParametersFromH5</a></div></li>
<li class="level3"><div class="li"><a href="#twgetbuftimefromh5">TwGetBufTimeFromH5</a></div></li>
<li class="level3"><div class="li"><a href="#twgetspecxaxisfromh5">TwGetSpecXaxisFromH5</a></div></li>
<li class="level3"><div class="li"><a href="#twgetsegmentprofilefromh5">TwGetSegmentProfileFromH5</a></div></li>
<li class="level3"><div class="li"><a href="#twgetbufwriteprofilefromh5">TwGetBufWriteProfileFromH5</a></div></li>
<li class="level3"><div class="li"><a href="#twgetbufwriteprofilefromh5_2">TwGetBufWriteProfileFromH5_2</a></div></li>
<li class="level3"><div class="li"><a href="#twgetreguserdatasourcesfromh5">TwGetRegUserDataSourcesFromH5</a></div></li>
<li class="level3"><div class="li"><a href="#twgetreguserdatafromh5">TwGetRegUserDataFromH5</a></div></li>
<li class="level3"><div class="li"><a href="#twgetdata">TwGet...Data</a></div></li>
<li class="level3"><div class="li"><a href="#twgetattributefromh5">TwGet...AttributeFromH5</a></div></li>
<li class="level3"><div class="li"><a href="#twsetattributeinh5">TwSet...AttributeInH5</a></div></li>
<li class="level3"><div class="li"><a href="#twchangepeaktable">TwChangePeakTable</a></div></li>
<li class="level3"><div class="li"><a href="#twchangepeaktable2">TwChangePeakTable2</a></div></li>
<li class="level3"><div class="li"><a href="#twchangepeaktablefromfile">TwChangePeakTableFromFile</a></div></li>
<li class="level3"><div class="li"><a href="#twchangepeaktablefromfile2">TwChangePeakTableFromFile2</a></div></li>
<li class="level3"><div class="li"><a href="#twprogresscallback">TwProgressCallback</a></div></li>
<li class="level3"><div class="li"><a href="#twprogresscallback2">TwProgressCallback2</a></div></li>
<li class="level3"><div class="li"><a href="#twchangepeakdatainit">TwChangePeakDataInit</a></div></li>
<li class="level3"><div class="li"><a href="#twchangepeakdatawrite">TwChangePeakDataWrite</a></div></li>
<li class="level3"><div class="li"><a href="#twchangepeakdatafinalize">TwChangePeakDataFinalize</a></div></li>
<li class="level3"><div class="li"><a href="#twreadrawdata">TwReadRawData</a></div></li>
<li class="level3"><div class="li"><a href="#twh5setmasscalib">TwH5SetMassCalib</a></div></li>
<li class="level3"><div class="li"><a href="#twh5setmasscalibex">TwH5SetMassCalibEx</a></div></li>
<li class="level3"><div class="li"><a href="#twgetuserdatafromh5">TwGetUserDataFromH5</a></div></li>
<li class="level3"><div class="li"><a href="#twgetacquisitionlogfromh5">TwGetAcquisitionLogFromH5</a></div></li>
<li class="level3"><div class="li"><a href="#twgeteventlistspectrumfromh5">TwGetEventListSpectrumFromH5</a></div></li>
<li class="level3"><div class="li"><a href="#twgeteventlistdatafromh5">TwGetEventListDataFromH5</a></div></li>
<li class="level3"><div class="li"><a href="#twgeteventlistblobfromh5">TwGetEventListBlobFromH5</a></div></li>
<li class="level3"><div class="li"><a href="#twfreeeventlistdata">TwFreeEventListData</a></div></li>
<li class="level3"><div class="li"><a href="#twfreeeventlistdata2">TwFreeEventListData2</a></div></li>
<li class="level3"><div class="li"><a href="#twh5getmasscalibpar">TwH5GetMassCalibPar</a></div></li>
<li class="level3"><div class="li"><a href="#twmultipeakfitintegration">TwMultiPeakFitIntegration</a></div></li>
<li class="level3"><div class="li"><a href="#twh5addlogentry">TwH5AddLogEntry</a></div></li>
<li class="level3"><div class="li"><a href="#twh5adduserdatamultirow">TwH5AddUserDataMultiRow</a></div></li>
<li class="level3"><div class="li"><a href="#twh5setmasscalibdynamic">TwH5SetMassCalibDynamic</a></div></li>
<li class="level3"><div class="li"><a href="#twgeneratesegmentprofilesfromeventlist">TwGenerateSegmentProfilesFromEventList</a></div></li>
<li class="level3"><div class="li"><a href="#twh5makepaletteimage">TwH5MakePaletteImage</a></div></li>
<li class="level3"><div class="li"><a href="#twh5maketruecolorimage">TwH5MakeTrueColorImage</a></div></li>
<li class="level3"><div class="li"><a href="#twwritenetcdftimeseriesfile">TwWriteNetCdfTimeSeriesFile</a></div></li>
</ul>
</li>
<li class="level2"><div class="li"><a href="#data_structures">Data structures</a></div>
<ul class="toc">
<li class="level3"><div class="li"><a href="#twretval">TwRetVal</a></div></li>
<li class="level3"><div class="li"><a href="#twh5desc">TwH5Desc</a></div></li>
<li class="level3"><div class="li"><a href="#tpeakpar">TPeakPar</a></div></li>
</ul>
</li>
<li class="level2"><div class="li"><a href="#deprecated_functions">Deprecated functions</a></div></li>
<li class="level2"><div class="li"><a href="#previous_revisions">Previous revisions</a></div></li>
</ul></li>
</ul>
</div>
</div>
<!-- TOC END -->

<h1 class="sectionedit1" id="twh5dlldll_version_199">TwH5Dll.dll version 1.99</h1>
<div class="level1">

<p>
The functions contained in TwH5Dll.dll are used to access recorded data 
stored in Tofwerk HDF5 files. In principle all software that is capable 
of reading HDF5 files can be used to access the data contained in these 
files, but the user then needs to know about the internals of the 
Tofwerk HDF5 specification. The functions in this library are <strong>no</strong>
 general way to access HDF5 files, rather they represent an easy to use 
way to access the data contained in Tofwerk HDF5 files. Starting from 
version 1.95 <code>TwH5Dll.dll</code> has no longer dependencies to other (non-system) DLLs.
</p>

<p>
The library contains also functions that modify the data file. These 
functions should never be used on the data file being currently recorded
 into as this may lead to data file corruption. Use functions from <code>TofDaqDll.dll</code> to store data/attributes during data acquisition.
</p>

</div>
<!-- EDIT1 SECTION "TwH5Dll.dll version 1.99" [1-893] -->
<h2 class="sectionedit2" id="functions">Functions</h2>
<div class="level2">

<p>
Most of the functions contained in <code>TwH5Dll.dll</code> take a 
path/filename to the data file as argument to identify the data file. 
This string is passed directly to the HDF5 library so any string 
representing a valid filesystem location will work. However, accessed 
files are kept open within the <abbr title="Dynamic Link Library">DLL</abbr>
 and the path/filename string used to open the file is stored as this 
file's identifier. Therefore you should always use the same string to 
refer to a given file in order to avoid having two references to the 
same file. 
</p>

</div>
<!-- EDIT2 SECTION "Functions" [894-1435] -->
<h3 class="sectionedit3" id="twgeth5descriptor">TwGetH5Descriptor</h3>
<div class="level3">

</div>
<div class="level4">

</div>

<h4 id="purpose">Purpose</h4>
<div class="level4">

<p>
Returns a descriptor structure for the Tofwerk HDF5 file.
</p>

</div>

<h4 id="parameters">Parameters</h4>
<div class="level4">
<div class="table sectionedit4"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>Filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>descriptor</code>  </td><td class="col1 centeralign">  <code>TwH5Desc*</code>  </td><td class="col2"> user supplied <code>TwH5Desc</code> structure (by reference) </td>
	</tr>
</tbody></table></div>
<!-- EDIT4 TABLE [1566-1756] -->
</div>

<h4 id="return_value">Return value</h4>
<div class="level4">
<div class="table sectionedit5"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="3"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1"> file successfully opened and descriptor copied </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> <code>descriptor</code> is <code>NULL</code> or unhandled filesystem exception </td>
	</tr>
</tbody></table></div>
<!-- EDIT5 TABLE [1778-2083] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT3 SECTION "TwGetH5Descriptor" [1436-2093] -->
<h3 class="sectionedit6" id="twcloseh5">TwCloseH5</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwCloseH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose1">Purpose</h4>
<div class="level4">

<p>
Closes an open HDF5 file.
</p>

</div>

<h4 id="parameters1">Parameters</h4>
<div class="level4">
<div class="table sectionedit7"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>Filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
</tbody></table></div>
<!-- EDIT7 TABLE [2251-2348] -->
</div>

<h4 id="return_value1">Return value</h4>
<div class="level4">
<div class="table sectionedit8"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="2"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file was not open </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1"> file successfully closed </td>
	</tr>
</tbody></table></div>
<!-- EDIT8 TABLE [2370-2537] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT6 SECTION "TwCloseH5" [2094-2547] -->
<h3 class="sectionedit9" id="twcloseall">TwCloseAll</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwCloseAll<span class="br0">(</span><span class="kw4">void</span><span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose2">Purpose</h4>
<div class="level4">

<p>
Closes all open HDF5 file. It is a good idea to call this function once before your program exits.
</p>

</div>

<h4 id="parameters2">Parameters</h4>
<div class="level4">

<p>
none
</p>

</div>

<h4 id="return_value2">Return value</h4>
<div class="level4">
<div class="table sectionedit10"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwSuccess</code>  </td><td class="col2"> all data file were closed (if any) </td>
	</tr>
</tbody></table></div>
<!-- EDIT10 TABLE [2796-2908] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT9 SECTION "TwCloseAll" [2548-2918] -->
<h3 class="sectionedit11" id="twgetsumspectrumfromh5">TwGetSumSpectrumFromH5</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwGetSumSpectrumFromH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> Spectrum<span class="sy0">,</span> bool Normalize<span class="br0">)</span><span class="sy0">;</span>
TOFWERK_H5_API TwRetVal TwGetSumSpectrum2FromH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> Spectrum<span class="sy0">,</span> bool Normalize<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose3">Purpose</h4>
<div class="level4">

<p>
Reads the sum spectrum (or average spectrum depending on <code>Normalize</code> flag) from the HDF5 file.
</p>

</div>

<h4 id="parameters3">Parameters</h4>
<div class="level4">
<div class="table sectionedit12"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>Filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>Spectrum</code>  </td><td class="col1 centeralign">  <code>double*</code>  </td><td class="col2"> array of doubles of minimal length nbrSamples </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>Normalize</code>  </td><td class="col1 centeralign">  <code>bool</code>  </td><td class="col2"> flag indicating whether the spectrum should be normalized to a per extraction value or reported as sum</td>
	</tr>
</tbody></table></div>
<!-- EDIT12 TABLE [3306-3623] -->
</div>

<h4 id="return_value3">Return value</h4>
<div class="level4">
<div class="table sectionedit13"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="4"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1"> spectrum was successfully copied from file </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwNoData</code>  </td><td class="col1"> data file does not contain a sum spectrum </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> <code>Spectrum</code> is <code>NULL</code> or unhandled filesystem exception </td>
	</tr>
</tbody></table></div>
<!-- EDIT13 TABLE [3645-4022] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT11 SECTION "TwGetSumSpectrumFromH5" [2919-4032] -->
<h3 class="sectionedit14" id="twgettofspectrumfromh5">TwGetTofSpectrumFromH5</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwGetTofSpectrumFromH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">float</span><span class="sy0">*</span> Spectrum<span class="sy0">,</span> <span class="kw4">int</span> SegmentIndex<span class="sy0">,</span> <span class="kw4">int</span> SegmentEndIndex<span class="sy0">,</span> <span class="kw4">int</span> BufIndex<span class="sy0">,</span> <span class="kw4">int</span> BufEndIndex<span class="sy0">,</span> <span class="kw4">int</span> WriteIndex<span class="sy0">,</span> <span class="kw4">int</span> WriteEndIndex<span class="sy0">,</span> bool BufWriteLinked<span class="sy0">,</span> bool Normalize<span class="br0">)</span><span class="sy0">;</span>
TOFWERK_H5_API TwRetVal TwGetTofSpectrum2FromH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">float</span><span class="sy0">*</span> Spectrum<span class="sy0">,</span> <span class="kw4">int</span> SegmentIndex<span class="sy0">,</span> <span class="kw4">int</span> SegmentEndIndex<span class="sy0">,</span> <span class="kw4">int</span> BufIndex<span class="sy0">,</span> <span class="kw4">int</span> BufEndIndex<span class="sy0">,</span> <span class="kw4">int</span> WriteIndex<span class="sy0">,</span> <span class="kw4">int</span> WriteEndIndex<span class="sy0">,</span> bool BufWriteLinked<span class="sy0">,</span> bool Normalize<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose4">Purpose</h4>
<div class="level4">

<p>
Retrieves a single mass spectrum from the data file (possibly averaged/summed hyperslab). If <code>SegmentIndex==SegmentEndIndex</code> and <code>BufIndex==BufEndIndex</code> and <code>WriteIndex==WriteEndIndex</code> and <code>Normalize==false</code> no averaging/summing of spectra is done and the spectrum is reported as stored in the dataset.
</p>

</div>

<h4 id="parameters4">Parameters</h4>
<div class="level4">
<div class="table sectionedit15"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>Filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>Spectrum</code>  </td><td class="col1 centeralign">  <code>float*</code>  </td><td class="col2"> array of floats of minimal length nbrSamples </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>SegmentIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> segment start index of data to fetch </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>SegmentEndIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> segment end index of data to fetch </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>BufIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> buf index of data to fetch </td>
	</tr>
	<tr class="row6">
		<td class="col0 centeralign">  <code>BufEndIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> buf end index of data to fetch </td>
	</tr>
	<tr class="row7">
		<td class="col0 centeralign">  <code>WriteIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> write index of data to fetch </td>
	</tr>
	<tr class="row8">
		<td class="col0 centeralign">  <code>WriteEndIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> write end index of data to fetch </td>
	</tr>
	<tr class="row9">
		<td class="col0 centeralign">  <code>BufWriteLinked</code>  </td><td class="col1 centeralign">  <code>bool</code>  </td><td class="col2">
 flag indicating whether the buf and write dimension should be 
considered linked or treated as independant dimensions (relevant only if
 <code>WriteIndex != WriteEndIndex</code> )</td>
	</tr>
	<tr class="row10">
		<td class="col0 centeralign">  <code>Normalize</code>  </td><td class="col1 centeralign">  <code>bool</code>  </td><td class="col2"> flag indicating whether the spectrum should be normalized to a per extraction value or reported as sum</td>
	</tr>
</tbody></table></div>
<!-- EDIT15 TABLE [4884-5818] -->
</div>

<h4 id="return_value4">Return value</h4>
<div class="level4">
<div class="table sectionedit16"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="5"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1"> spectrum was successfully copied from file </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwNoData</code>  </td><td class="col1"> data file does not contain a sum spectrum </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> <code>Spectrum</code> is <code>NULL</code> or unhandled filesystem exception </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>TwOutOfBounds</code>  </td><td class="col1"> at least one of the indices is out of range </td>
	</tr>
</tbody></table></div>
<!-- EDIT16 TABLE [5840-6302] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT14 SECTION "TwGetTofSpectrumFromH5" [4033-6312] -->
<h3 class="sectionedit17" id="twgetstickspectrumfromh5">TwGetStickSpectrumFromH5</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwGetStickSpectrumFromH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">float</span><span class="sy0">*</span> Spectrum<span class="sy0">,</span> <span class="kw4">int</span> SegmentIndex<span class="sy0">,</span> <span class="kw4">int</span> SegmentEndIndex<span class="sy0">,</span> <span class="kw4">int</span> BufIndex<span class="sy0">,</span> <span class="kw4">int</span> BufEndIndex<span class="sy0">,</span> <span class="kw4">int</span> WriteIndex<span class="sy0">,</span> <span class="kw4">int</span> WriteEndIndex<span class="sy0">,</span> bool BufWriteLinked<span class="sy0">,</span> bool Normalize<span class="br0">)</span><span class="sy0">;</span>
TOFWERK_H5_API TwRetVal TwGetStickSpectrum2FromH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">float</span><span class="sy0">*</span> Spectrum<span class="sy0">,</span> <span class="kw4">int</span> SegmentIndex<span class="sy0">,</span> <span class="kw4">int</span> SegmentEndIndex<span class="sy0">,</span> <span class="kw4">int</span> BufIndex<span class="sy0">,</span> <span class="kw4">int</span> BufEndIndex<span class="sy0">,</span> <span class="kw4">int</span> WriteIndex<span class="sy0">,</span> <span class="kw4">int</span> WriteEndIndex<span class="sy0">,</span> bool BufWriteLinked<span class="sy0">,</span> bool Normalize<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose5">Purpose</h4>
<div class="level4">

<p>
Retrieves a single stick spectrum from the data file (possibly averaged/summed hyperslab). If <code>SegmentIndex==SegmentEndIndex</code> and <code>BufIndex==BufEndIndex</code> and <code>WriteIndex==WriteEndIndex</code> and <code>Normalize==false</code> no averaging/summing of spectra is done and the spectrum is reported as stored in the dataset.
</p>

</div>

<h4 id="parameters5">Parameters</h4>
<div class="level4">
<div class="table sectionedit18"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>Filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>Spectrum</code>  </td><td class="col1 centeralign">  <code>float*</code>  </td><td class="col2"> array of floats of minimal length nbrPeaks </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>SegmentIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> segment start index of data to fetch </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>SegmentEndIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> segment end index of data to fetch </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>BufIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> buf index of data to fetch </td>
	</tr>
	<tr class="row6">
		<td class="col0 centeralign">  <code>BufEndIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> buf end index of data to fetch </td>
	</tr>
	<tr class="row7">
		<td class="col0 centeralign">  <code>WriteIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> write index of data to fetch </td>
	</tr>
	<tr class="row8">
		<td class="col0 centeralign">  <code>WriteEndIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> write end index of data to fetch </td>
	</tr>
	<tr class="row9">
		<td class="col0 centeralign">  <code>BufWriteLinked</code>  </td><td class="col1 centeralign">  <code>bool</code>  </td><td class="col2">
 flag indicating whether the buf and write dimension should be 
considered linked or treated as independant dimensions (relevant only if
 <code>WriteIndex != WriteEndIndex</code> )</td>
	</tr>
	<tr class="row10">
		<td class="col0 centeralign">  <code>Normalize</code>  </td><td class="col1 centeralign">  <code>bool</code>  </td><td class="col2"> flag indicating whether the spectrum should be normalized to a per extraction value or reported as sum</td>
	</tr>
</tbody></table></div>
<!-- EDIT18 TABLE [7171-8103] -->
</div>

<h4 id="return_value5">Return value</h4>
<div class="level4">
<div class="table sectionedit19"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="5"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1"> spectrum was successfully copied from file </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwNoData</code>  </td><td class="col1"> data file does not contain a sum spectrum </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> <code>Spectrum</code> is <code>NULL</code> or unhandled filesystem exception </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>TwOutOfBounds</code>  </td><td class="col1"> at least one of the indices is out of range </td>
	</tr>
</tbody></table></div>
<!-- EDIT19 TABLE [8125-8587] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT17 SECTION "TwGetStickSpectrumFromH5" [6313-8597] -->
<h3 class="sectionedit20" id="twgetpeakparametersfromh5">TwGetPeakParametersFromH5</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwGetPeakParametersFromH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> TPeakPar<span class="sy0">*</span> PeakPar<span class="sy0">,</span> <span class="kw4">int</span> PeakIndex<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose6">Purpose</h4>
<div class="level4">

<p>
Reads a single or all peak parameters from the data file.
</p>

</div>

<h4 id="parameters6">Parameters</h4>
<div class="level4">
<div class="table sectionedit21"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>Filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>PeakPar</code>  </td><td class="col1 centeralign">  <code>TPeakPar*</code>  </td><td class="col2"> if <code>PeakIndex</code> is -1 <code>PeakPar</code> should point to an array of <code>TPeakPar</code> of minimal length nbrPeaks. If <code>PeakIndex</code> is in the range 0 … nbrPeaks-1 pass a single <code>TPeakPar</code> by reference (array of length 1). </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>PeakIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> index of peak to fetch parameters. Use -1 to read parameters of all peaks. </td>
	</tr>
</tbody></table></div>
<!-- EDIT21 TABLE [8853-9312] -->
</div>

<h4 id="return_value6">Return value</h4>
<div class="level4">
<div class="table sectionedit22"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="4"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1"> peak parameters were successfully copied from file </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwOutOfBounds</code>  </td><td class="col1"> if <code>PeakIndex</code> is not in range -1 … nbrPeaks-1 </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> <code>PeakPar</code> is <code>NULL</code> or unhandled filesystem exception </td>
	</tr>
</tbody></table></div>
<!-- EDIT22 TABLE [9334-9732] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT20 SECTION "TwGetPeakParametersFromH5" [8598-9742] -->
<h3 class="sectionedit23" id="twgetbuftimefromh5">TwGetBufTimeFromH5</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwGetBufTimeFromH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> BufTime<span class="sy0">,</span> <span class="kw4">int</span> BufIndex<span class="sy0">,</span> <span class="kw4">int</span> WriteIndex<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose7">Purpose</h4>
<div class="level4">

<p>
Reads a single buf time stamp from the data file.
</p>

</div>

<h4 id="parameters7">Parameters</h4>
<div class="level4">
<div class="table sectionedit24"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>Filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>BufTime</code>  </td><td class="col1 centeralign">  <code>double*</code>  </td><td class="col2"> receives the time stamp (in seconds relative to acquisition start) </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>BufIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2 leftalign"> buf index  </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>WriteIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2 leftalign"> write index  </td>
	</tr>
</tbody></table></div>
<!-- EDIT24 TABLE [9989-10281] -->
</div>

<h4 id="return_value7">Return value</h4>
<div class="level4">
<div class="table sectionedit25"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="4"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1"> time stamp successfully copied to <code>*BufTime</code> </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwOutOfBounds</code>  </td><td class="col1"> if <code>BufIndex</code> or <code>WriteIndex</code> is out of valid range </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> <code>BufTime</code> is <code>NULL</code> or unhandled filesystem exception </td>
	</tr>
</tbody></table></div>
<!-- EDIT25 TABLE [10303-10702] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT23 SECTION "TwGetBufTimeFromH5" [9743-10712] -->
<h3 class="sectionedit26" id="twgetspecxaxisfromh5">TwGetSpecXaxisFromH5</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwGetSpecXaxisFromH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> SpecAxis<span class="sy0">,</span> <span class="kw4">int</span> Type<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> UnitLabel<span class="sy0">,</span> <span class="kw4">double</span> maxMass<span class="sy0">,</span> <span class="kw4">int</span> writeIndex<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose8">Purpose</h4>
<div class="level4">

<p>
Returns an array of x-axis values for mass spectrum display.
</p>

</div>

<h4 id="parameters8">Parameters</h4>
<div class="level4">
<div class="table sectionedit27"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>Filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>SpecAxis</code>  </td><td class="col1 centeralign">  <code>double*</code>  </td><td class="col2"> array of doubles of minimal length nbrSamples </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>Type</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2 leftalign"> abscissa type (0: sampleindex, 1: mass/charge [Th], -1: mass/charge [Th] (2nd <abbr title="Time Of Flight">TOF</abbr>), 2: time of flight [μs], -2: time of flight [μs] (2nd <abbr title="Time Of Flight">TOF</abbr>), 3: frequency [kHz])  </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>UnitLabel</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> string buffer of minimal length 64 receiving a string that can be used as axis label (can be <code>NULL</code> if not needed) </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>maxMass</code>  </td><td class="col1 centeralign">  <code>double</code>  </td><td class="col2"> maximum mass value to report (relevant only for <code>abs(Type)==1</code>). masses &gt; <code>maxMass</code> are set to <code>maxMass</code>. Pass 0.0 to get unaltered mass values. </td>
	</tr>
	<tr class="row6">
		<td class="col0 centeralign">  <code>writeIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> write index to use for mass calibration (relevant only for <code>abs(Type)== 1 or 2</code>). If the data file has no <code>/TofData/MassCalibration</code> dataset the standard mass calibration parameters are used (same for all values of <code>writeIndex</code>).</td>
	</tr>
</tbody></table></div>
<!-- EDIT27 TABLE [11004-11988] -->
</div>

<h4 id="return_value8">Return value</h4>
<div class="level4">
<div class="table sectionedit28"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="4"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1"> axis values were successfully copied from file </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwOutOfBounds</code>  </td><td class="col1"> if <code>Type</code> or <code>writeIndex</code> is not in valid range (range checking for <code>writeIndex</code> is only done for data files with a <code>/TofData/MassCalibration</code> dataset and <code>Type==1</code>.) </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> <code>SpecAxis</code> is <code>NULL</code> or unhandled filesystem exception </td>
	</tr>
</tbody></table></div>
<!-- EDIT28 TABLE [12010-12531] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT26 SECTION "TwGetSpecXaxisFromH5" [10713-12541] -->
<h3 class="sectionedit29" id="twgetsegmentprofilefromh5">TwGetSegmentProfileFromH5</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwGetSegmentProfileFromH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">float</span><span class="sy0">*</span> SegmentProfile<span class="sy0">,</span> <span class="kw4">int</span> PeakIndex<span class="sy0">,</span> <span class="kw4">int</span> BufStartIndex<span class="sy0">,</span> <span class="kw4">int</span> BufEndIndex<span class="sy0">,</span> <span class="kw4">int</span> WriteStartIndex<span class="sy0">,</span> <span class="kw4">int</span> WriteEndIndex<span class="sy0">,</span> bool BufWriteLinked<span class="br0">)</span><span class="sy0">;</span>
TOFWERK_H5_API TwRetVal TwGetSegmentProfile2FromH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">float</span><span class="sy0">*</span> SegmentProfile<span class="sy0">,</span> <span class="kw4">int</span> PeakIndex<span class="sy0">,</span> <span class="kw4">int</span> BufStartIndex<span class="sy0">,</span> <span class="kw4">int</span> BufEndIndex<span class="sy0">,</span> <span class="kw4">int</span> WriteStartIndex<span class="sy0">,</span> <span class="kw4">int</span> WriteEndIndex<span class="sy0">,</span> bool BufWriteLinked<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose9">Purpose</h4>
<div class="level4">

<p>
Reads a segment profile for a given peak (or all peaks), buf and write.
</p>

</div>

<h4 id="parameters9">Parameters</h4>
<div class="level4">
<div class="table sectionedit30"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>Filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>SegmentProfile</code>  </td><td class="col1 centeralign">  <code>float*</code>  </td><td class="col2"> array of floats of minimal length nbrSegments (nbrSegments*nbrPeaks if <code>PeakIndex</code> is -1) </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>PeakIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> index of peak to fetch segment profile. Pass -1 to get segment profiles for all peaks. </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>BufStartIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> buf start index of segment profile to fetch </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>BufEndIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> buf end index of segment profile to fetch </td>
	</tr>
	<tr class="row6">
		<td class="col0 centeralign">  <code>WriteStartIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> write start index of segment profile to fetch </td>
	</tr>
	<tr class="row7">
		<td class="col0 centeralign">  <code>WriteEndIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> write end index of segment profile to fetch </td>
	</tr>
	<tr class="row8">
		<td class="col0 centeralign">  <code>BufWriteLinked</code>  </td><td class="col1 centeralign">  <code>bool </code>  </td><td class="col2"> treat buf and write dimensions as linked </td>
	</tr>
</tbody></table></div>
<!-- EDIT30 TABLE [13115-13877] -->
</div>

<h4 id="return_value9">Return value</h4>
<div class="level4">
<div class="table sectionedit31"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="4"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1"> profile was copied from file </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwOutOfBounds</code>  </td><td class="col1"> if an index is not in valid range </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> <code>SegmentProfile</code> is <code>NULL</code> or unhandled filesystem exception </td>
	</tr>
</tbody></table></div>
<!-- EDIT31 TABLE [13899-14265] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT29 SECTION "TwGetSegmentProfileFromH5" [12542-14276] -->
<h3 class="sectionedit32" id="twgetbufwriteprofilefromh5">TwGetBufWriteProfileFromH5</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwGetBufWriteProfileFromH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">float</span><span class="sy0">*</span> Profile<span class="sy0">,</span> <span class="kw4">int</span> PeakIndex<span class="sy0">,</span> <span class="kw4">int</span> SegmentStartIndex<span class="sy0">,</span> <span class="kw4">int</span> SegmentEndIndex<span class="br0">)</span><span class="sy0">;</span>
TOFWERK_H5_API TwRetVal TwGetBufWriteProfile2FromH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">float</span><span class="sy0">*</span> Profile<span class="sy0">,</span> <span class="kw4">int</span> PeakIndex<span class="sy0">,</span> <span class="kw4">int</span> SegmentStartIndex<span class="sy0">,</span> <span class="kw4">int</span> SegmentEndIndex<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose10">Purpose</h4>
<div class="level4">

<p>
Reads a linked buf/write profile for a given peak (or all peaks) and segment slice. If your data is not linked, use <code>TwGetBufProfileFromH5</code>/<code>TwGetWriteProfileFromH5</code> or <code>TwGetPeakData</code> to get the buf and/or write profiles.
</p>

</div>

<h4 id="parameters10">Parameters</h4>
<div class="level4">
<div class="table sectionedit33"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>Filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>Profile</code>  </td><td class="col1 centeralign">  <code>float*</code>  </td><td class="col2"> array of floats of minimal length nbrBufs*nbrWrites (nbrBufs*nbrWrites*nbrPeaks if <code>PeakIndex</code> is -1) </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>PeakIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> index of peak to fetch buf/write profile. Pass -1 to get buf/write profiles for all peaks. </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>SegmentStartIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> segment start index </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>SegmentEndIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> segment end index </td>
	</tr>
</tbody></table></div>
<!-- EDIT33 TABLE [14890-15371] -->
</div>

<h4 id="return_value10">Return value</h4>
<div class="level4">
<div class="table sectionedit34"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="4"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1"> profile was copied from file </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwOutOfBounds</code>  </td><td class="col1"> if an index is not in valid range </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> <code>Profile</code> is <code>NULL</code> or unhandled filesystem exception </td>
	</tr>
</tbody></table></div>
<!-- EDIT34 TABLE [15393-15752] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT32 SECTION "TwGetBufWriteProfileFromH5" [14277-15762] -->
<h3 class="sectionedit35" id="twgetbufwriteprofilefromh5_2">TwGetBufWriteProfileFromH5_2</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwGetBufWriteProfileFromH5_2<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">float</span><span class="sy0">*</span> Profile<span class="sy0">,</span> <span class="kw4">int</span> PeakIndex<span class="sy0">,</span> <span class="kw4">int</span> SegmentStartIndex<span class="sy0">,</span> <span class="kw4">int</span> SegmentEndIndex<span class="sy0">,</span> TwProgressCallback<span class="sy0">*</span> callback<span class="sy0">,</span> TwProgressCallback2<span class="sy0">*</span> callback2<span class="sy0">,</span> <span class="kw4">void</span><span class="sy0">*</span> cb2UserData<span class="br0">)</span><span class="sy0">;</span>
TOFWERK_H5_API TwRetVal TwGetBufWriteProfile2FromH5_2<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">float</span><span class="sy0">*</span> Profile<span class="sy0">,</span> <span class="kw4">int</span> PeakIndex<span class="sy0">,</span> <span class="kw4">int</span> SegmentStartIndex<span class="sy0">,</span> <span class="kw4">int</span> SegmentEndIndex<span class="sy0">,</span> TwProgressCallback<span class="sy0">*</span> callback<span class="sy0">,</span> TwProgressCallback2<span class="sy0">*</span> callback2<span class="sy0">,</span> <span class="kw4">void</span><span class="sy0">*</span> cb2UserData<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose11">Purpose</h4>
<div class="level4">

<p>
Same as TwGetBufWriteProfileFromH5 but with callbacks to get notified of progress and possibility to abort.
</p>

</div>

<h4 id="parameters11">Parameters</h4>
<div class="level4">
<div class="table sectionedit36"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>Filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>Profile</code>  </td><td class="col1 centeralign">  <code>float*</code>  </td><td class="col2"> array of floats of minimal length nbrBufs*nbrWrites (nbrBufs*nbrWrites*nbrPeaks if <code>PeakIndex</code> is -1) </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>PeakIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> index of peak to fetch buf/write profile. Pass -1 to get buf/write profiles for all peaks. </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>SegmentStartIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> segment start index </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>SegmentEndIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> segment end index </td>
	</tr>
	<tr class="row6">
		<td class="col0 centeralign">  <code>callback</code>  </td><td class="col1 centeralign">  <code>TwProgressCallback*</code>  </td><td class="col2"> callback function </td>
	</tr>
	<tr class="row7">
		<td class="col0 centeralign">  <code>callback2</code>  </td><td class="col1 centeralign">  <code>TwProgressCallback2*</code>  </td><td class="col2"> new callback function </td>
	</tr>
	<tr class="row8">
		<td class="col0 centeralign">  <code>cb2UserData</code>  </td><td class="col1 centeralign">  <code>void*</code>  </td><td class="col2"> user data passed with new callback function </td>
	</tr>
</tbody></table></div>
<!-- EDIT36 TABLE [16423-17126] -->
</div>

<h4 id="return_value11">Return value</h4>
<div class="level4">
<div class="table sectionedit37"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="4"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1"> profile was copied from file </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwOutOfBounds</code>  </td><td class="col1"> if an index is not in valid range </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> <code>Profile</code> is <code>NULL</code> or unhandled filesystem exception </td>
	</tr>
</tbody></table></div>
<!-- EDIT37 TABLE [17148-17507] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT35 SECTION "TwGetBufWriteProfileFromH5_2" [15763-17517] -->
<h3 class="sectionedit38" id="twgetreguserdatasourcesfromh5">TwGetRegUserDataSourcesFromH5</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwGetRegUserDataSourcesFromH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> filename<span class="sy0">,</span> <span class="kw4">int</span><span class="sy0">*</span> nbrSources<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> sourceLocation<span class="sy0">,</span> <span class="kw4">int</span><span class="sy0">*</span> sourceLength<span class="sy0">,</span> bool<span class="sy0">*</span> hasDesc<span class="sy0">,</span> <span class="kw4">int</span><span class="sy0">*</span> type<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose12">Purpose</h4>
<div class="level4">

<p>
Lists all registered user data sets available in the data file. 
Registered data source can originate from data source plugins, TofDaq 
recorder (e.g. <abbr title="Data Acquisition">DAQ</abbr> temperatures) or data registered through <code>TwRegisterUserData…</code> <abbr title="Atmospheric Pressure Interface / Application Programming Interface">API</abbr> functions. This function is typically called twice per data file: the first time <code>sourceLocation</code>, <code>sourceLength</code>, <code>hasDesc</code> and <code>type</code> are <code>NULL</code> and <code>nbrSources</code> points to 0. Expect <code>TwValueAdjusted</code> and call again with allocated arrays and expect <code>TwSuccess</code>.
</p>

</div>

<h4 id="parameters12">Parameters</h4>
<div class="level4">
<div class="table sectionedit39"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>Filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>nbrSources</code>  </td><td class="col1 centeralign">  <code>int*</code>  </td><td class="col2"> size of arrays (by reference). Holds actual size on function return. </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>sourceLocation</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> location of registered data sources. Size must be at least (*nbrSources) * 256 </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>sourceLength</code>  </td><td class="col1 centeralign">  <code>int*</code>  </td><td class="col2"> <code>int</code> array of minimal length <code>*nbrSources</code> </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>hasDesc</code>  </td><td class="col1 centeralign">  <code>bool*</code>  </td><td class="col2"> <code>bool</code> array of minimal length <code>*nbrSources</code> </td>
	</tr>
	<tr class="row6">
		<td class="col0 centeralign">  <code>type</code>  </td><td class="col1 centeralign">  <code>int*</code>  </td><td class="col2"> <code>int</code> array of minimal length <code>*nbrSources</code> </td>
	</tr>
</tbody></table></div>
<!-- EDIT39 TABLE [18276-18845] -->
</div>

<h4 id="return_value12">Return value</h4>
<div class="level4">
<div class="table sectionedit40"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="4"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1"> available registered data sources successfully queried </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> <code>nbrSources</code> is <code>NULL</code> or <code>sourceLocation</code>, <code>sourceLength</code>, <code>hasDesc</code> and <code>type</code> are <code>NULL</code> and <code>nbrSources</code> points to something else than 0 </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwValueAdjusted</code>  </td><td class="col1"> <code>*nbrSources</code> and number of sources in the file did not match. On function return <code>*nbrSources</code> holds the correct size. </td>
	</tr>
</tbody></table></div>
<!-- EDIT40 TABLE [18868-19444] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT38 SECTION "TwGetRegUserDataSourcesFromH5" [17518-19454] -->
<h3 class="sectionedit41" id="twgetreguserdatafromh5">TwGetRegUserDataFromH5</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwGetRegUserDataFromH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> location<span class="sy0">,</span> <span class="kw4">int</span> bufIndex<span class="sy0">,</span> <span class="kw4">int</span> writeIndex<span class="sy0">,</span>
		                               <span class="kw4">int</span><span class="sy0">*</span> bufLength<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> buffer<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> description<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose13">Purpose</h4>
<div class="level4">

<p>
Reads an entry (or all entries) from a registered data source dataset (created by <code>TwRegisterUserData…</code> functions).
</p>

</div>

<h4 id="parameters13">Parameters</h4>
<div class="level4">
<div class="table sectionedit42"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>Filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>location</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> location of the group holding the <code>TwData</code> (and <code>TwInfo</code> if it exists) dataset </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>bufIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> buf index to fetch user data (pass -1 for complete dataset) </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>writeIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> write index to fetch user data (pass -1 for complete dataset) </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>bufLength</code>  </td><td class="col1 centeralign">  <code>int*</code>  </td><td class="col2"> buffer size (passed by reference), set to actual data size on function return (see return value) </td>
	</tr>
	<tr class="row6">
		<td class="col0 centeralign">  <code>buffer</code>  </td><td class="col1 centeralign">  <code>double*</code>  </td><td class="col2"> data buffer, length depends on the dataset. You can query the data size by passing 0 for <code>*bufLength</code> and <code>NULL</code> for <code>buffer</code> and <code>description</code> (return value will be <code>TwValueAdjusted</code>).</td>
	</tr>
	<tr class="row7">
		<td class="col0 centeralign">  <code>description</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> user supplied string buffer of minimal size 256*<code>bufLength</code>, can be NULL if data description is not needed </td>
	</tr>
</tbody></table></div>
<!-- EDIT42 TABLE [19862-20776] -->
</div>

<h4 id="return_value13">Return value</h4>
<div class="level4">
<div class="table sectionedit43"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="5"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1"> data was copied from file </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwOutOfBounds</code>  </td><td class="col1"> if an index is not in valid range </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> <code>buffer</code> is <code>NULL</code> and <code>*bufLength &gt; 0</code> or unhandled filesystem exception </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>TwValueAdjusted</code>  </td><td class="col1"> <code>*buflength</code> and actual data dimensions did not match. On function return <code>*bufLength</code> holds the correct size. </td>
	</tr>
</tbody></table></div>
<!-- EDIT43 TABLE [20798-21334] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT41 SECTION "TwGetRegUserDataFromH5" [19455-21344] -->
<h3 class="sectionedit44" id="twgetdata">TwGet...Data</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwGetTofData<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">int</span> sampleOffset<span class="sy0">,</span> <span class="kw4">int</span> sampleCount<span class="sy0">,</span> <span class="kw4">int</span> segOffset<span class="sy0">,</span> <span class="kw4">int</span> segCount<span class="sy0">,</span> <span class="kw4">int</span> bufOffset<span class="sy0">,</span> <span class="kw4">int</span> bufCount<span class="sy0">,</span> <span class="kw4">int</span> writeOffset<span class="sy0">,</span> <span class="kw4">int</span> writeCount<span class="sy0">,</span> <span class="kw4">float</span><span class="sy0">*</span> dataBuffer<span class="br0">)</span><span class="sy0">;</span>
TOFWERK_H5_API TwRetVal TwGetTofData2<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">int</span> sampleOffset<span class="sy0">,</span> <span class="kw4">int</span> sampleCount<span class="sy0">,</span> <span class="kw4">int</span> segOffset<span class="sy0">,</span> <span class="kw4">int</span> segCount<span class="sy0">,</span> <span class="kw4">int</span> bufOffset<span class="sy0">,</span> <span class="kw4">int</span> bufCount<span class="sy0">,</span> <span class="kw4">int</span> writeOffset<span class="sy0">,</span> <span class="kw4">int</span> writeCount<span class="sy0">,</span> <span class="kw4">float</span><span class="sy0">*</span> dataBuffer<span class="br0">)</span><span class="sy0">;</span>
TOFWERK_H5_API TwRetVal TwGetPeakData<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">int</span> peakOffset<span class="sy0">,</span> <span class="kw4">int</span> peakCount<span class="sy0">,</span> <span class="kw4">int</span> segOffset<span class="sy0">,</span> <span class="kw4">int</span> segCount<span class="sy0">,</span> <span class="kw4">int</span> bufOffset<span class="sy0">,</span> <span class="kw4">int</span> bufCount<span class="sy0">,</span> <span class="kw4">int</span> writeOffset<span class="sy0">,</span> <span class="kw4">int</span> writeCount<span class="sy0">,</span> <span class="kw4">float</span><span class="sy0">*</span> dataBuffer<span class="br0">)</span><span class="sy0">;</span>
TOFWERK_H5_API TwRetVal TwGetPeakData2<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">int</span> peakOffset<span class="sy0">,</span> <span class="kw4">int</span> peakCount<span class="sy0">,</span> <span class="kw4">int</span> segOffset<span class="sy0">,</span> <span class="kw4">int</span> segCount<span class="sy0">,</span> <span class="kw4">int</span> bufOffset<span class="sy0">,</span> <span class="kw4">int</span> bufCount<span class="sy0">,</span> <span class="kw4">int</span> writeOffset<span class="sy0">,</span> <span class="kw4">int</span> writeCount<span class="sy0">,</span> <span class="kw4">float</span><span class="sy0">*</span> dataBuffer<span class="br0">)</span><span class="sy0">;</span>
TOFWERK_H5_API TwRetVal TwGetTimingData<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">int</span> bufOffset<span class="sy0">,</span> <span class="kw4">int</span> bufCount<span class="sy0">,</span> <span class="kw4">int</span> writeOffset<span class="sy0">,</span> <span class="kw4">int</span> writeCount<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> dataBuffer<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose14">Purpose</h4>
<div class="level4">

<p>
These functions provide direct access to the data stored in <code>/FullSpectra/TofData</code>, <code>/Timing/BufTimes</code> and <code>/PeakData/PeakData</code> and their corresponding bipolar variants. Most of the <code>TwGet…FromH5</code>
 functions use these functions internally. It is in the responsability 
of the caller to provide correctly sized and typed data buffers and 
interpret the contents correctly.
</p>

</div>

<h4 id="parameters14">Parameters</h4>
<div class="level4">
<div class="table sectionedit45"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>Filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>…Offset</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> data offset for a given dimension </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>…Count</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> data count for a given dimension </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>dataBuffer</code>  </td><td class="col1 centeralign">  <code>float*/double*</code>  </td><td class="col2"> array of type <code>float</code> (<code>TofData</code>, <code>PeakData</code>) or <code>double</code> (<code>Timing</code>). The length of the array should be the product of all <code>…Count</code> values. </td>
	</tr>
</tbody></table></div>
<!-- EDIT45 TABLE [22738-23169] -->
</div>

<h4 id="return_value14">Return value</h4>
<div class="level4">
<div class="table sectionedit46"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="3"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1"> data was copied from file </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> <code>dataBuffer</code> is <code>NULL</code>, unhandled filesystem exception or inconsistent <code>…Offset</code> or <code>…Count</code> values </td>
	</tr>
</tbody></table></div>
<!-- EDIT46 TABLE [23191-23526] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT44 SECTION "TwGet...Data" [21345-23536] -->
<h3 class="sectionedit47" id="twgetattributefromh5">TwGet...AttributeFromH5</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwGetIntAttributeFromH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> location<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> name<span class="sy0">,</span> <span class="kw4">int</span><span class="sy0">*</span> attribute<span class="br0">)</span><span class="sy0">;</span>
TOFWERK_H5_API TwRetVal TwGetUintAttributeFromH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> location<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> name<span class="sy0">,</span> <span class="kw4">unsigned</span> <span class="kw4">int</span><span class="sy0">*</span> attribute<span class="br0">)</span><span class="sy0">;</span>
TOFWERK_H5_API TwRetVal TwGetInt64AttributeFromH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> location<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> name<span class="sy0">,</span> __int64<span class="sy0">*</span> attribute<span class="br0">)</span><span class="sy0">;</span>
TOFWERK_H5_API TwRetVal TwGetUint64AttributeFromH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> location<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> name<span class="sy0">,</span> <span class="kw4">unsigned</span> __int64<span class="sy0">*</span> attribute<span class="br0">)</span><span class="sy0">;</span>
TOFWERK_H5_API TwRetVal TwGetFloatAttributeFromH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> location<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> name<span class="sy0">,</span> <span class="kw4">float</span><span class="sy0">*</span> attribute<span class="br0">)</span><span class="sy0">;</span>
TOFWERK_H5_API TwRetVal TwGetDoubleAttributeFromH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> location<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> name<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> attribute<span class="br0">)</span><span class="sy0">;</span>
TOFWERK_H5_API TwRetVal TwGetStringAttributeFromH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> location<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> name<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> attribute<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose15">Purpose</h4>
<div class="level4">

<p>
These functions read differently typed attributes from the HDF5 file. 
Use these functions to read attributes not available in the <code>TwH5Desc</code> structure.
</p>

</div>

<h4 id="parameters15">Parameters</h4>
<div class="level4">
<div class="table sectionedit48"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>Filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>location</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> location of the group or datset the attribute is attached to </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>name</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> attribute name </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>attribute</code>  </td><td class="col1 centeralign">  <em>variable</em>  </td><td class="col2"> variable of the appropriate type passed by reference. The string buffer for <code>TwGetStringAttributeFromH5</code> should be 256 bytes large. </td>
	</tr>
</tbody></table></div>
<!-- EDIT48 TABLE [24594-25006] -->
</div>

<h4 id="return_value15">Return value</h4>
<div class="level4">
<div class="table sectionedit49"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="3"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1"> attribute successfully read from file </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> <code>attribute</code> is <code>NULL</code> or attribute <code>name</code> not found at <code>location</code> or wrong data type</td>
	</tr>
</tbody></table></div>
<!-- EDIT49 TABLE [25028-25355] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT47 SECTION "TwGet...AttributeFromH5" [23537-25365] -->
<h3 class="sectionedit50" id="twsetattributeinh5">TwSet...AttributeInH5</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwSetIntAttributeInH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> location<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> name<span class="sy0">,</span> <span class="kw4">int</span> attribute<span class="br0">)</span><span class="sy0">;</span>
TOFWERK_H5_API TwRetVal TwSetUintAttributeInH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> location<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> name<span class="sy0">,</span> <span class="kw4">unsigned</span> <span class="kw4">int</span> attribute<span class="br0">)</span><span class="sy0">;</span>
TOFWERK_H5_API TwRetVal TwSetInt64AttributeInH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> location<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> name<span class="sy0">,</span> __int64 attribute<span class="br0">)</span><span class="sy0">;</span>
TOFWERK_H5_API TwRetVal TwSetUint64AttributeInH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> location<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> name<span class="sy0">,</span> <span class="kw4">unsigned</span> __int64 attribute<span class="br0">)</span><span class="sy0">;</span>
TOFWERK_H5_API TwRetVal TwSetFloatAttributeInH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> location<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> name<span class="sy0">,</span> <span class="kw4">float</span> attribute<span class="br0">)</span><span class="sy0">;</span>
TOFWERK_H5_API TwRetVal TwSetDoubleAttributeInH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> location<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> name<span class="sy0">,</span> <span class="kw4">double</span> attribute<span class="br0">)</span><span class="sy0">;</span>
TOFWERK_H5_API TwRetVal TwSetStringAttributeInH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> location<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> name<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> attribute<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose16">Purpose</h4>
<div class="level4">

<p>
These functions write differently typed attributes to the HDF5 file.
</p>

</div>

<h4 id="parameters16">Parameters</h4>
<div class="level4">
<div class="table sectionedit51"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>Filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>location</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> location of the group or datset the attribute is attached to </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>name</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> attribute name </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>attribute</code>  </td><td class="col1 centeralign">  <em>variable</em>  </td><td class="col2"> variable of the appropriate type. The string for <code>TwSetStringAttributeInH5</code> should be max. 256 characters. </td>
	</tr>
</tbody></table></div>
<!-- EDIT51 TABLE [26316-26703] -->
</div>

<h4 id="return_value16">Return value</h4>
<div class="level4">
<div class="table sectionedit52"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="3"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1"> attribute successfully written to file </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1 leftalign"> attribute was not written  </td>
	</tr>
</tbody></table></div>
<!-- EDIT52 TABLE [26725-26988] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT50 SECTION "TwSet...AttributeInH5" [25366-26999] -->
<h3 class="sectionedit53" id="twchangepeaktable">TwChangePeakTable</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwChangePeakTable<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> TPeakPar<span class="sy0">*</span> newPeakPar<span class="sy0">,</span> <span class="kw4">int</span> nbrNewPeakPar<span class="sy0">,</span> <span class="kw4">int</span> option<span class="sy0">,</span> TwProgressCallback<span class="sy0">*</span> callback<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose17">Purpose</h4>
<div class="level4">

<p>
Changes the entries in the dataset <code>/PeakData/PeakTable</code> and recomputes <code>/PeakData/PeakData</code>
 accordingly. Depending on data file size this can take a long time, 
therefore a callback is available informing about the progress and 
giving the possibility to abort the operation.
</p>

</div>

<h4 id="parameters17">Parameters</h4>
<div class="level4">
<div class="table sectionedit54"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>Filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>newPeakPar</code>  </td><td class="col1 centeralign">  <code>TPeakPar*</code>  </td><td class="col2"> array of <code>TPeakPar</code> of length <code>nbrNewPeakPar</code> </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>nbrNewPeakPar</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> number of new peaks </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>option</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> bitfield: bits 0-7: compression level, bit 8: enable custom chunking, bits 9-12 custom chunking(peaks, segments, bufs, writes) </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>callback</code>  </td><td class="col1 centeralign">  <code>TwProgressCallback*</code>  </td><td class="col2"> callback function that is called for every processed buf </td>
	</tr>
</tbody></table></div>
<!-- EDIT54 TABLE [27509-28019] -->
</div>

<h4 id="return_value17">Return value</h4>
<div class="level4">
<div class="table sectionedit55"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="5"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1"> peak table (and PeakData) successfully updated </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwNoData</code>  </td><td class="col1"> data to calculate PeakData is not found in the file </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> <code>newPeakPar</code> is <code>NULL</code> and <code>*nbrNewPeakPar &gt; 0</code> or unhandled filesystem exception </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>TwAborted</code>  </td><td class="col1"> processing was aborted by the callback function </td>
	</tr>
</tbody></table></div>
<!-- EDIT55 TABLE [28041-28546] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT53 SECTION "TwChangePeakTable" [27000-28556] -->
<h3 class="sectionedit56" id="twchangepeaktable2">TwChangePeakTable2</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwChangePeakTable2<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> TPeakPar<span class="sy0">*</span> newPeakPar<span class="sy0">,</span> <span class="kw4">int</span> nbrNewPeakPar<span class="sy0">,</span> <span class="kw4">int</span> option<span class="sy0">,</span> TwProgressCallback2<span class="sy0">*</span> callback<span class="sy0">,</span> <span class="kw4">void</span><span class="sy0">*</span> cbUserData<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose18">Purpose</h4>
<div class="level4">

<p>
Same as TwChangePeakTable, but uses <code>TwProgressCallback2</code> with additonal user data (<code>cbUserData</code>).
</p>

</div>

<h4 id="parameters18">Parameters</h4>
<div class="level4">
<div class="table sectionedit57"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>Filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>newPeakPar</code>  </td><td class="col1 centeralign">  <code>TPeakPar*</code>  </td><td class="col2"> array of <code>TPeakPar</code> of length <code>nbrNewPeakPar</code> </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>nbrNewPeakPar</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> number of new peaks </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>option</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> bitfield: bits 0-7: compression level, bit 8: enable custom chunking, bits 9-12 custom chunking(peaks, segments, bufs, writes) </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>callback</code>  </td><td class="col1 centeralign">  <code>TwProgressCallback2*</code>  </td><td class="col2"> callback function that is called for every processed buf </td>
	</tr>
	<tr class="row6">
		<td class="col0 centeralign">  <code>cbUserData</code>  </td><td class="col1 centeralign">  <code>void*</code>  </td><td class="col2"> arbitrary user data that will be available in <code>TwProgressCallback2</code> </td>
	</tr>
</tbody></table></div>
<!-- EDIT57 TABLE [28911-29529] -->
</div>

<h4 id="return_value18">Return value</h4>
<div class="level4">
<div class="table sectionedit58"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="5"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1"> peak table (and PeakData) successfully updated </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwNoData</code>  </td><td class="col1"> data to calculate PeakData is not found in the file </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> <code>newPeakPar</code> is <code>NULL</code> and <code>*nbrNewPeakPar &gt; 0</code> or unhandled filesystem exception </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>TwAborted</code>  </td><td class="col1"> processing was aborted by the callback function </td>
	</tr>
</tbody></table></div>
<!-- EDIT58 TABLE [29551-30056] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT56 SECTION "TwChangePeakTable2" [28557-30066] -->
<h3 class="sectionedit59" id="twchangepeaktablefromfile">TwChangePeakTableFromFile</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwChangePeakTableFromFile <span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> massTable<span class="sy0">,</span> <span class="kw4">int</span> option<span class="sy0">,</span> TwProgressCallback<span class="sy0">*</span> callback<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose19">Purpose</h4>
<div class="level4">

<p>
Convenience function for <code>TwChangePeakTable</code>. Instead of specifiying directly peak parameters the information is taken from a mass table (text) or Tofwerk HDF5 file.
</p>

</div>

<h4 id="parameters19">Parameters</h4>
<div class="level4">
<div class="table sectionedit60"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>Filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>massTable</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to mass table or HDF5 file </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>option</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> bitfield: bits 0-7: compression level, bit 8: enable custom chunking, bits 9-12 custom chunking(peaks, segments, bufs, writes) </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>callback</code>  </td><td class="col1 centeralign">  <code>TwProgressCallback*</code>  </td><td class="col2"> callback function that is called for every processed buf </td>
	</tr>
</tbody></table></div>
<!-- EDIT60 TABLE [30458-30896] -->
</div>

<h4 id="return_value19">Return value</h4>
<div class="level4">
<div class="table sectionedit61"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="5"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file or mass table source file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1"> peak table (and PeakData) successfully updated </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwNoData</code>  </td><td class="col1"> data to calculate PeakData is not found in the file </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> <code>newPeakPar</code> is <code>NULL</code> and <code>*nbrNewPeakPar &gt; 0</code> or unhandled filesystem exception </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>TwAborted</code>  </td><td class="col1"> processing was aborted by the callback function </td>
	</tr>
</tbody></table></div>
<!-- EDIT61 TABLE [30918-31449] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT59 SECTION "TwChangePeakTableFromFile" [30067-31459] -->
<h3 class="sectionedit62" id="twchangepeaktablefromfile2">TwChangePeakTableFromFile2</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwChangePeakTableFromFile2<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> massTable<span class="sy0">,</span> <span class="kw4">int</span> option<span class="sy0">,</span> TwProgressCallback2<span class="sy0">*</span> callback<span class="sy0">,</span> <span class="kw4">void</span><span class="sy0">*</span> cbUserData<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose20">Purpose</h4>
<div class="level4">

<p>
Same as <code>TwChangePeakTableFromFile</code>, but uses <code>TwProgressCallback2</code> with additonal user data (<code>cbUserData</code>). 
</p>

</div>

<h4 id="parameters20">Parameters</h4>
<div class="level4">
<div class="table sectionedit63"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>Filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>massTable</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to mass table or HDF5 file </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>option</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> bitfield: bits 0-7: compression level, bit 8: enable custom chunking, bits 9-12 custom chunking(peaks, segments, bufs, writes) </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>callback</code>  </td><td class="col1 centeralign">  <code>TwProgressCallback*</code>  </td><td class="col2"> callback function that is called for every processed buf </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>cbUserData</code>  </td><td class="col1 centeralign">  <code>void*</code>  </td><td class="col2"> arbitrary user data that will be available in <code>TwProgressCallback2</code> </td>
	</tr>
</tbody></table></div>
<!-- EDIT63 TABLE [31819-32364] -->
</div>

<h4 id="return_value20">Return value</h4>
<div class="level4">
<div class="table sectionedit64"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="5"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file or mass table source file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1"> peak table (and PeakData) successfully updated </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwNoData</code>  </td><td class="col1"> data to calculate PeakData is not found in the file </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> <code>newPeakPar</code> is <code>NULL</code> and <code>*nbrNewPeakPar &gt; 0</code> or unhandled filesystem exception </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>TwAborted</code>  </td><td class="col1"> processing was aborted by the callback function </td>
	</tr>
</tbody></table></div>
<!-- EDIT64 TABLE [32386-32917] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT62 SECTION "TwChangePeakTableFromFile2" [31460-32926] -->
<h3 class="sectionedit65" id="twprogresscallback">TwProgressCallback</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c"><span class="kw4">typedef</span> bool <span class="br0">(</span>__cdecl TwProgressCallback<span class="br0">)</span><span class="br0">(</span><span class="kw4">double</span> progress<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose21">Purpose</h4>
<div class="level4">

<p>
Callback function used to inform the <abbr title="Atmospheric Pressure Interface / Application Programming Interface">API</abbr> user about the progress of lengthy operations and giving the possibility to abort.
</p>

</div>

<h4 id="parameters21">Parameters</h4>
<div class="level4">
<div class="table sectionedit66"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>progress</code>  </td><td class="col1 centeralign">  <code>double</code>  </td><td class="col2"> operation progress given in % </td>
	</tr>
</tbody></table></div>
<!-- EDIT66 TABLE [33200-33301] -->
</div>

<h4 id="return_value21">Return value</h4>
<div class="level4">
<div class="table sectionedit67"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="2"> <code>bool</code> </td><td class="col1 centeralign">  <code>true</code>  </td><td class="col2"> abort operation </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>false</code>  </td><td class="col1"> continue operation </td>
	</tr>
</tbody></table></div>
<!-- EDIT67 TABLE [33323-33450] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT65 SECTION "TwProgressCallback" [32927-33460] -->
<h3 class="sectionedit68" id="twprogresscallback2">TwProgressCallback2</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c"><span class="kw4">typedef</span> bool <span class="br0">(</span>__cdecl TwProgressCallback2<span class="br0">)</span><span class="br0">(</span><span class="kw4">double</span> progress<span class="sy0">,</span> <span class="kw4">void</span><span class="sy0">*</span> userData<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose22">Purpose</h4>
<div class="level4">

<p>
Callback function used to inform the <abbr title="Atmospheric Pressure Interface / Application Programming Interface">API</abbr> user about the progress of lengthy operations and giving the possibility to abort. <code>TwProgressCallback2</code> adds support for additional user data that is passed along in each call.
</p>

</div>

<h4 id="parameters22">Parameters</h4>
<div class="level4">
<div class="table sectionedit69"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>progress</code>  </td><td class="col1 centeralign">  <code>double</code>  </td><td class="col2"> operation progress given in % </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>userData</code>  </td><td class="col1 centeralign">  <code>void*</code>  </td><td class="col2"> arbitrary user data that is passed in each call to callback </td>
	</tr>
</tbody></table></div>
<!-- EDIT69 TABLE [33849-34045] -->
</div>

<h4 id="return_value22">Return value</h4>
<div class="level4">
<div class="table sectionedit70"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="2"> <code>bool</code> </td><td class="col1 centeralign">  <code>true</code>  </td><td class="col2"> abort operation </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>false</code>  </td><td class="col1"> continue operation </td>
	</tr>
</tbody></table></div>
<!-- EDIT70 TABLE [34067-34194] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT68 SECTION "TwProgressCallback2" [33461-34205] -->
<h3 class="sectionedit71" id="twchangepeakdatainit">TwChangePeakDataInit</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwChangePeakDataInit<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> TPeakPar<span class="sy0">*</span> newPeakPar<span class="sy0">,</span> <span class="kw4">int</span> nbrNewPeakPar<span class="sy0">,</span> <span class="kw4">int</span> options<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose23">Purpose</h4>
<div class="level4">

<p>
The <abbr title="Atmospheric Pressure Interface / Application Programming Interface">API</abbr> functions <code>TwChangePeakDataInit</code>, <code>TwChangePeakDataWrite</code> and <code>TwChangePeakDataFinalize</code>
 provide the functionality to update the peak table and provide user 
calculated values for the peak data set(s). The sequence how these 
functions are called <strong>must</strong> always be: 1) <code>TwChangePeakDataInit</code>, 2) <code>TwChangePeakDataWrite</code> (as many times as needed to write all the data), 3) <code>TwChangePeakDataFinalize</code>. No other TwH5 functions should be called during that sequence.
</p>

</div>

<h4 id="parameters23">Parameters</h4>
<div class="level4">
<div class="table sectionedit72"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>Filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>newPeakPar</code>  </td><td class="col1 centeralign">  <code>TPeakPar*</code>  </td><td class="col2"> array of <code>TPeakPar</code> of length <code>nbrNewPeakPar</code> </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>nbrNewPeakPar</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> number of new peaks </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>options</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> bitfield: bits 0-7: compression level, bit 8: enable custom chunking, bits 9-12 custom chunking(peaks, segments, bufs, writes) </td>
	</tr>
</tbody></table></div>
<!-- EDIT72 TABLE [34895-35300] -->
</div>

<h4 id="return_value23">Return value</h4>
<div class="level4">
<div class="table sectionedit73"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="4"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1"> peak table successfully written and new PeakData allocated, ready to receive data from <code>TwChangePeakDataWrite</code> </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwNoData</code>  </td><td class="col1"> data to calculate PeakData is not found in the file </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> <code>newPeakPar</code> is <code>NULL</code> or <code>*nbrNewPeakPar ⇐ 0</code> or unhandled filesystem exception </td>
	</tr>
</tbody></table></div>
<!-- EDIT73 TABLE [35322-35808] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT71 SECTION "TwChangePeakDataInit" [34206-35818] -->
<h3 class="sectionedit74" id="twchangepeakdatawrite">TwChangePeakDataWrite</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwChangePeakDataWrite<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">int</span> peakOffset<span class="sy0">,</span> <span class="kw4">int</span> peakCount<span class="sy0">,</span> <span class="kw4">int</span> segOffset<span class="sy0">,</span> <span class="kw4">int</span> segCount<span class="sy0">,</span> <span class="kw4">int</span> bufOffset<span class="sy0">,</span> <span class="kw4">int</span> bufCount<span class="sy0">,</span> <span class="kw4">int</span> writeOffset<span class="sy0">,</span> <span class="kw4">int</span> writeCount<span class="sy0">,</span> <span class="kw4">float</span><span class="sy0">*</span> data<span class="sy0">,</span> <span class="kw4">float</span><span class="sy0">*</span> data2<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose24">Purpose</h4>
<div class="level4">

<p>
The <abbr title="Atmospheric Pressure Interface / Application Programming Interface">API</abbr> functions <code>TwChangePeakDataInit</code>, <code>TwChangePeakDataWrite</code> and <code>TwChangePeakDataFinalize</code>
 provide the functionality to update the peak table and provide user 
calculated values for the peak data set(s). The sequence how these 
functions are called <strong>must</strong> always be: 1) <code>TwChangePeakDataInit</code>, 2) <code>TwChangePeakDataWrite</code> (as many times as needed to write all the data), 3) <code>TwChangePeakDataFinalize</code>. No other TwH5 functions should be called during that sequence.
</p>

</div>

<h4 id="parameters24">Parameters</h4>
<div class="level4">
<div class="table sectionedit75"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>Filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>peakOffset</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> data offset along peaks dimension </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>peakCount</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> data count along peaks dimension </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>segOffset</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> data offset along segments dimension </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>segCount</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> data count along segments dimension </td>
	</tr>
	<tr class="row6">
		<td class="col0 centeralign">  <code>bufOffset</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> data offset along bufs dimension </td>
	</tr>
	<tr class="row7">
		<td class="col0 centeralign">  <code>bufCount</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> data count along bufs dimension </td>
	</tr>
	<tr class="row8">
		<td class="col0 centeralign">  <code>writeOffset</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> data offset along writes dimension </td>
	</tr>
	<tr class="row9">
		<td class="col0 centeralign">  <code>writeCount</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> data count along writes dimension </td>
	</tr>
	<tr class="row10">
		<td class="col0 centeralign">  <code>data</code>  </td><td class="col1 centeralign">  <code>float*</code>  </td><td class="col2"> data to be written (length expected: <code>peakCount</code>*<code>segCount</code>*<code>bufCount</code>*<code>writeCount</code>) </td>
	</tr>
	<tr class="row11">
		<td class="col0 centeralign">  <code>data2</code>  </td><td class="col1 centeralign">  <code>float*</code>  </td><td class="col2"> data to be written for second <abbr title="Time Of Flight">TOF</abbr> or <code>NULL</code> (length expected: <code>peakCount</code>*<code>segCount</code>*<code>bufCount</code>*<code>writeCount</code>) </td>
	</tr>
</tbody></table></div>
<!-- EDIT75 TABLE [36605-37528] -->
</div>

<h4 id="return_value24">Return value</h4>
<div class="level4">
<div class="table sectionedit76"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="4"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1"> data was successfully written </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwOutOfBounds</code>  </td><td class="col1"> sanity check on <code>…Offset</code> and <code>…Count</code> parameters failed </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> <code>data</code> (or <code>data2</code>) is <code>NULL</code>, custom peak data changing not initialized with <code>TwChangePeakDataInit</code> </td>
	</tr>
</tbody></table></div>
<!-- EDIT76 TABLE [37551-37993] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT74 SECTION "TwChangePeakDataWrite" [35819-38004] -->
<h3 class="sectionedit77" id="twchangepeakdatafinalize">TwChangePeakDataFinalize</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwChangePeakDataFinalize<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose25">Purpose</h4>
<div class="level4">

<p>
The <abbr title="Atmospheric Pressure Interface / Application Programming Interface">API</abbr> functions <code>TwChangePeakDataInit</code>, <code>TwChangePeakDataWrite</code> and <code>TwChangePeakDataFinalize</code>
 provide the functionality to update the peak table and provide user 
calculated values for the peak data set(s). The sequence how these 
functions are called <strong>must</strong> always be: 1) <code>TwChangePeakDataInit</code>, 2) <code>TwChangePeakDataWrite</code> (as many times as needed to write all the data), 3) <code>TwChangePeakDataFinalize</code>. No other TwH5 functions should be called during that sequence.
</p>

</div>

<h4 id="parameters25">Parameters</h4>
<div class="level4">
<div class="table sectionedit78"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>Filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
</tbody></table></div>
<!-- EDIT78 TABLE [38648-38745] -->
</div>

<h4 id="return_value25">Return value</h4>
<div class="level4">
<div class="table sectionedit79"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="3"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1"> custom peak data changing successfully finalized </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> custom peak data changing not initialized with <code>TwChangePeakDataInit</code> </td>
	</tr>
</tbody></table></div>
<!-- EDIT79 TABLE [38768-39086] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT77 SECTION "TwChangePeakDataFinalize" [38005-39098] -->
<h3 class="sectionedit80" id="twreadrawdata">TwReadRawData</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwReadRawData <span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">int</span> channel<span class="sy0">,</span> <span class="kw4">int</span> bufIndex<span class="sy0">,</span> <span class="kw4">int</span> writeIndex<span class="sy0">,</span> <span class="kw4">int</span><span class="sy0">*</span> bufferSize<span class="sy0">,</span> <span class="kw4">void</span><span class="sy0">*</span> buffer<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose26">Purpose</h4>
<div class="level4">

<p>
Retrieves one buf worth of raw data from the data file for a given channel. Can be used to query the raw data size by setting <code>*bufferSize</code> to 0 and <code>buffer</code> to <code>NULL</code>.
</p>

</div>

<h4 id="parameters26">Parameters</h4>
<div class="level4">
<div class="table sectionedit81"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>Filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>channel</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> channel of interest (currently only values <code>1</code> and <code>2</code> are supported) </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>bufIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> buf index of raw data to read </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>writeIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> write index of raw data to read </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>bufferSize</code>  </td><td class="col1 centeralign">  <code>int*</code>  </td><td class="col2"> size of <code>buffer</code> in <strong>bytes</strong>, not elements (passed by reference). Holds the actual size read/queried on function return. </td>
	</tr>
	<tr class="row6">
		<td class="col0 centeralign">  <code>buffer</code>  </td><td class="col1 centeralign">  <code>void*</code>  </td><td class="col2"> data buffer to read into. It is the responsibility of the <abbr title="Atmospheric Pressure Interface / Application Programming Interface">API</abbr> user to cast <code>buffer</code> to the appropriate type. </td>
	</tr>
</tbody></table></div>
<!-- EDIT81 TABLE [39488-40125] -->
</div>

<h4 id="return_value26">Return value</h4>
<div class="level4">
<div class="table sectionedit82"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="6"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file or mass table source file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1"> raw data successfully read. The actual size of raw data copied to <code>buffer</code> is given in <code>bufferSize</code>. </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwValueAdjusted</code>  </td><td class="col1"> supplied buffer was to small to read data, no data was read but <code>*bufferSize</code> holds the minimal buffer size needed. </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwNoData</code>  </td><td class="col1"> data file has no raw data for the given channel or raw data descriptors are missing </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> <code>*bufferSize &gt; 0</code> while <code>buffer == NULL</code> or channel is other than 1 or 2 </td>
	</tr>
	<tr class="row6">
		<td class="col0 centeralign">  <code>TwOutOfBounds</code>  </td><td class="col1"> buf or write index out of valid range </td>
	</tr>
</tbody></table></div>
<!-- EDIT82 TABLE [40147-40912] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT80 SECTION "TwReadRawData" [39099-40922] -->
<h3 class="sectionedit83" id="twh5setmasscalib">TwH5SetMassCalib</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwH5SetMassCalib<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">int</span> mode<span class="sy0">,</span> <span class="kw4">int</span> nbrParams<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> p<span class="sy0">,</span> <span class="kw4">int</span> nbrPoints<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> mass<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> tof<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> weight<span class="br0">)</span><span class="sy0">;</span>
TOFWERK_H5_API TwRetVal TwH5SetMassCalib2<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">int</span> mode<span class="sy0">,</span> <span class="kw4">int</span> nbrParams<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> p<span class="sy0">,</span> <span class="kw4">int</span> nbrPoints<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> mass<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> tof<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> weight<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose27">Purpose</h4>
<div class="level4">

<p>
Changes the global mass calibration in the data file. If <code>nbrParams</code> is <code>0</code>, the calibration parameters will be determined from <code>mass</code>, <code>tof</code> and <code>weight</code>.
 If calibration parameters and calibration points are provided, the 
calibration is given by the parameters (no sanity check is performed 
whether the points yield the same parameters).
</p>

</div>

<h4 id="parameters27">Parameters</h4>
<div class="level4">
<div class="table sectionedit84"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>Filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>mode</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> which mass calibration function to use </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>nbrParams</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> number of mass calibration parameters (length of array <code>p</code>) </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>p</code>  </td><td class="col1 centeralign">  <code>double*</code>  </td><td class="col2"> array of length <code>nbrParams</code> holding mass calibration parameters </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>nbrPoints</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> number of calibration points (length of arrays <code>mass</code>, <code>tof</code> and <code>weight</code>) </td>
	</tr>
	<tr class="row6">
		<td class="col0 centeralign">  <code>mass</code>  </td><td class="col1 centeralign">  <code>double*</code>  </td><td class="col2"> array of length <code>nbrPoints</code> holding the mass of the calibration points </td>
	</tr>
	<tr class="row7">
		<td class="col0 centeralign">  <code>tof</code>  </td><td class="col1 centeralign">  <code>double*</code>  </td><td class="col2"> array of length <code>nbrPoints</code> holding the <abbr title="Time Of Flight">TOF</abbr> (actually index) of the calibration points </td>
	</tr>
	<tr class="row8">
		<td class="col0 centeralign">  <code>weight</code>  </td><td class="col1 centeralign">  <code>double*</code>  </td><td class="col2"> array of length <code>nbrPoints</code> holding the weight of the calibration points </td>
	</tr>
</tbody></table></div>
<!-- EDIT84 TABLE [41664-42473] -->
</div>

<h4 id="return_value27">Return value</h4>
<div class="level4">
<div class="table sectionedit85"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="4"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1"> mass calibration info was successfully stored in data file </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> <code>p=NULL</code> while <code>nbrParams &gt; 0</code> or <code>mass=NULL</code> or <code>tof=NULL</code> while <code>nbrpoints &gt; 0</code> </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwOutOfBounds</code>  </td><td class="col1"> if <code>mode</code> is &lt; 0 or &gt; 4 or <code>nbrParams</code> doesn't match <code>mode</code> </td>
	</tr>
</tbody></table></div>
<!-- EDIT85 TABLE [42496-42951] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT83 SECTION "TwH5SetMassCalib" [40923-42960] -->
<h3 class="sectionedit86" id="twh5setmasscalibex">TwH5SetMassCalibEx</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwH5SetMassCalibEx <span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">int</span> mode<span class="sy0">,</span> <span class="kw4">int</span> nbrParams<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> p<span class="sy0">,</span> <span class="kw4">int</span> nbrPoints<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> mass<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> tof<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> weight<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> label<span class="br0">)</span><span class="sy0">;</span>
TOFWERK_H5_API TwRetVal TwH5SetMassCalib2Ex <span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> Filename<span class="sy0">,</span> <span class="kw4">int</span> mode<span class="sy0">,</span> <span class="kw4">int</span> nbrParams<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> p<span class="sy0">,</span> <span class="kw4">int</span> nbrPoints<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> mass<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> tof<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> weight<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> label<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose28">Purpose</h4>
<div class="level4">

<p>
Changes the global mass calibration in the data file. If <code>nbrParams</code> is <code>0</code>, the calibration parameters will be determined from <code>mass</code>, <code>tof</code> and <code>weight</code>.
 If calibration parameters and calibration points are provided, the 
calibration is given by the parameters (no sanity check is performed 
whether the points yield the same parameters). 
</p>

</div>

<h4 id="parameters28">Parameters</h4>
<div class="level4">
<div class="table sectionedit87"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>Filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>mode</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> which mass calibration function to use </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>nbrParams</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> number of mass calibration parameters (length of array <code>p</code>) </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>p</code>  </td><td class="col1 centeralign">  <code>double*</code>  </td><td class="col2"> array of length <code>nbrParams</code> holding mass calibration parameters </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>nbrPoints</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> number of calibration points (length of arrays <code>mass</code>, <code>tof</code> and <code>weight</code>) </td>
	</tr>
	<tr class="row6">
		<td class="col0 centeralign">  <code>mass</code>  </td><td class="col1 centeralign">  <code>double*</code>  </td><td class="col2"> array of length <code>nbrPoints</code> holding the mass of the calibration points </td>
	</tr>
	<tr class="row7">
		<td class="col0 centeralign">  <code>tof</code>  </td><td class="col1 centeralign">  <code>double*</code>  </td><td class="col2"> array of length <code>nbrPoints</code> holding the <abbr title="Time Of Flight">TOF</abbr> (actually index) of the calibration points </td>
	</tr>
	<tr class="row8">
		<td class="col0 centeralign">  <code>weight</code>  </td><td class="col1 centeralign">  <code>double*</code>  </td><td class="col2"> array of length <code>nbrPoints</code> holding the weight of the calibration points </td>
	</tr>
	<tr class="row9">
		<td class="col0 centeralign">  <code>label</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> array of length <code>nbrPoints</code>*256 holding the labels/names/sum formula of the calibration points </td>
	</tr>
</tbody></table></div>
<!-- EDIT87 TABLE [43737-44675] -->
</div>

<h4 id="return_value28">Return value</h4>
<div class="level4">
<div class="table sectionedit88"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="4"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1"> mass calibration info was successfully stored in data file </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> <code>p=NULL</code> while <code>nbrParams &gt; 0</code> or <code>mass=NULL</code> or <code>tof=NULL</code> while <code>nbrpoints &gt; 0</code> </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwOutOfBounds</code>  </td><td class="col1"> if <code>mode</code> is &lt; 0 or &gt; 4 or <code>nbrParams</code> doesn't match <code>mode</code> </td>
	</tr>
</tbody></table></div>
<!-- EDIT88 TABLE [44698-45153] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT86 SECTION "TwH5SetMassCalibEx" [42961-45163] -->
<h3 class="sectionedit89" id="twgetuserdatafromh5">TwGetUserDataFromH5</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwGetUserDataFromH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> filename<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> location<span class="sy0">,</span> <span class="kw4">int</span><span class="sy0">*</span> rowIndex<span class="sy0">,</span> <span class="kw4">int</span><span class="sy0">*</span> nbrElements<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> buffer<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> elementDescription<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose29">Purpose</h4>
<div class="level4">

<p>
This function reads a chunk of user data added to the file using <code>TwAddUserData</code>. If you want to access data saved by a registered data source (or a data source plugin, which uses the same mechanism) use the <code>TwGetRegUserDataFromH5 </code> function. This function can be used to query the dataset dimensions by setting <code>*rowIndex</code> and <code>*nbrElements</code> to <code>0</code> and passing <code>NULL</code> for <code>buffer</code> and <code>elementDescription</code>.
</p>

</div>

<h4 id="parameters29">Parameters</h4>
<div class="level4">
<div class="table sectionedit90"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>location</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> location where the data is stored (same as the <code>location</code> argument in the <code>TwAddUserData</code> function) </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>rowIndex</code>  </td><td class="col1 centeralign">  <code>int*</code>  </td><td class="col2"> index of “row” to fetch (by reference) </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>nbrElements</code>  </td><td class="col1 centeralign">  <code>int*</code>  </td><td class="col2"> length of <code>buffer</code> (by reference), on function return <code>*nbrElements</code> is set to the actual number of elements per row in the dataset. </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>buffer</code>  </td><td class="col1 centeralign">  <code>double*</code>  </td><td class="col2"> array of <code>double</code>s where the data is copied. Array length is *nbrElements. </td>
	</tr>
	<tr class="row6">
		<td class="col0 centeralign">  <code>elementDescription</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> C string of length <code>256*nbrElements</code> where the element descriptions are copied. </td>
	</tr>
</tbody></table></div>
<!-- EDIT90 TABLE [45831-46553] -->
</div>

<h4 id="return_value29">Return value</h4>
<div class="level4">
<div class="table sectionedit91"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="6"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1 leftalign"> data was successfully read  </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwOutOfBounds</code>  </td><td class="col1"> if <code>*rowIndex</code> is smaller than 0 or larger than dataset length - 1. </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwValueAdjusted</code>  </td><td class="col1 leftalign"> if <code>*nbrElements</code> did not correspond to the actual data dimension. On funtion return <code>*nbrElements</code> is set to the actual value.  </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1 leftalign"> if <code>*nbrElements</code> is larger than 0, but <code>buffer</code> is NULL.  </td>
	</tr>
	<tr class="row6">
		<td class="col0 centeralign">  <code>TwNoData</code>  </td><td class="col1"> <code>location</code> points to non-existing or non-conforming dataset. </td>
	</tr>
</tbody></table></div>
<!-- EDIT91 TABLE [46576-47250] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT89 SECTION "TwGetUserDataFromH5" [45164-47261] -->
<h3 class="sectionedit92" id="twgetacquisitionlogfromh5">TwGetAcquisitionLogFromH5</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwGetAcquisitionLogFromH5 <span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> filename<span class="sy0">,</span> <span class="kw4">int</span> index<span class="sy0">,</span> __int64<span class="sy0">*</span> timestamp<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> logText<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose30">Purpose</h4>
<div class="level4">

<p>
This function reads a single acquisition log entry and returns the timestamp and the log text.
</p>

</div>

<h4 id="parameters30">Parameters</h4>
<div class="level4">
<div class="table sectionedit93"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>index</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> index of log entry </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>timestamp</code>  </td><td class="col1 centeralign">  <code>__int64*</code>  </td><td class="col2"> timestamp of log entry (by reference) </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>logText</code>  </td><td class="col1 centeralign">  <code>char* </code>  </td><td class="col2"> log text (minimal size 256 characters) </td>
	</tr>
</tbody></table></div>
<!-- EDIT93 TABLE [47567-47864] -->
</div>

<h4 id="return_value30">Return value</h4>
<div class="level4">
<div class="table sectionedit94"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="4"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1 leftalign"> data was successfully read  </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwOutOfBounds</code>  </td><td class="col1"> if <code>index</code> is smaller than 0 or larger than log length - 1. </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1 leftalign"> general error  </td>
	</tr>
</tbody></table></div>
<!-- EDIT94 TABLE [47887-48230] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT92 SECTION "TwGetAcquisitionLogFromH5" [47262-48241] -->
<h3 class="sectionedit95" id="twgeteventlistspectrumfromh5">TwGetEventListSpectrumFromH5</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwGetEventListSpectrumFromH5 <span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> filename<span class="sy0">,</span> <span class="kw4">int</span> segmentIndex<span class="sy0">,</span> <span class="kw4">int</span> bufIndex<span class="sy0">,</span> <span class="kw4">int</span> writeIndex<span class="sy0">,</span> <span class="kw4">int</span><span class="sy0">*</span> bufferSize<span class="sy0">,</span> <span class="kw4">unsigned</span> <span class="kw4">int</span><span class="sy0">*</span> buffer<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose31">Purpose</h4>
<div class="level4">

<p>
This function reads the events associated with a single spectrum given 
by segment, buf and write indices from the file. *bufferSize is adjusted
 to the value of events read on function return. Setting <code>*bufferSize</code> to 0 and passing NULL for <code>buffer</code> can be used to query the data size. The attribute <code>/FullSpectra/EventList/MaxElementLength</code>
 or the corresponding entry in the TwH5Desc structure specifies the 
length of the largest event list element, so using a buffer of this 
length will result in <code>TwSuccess</code> or <code>TwValueAdjusted</code> for all valid indices.
</p>

</div>

<h4 id="parameters31">Parameters</h4>
<div class="level4">
<div class="table sectionedit96"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>segmentIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> segment index </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>bufIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> buf index </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>writeIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> write index </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>bufferSize</code>  </td><td class="col1 centeralign">  <code>int*</code>  </td><td class="col2"> length of <code>buffer</code> (by reference) </td>
	</tr>
	<tr class="row6">
		<td class="col0 centeralign">  <code>buffer</code>  </td><td class="col1 centeralign">  <code>unsigned int*</code>  </td><td class="col2"> array of unsigned int of length <code>*bufferSize</code> </td>
	</tr>
</tbody></table></div>
<!-- EDIT96 TABLE [49064-49463] -->
</div>

<h4 id="return_value31">Return value</h4>
<div class="level4">
<div class="table sectionedit97"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="6"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> if buffer == NULL but *bufferSize != 0 </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1 leftalign"> data was successfully read  </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwValueAdjusted</code>  </td><td class="col1"> *bufferSize was adjusted. If the supplied buffer was larger than the actual data size, <code>buffer</code> holds the events, but not otherwise. </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>TwOutOfBounds</code>  </td><td class="col1"> if any of the three indices is out of range </td>
	</tr>
	<tr class="row6">
		<td class="col0 centeralign">  <code>TwNoData</code>  </td><td class="col1"> if no event list is present in the data file </td>
	</tr>
</tbody></table></div>
<!-- EDIT97 TABLE [49486-50094] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT95 SECTION "TwGetEventListSpectrumFromH5" [48242-50108] -->
<h3 class="sectionedit98" id="twgeteventlistdatafromh5">TwGetEventListDataFromH5</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwGetEventListDataFromH5<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> filename<span class="sy0">,</span> <span class="kw4">int</span> segStartIndex<span class="sy0">,</span> <span class="kw4">int</span> segEndIndex<span class="sy0">,</span> <span class="kw4">int</span> bufStartIndex<span class="sy0">,</span> <span class="kw4">int</span> bufEndIndex<span class="sy0">,</span> <span class="kw4">int</span> writeStartIndex<span class="sy0">,</span> <span class="kw4">int</span> writeEndIndex<span class="sy0">,</span> <span class="kw4">unsigned</span> <span class="kw4">int</span><span class="sy0">***</span> dataBuffer<span class="sy0">,</span> <span class="sy0">,</span> <span class="kw4">unsigned</span> <span class="kw4">int</span><span class="sy0">**</span> dataLength<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose32">Purpose</h4>
<div class="level4">

<p>
This function reads data from the event list for an arbitrary data slab 
given by segment, buf and write start and end indices. Due to the 
variable-length nature of the event list this is one of the rare TofDaq <abbr title="Atmospheric Pressure Interface / Application Programming Interface">API</abbr> functions where the <abbr title="Dynamic Link Library">DLL</abbr> handles memory allocation and not the caller. After every call to this function you will have to call <code>TwFreeEventListData</code> or you will leak memory! The total number of spectra you'll get events for is <code>nbrSpectra = (segEndIndex-segStartIndex+1)*(bufEndIndex-bufStartIndex+1)*(writeEndIndex-writeStartIndex+1)</code>.
</p>

</div>

<h4 id="parameters32">Parameters</h4>
<div class="level4">
<div class="table sectionedit99"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>segStartIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> segment start index </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>segEndIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> segment end index </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>bufStartIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> buf start index </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>bufEndIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> buf endindex </td>
	</tr>
	<tr class="row6">
		<td class="col0 centeralign">  <code>writeStartIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> write start index </td>
	</tr>
	<tr class="row7">
		<td class="col0 centeralign">  <code>writeEndIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> write end index </td>
	</tr>
	<tr class="row8">
		<td class="col0 centeralign">  <code>dataBuffer</code>  </td><td class="col1 centeralign">  <code>unsigned int***</code>  </td><td class="col2 leftalign"> array of arrays holding the actual events (by reference)  </td>
	</tr>
	<tr class="row9">
		<td class="col0 centeralign">  <code>dataLength</code>  </td><td class="col1 centeralign">  <code>unsigned int**</code>  </td><td class="col2"> array of lengths in <code>dataBuffer</code> (by reference) </td>
	</tr>
</tbody></table></div>
<!-- EDIT99 TABLE [50994-51627] -->
</div>

<h4 id="return_value32">Return value</h4>
<div class="level4">
<div class="table sectionedit100"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="5"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> memory from a previous <code>TwGetEventListDataFromH5</code> call was not freed with <code>TwFreeEventListData</code> </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1 leftalign"> data was successfully read  </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwOutOfBounds</code>  </td><td class="col1"> if any of the six indices is out of range </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>TwNoData</code>  </td><td class="col1"> if no event list is present in the data file </td>
	</tr>
</tbody></table></div>
<!-- EDIT100 TABLE [51650-52139] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT98 SECTION "TwGetEventListDataFromH5" [50109-52149] -->
<h3 class="sectionedit101" id="twgeteventlistblobfromh5">TwGetEventListBlobFromH5</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwGetEventListBlobFromH5 <span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> filename<span class="sy0">,</span> <span class="kw4">int</span><span class="sy0">**</span> blob<span class="sy0">,</span> <span class="kw4">int</span> blobLength<span class="sy0">,</span> <span class="kw4">unsigned</span> <span class="kw4">int</span><span class="sy0">***</span> dataBuffer<span class="sy0">,</span> <span class="kw4">unsigned</span> <span class="kw4">int</span><span class="sy0">**</span> dataLength<span class="sy0">,</span> <span class="kw4">int</span><span class="sy0">*</span> totalSpectraInBlobs<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose33">Purpose</h4>
<div class="level4">

<p>
This function reads data from the event list for an arbitrary data slab. In contrast to the <code>TwGetEventListDataFromH5</code>
 function it is possible to define irregular regions that are composed 
of several differently shaped selection “cubes”. Due to the 
variable-length nature of the event list this is one of the rare TofDaq <abbr title="Atmospheric Pressure Interface / Application Programming Interface">API</abbr> functions where the <abbr title="Dynamic Link Library">DLL</abbr> handles memory allocation and not the caller. After every call to this function you will have to call <code>TwFreeEventListData</code> or you will leak memory! The total number of spectra you'll get events for is passed by reference to <code>*totalSpectraInBlobs</code>. The first element in <code>blob</code> is taken as such and all subsequent elements will be ORed with the current selection. This means that if <code>blob</code> elements overlap they will not be read multiple times. The six elements of each <code>blob</code> element are segment start index, segment end index, buf start index, buf end index, write start index and write end index.
</p>

</div>

<h4 id="parameters33">Parameters</h4>
<div class="level4">
<div class="table sectionedit102"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>blob</code>  </td><td class="col1 centeralign">  <code>int**</code>  </td><td class="col2"> array of length <code>blobLength</code>, each element points to 6 ints </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>blobLength</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> length of <code>blob</code> </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>dataBuffer</code>  </td><td class="col1 centeralign">  <code>unsigned int***</code>  </td><td class="col2 leftalign"> array of arrays holding the actual events (by reference)  </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>dataLength</code>  </td><td class="col1 centeralign">  <code>unsigned int**</code>  </td><td class="col2"> array of lengths in <code>dataBuffer</code> (by reference) </td>
	</tr>
	<tr class="row6">
		<td class="col0 centeralign">  <code>totalSpectraInBlobs</code>  </td><td class="col1 centeralign">  <code>int*</code>  </td><td class="col2"> total number of spectra read (by reference) </td>
	</tr>
</tbody></table></div>
<!-- EDIT102 TABLE [53382-53928] -->
</div>

<h4 id="return_value33">Return value</h4>
<div class="level4">
<div class="table sectionedit103"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="5"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwFileNotFound</code>  </td><td class="col2"> data file was not found (or access denied) </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> memory from a previous <code>TwGetEventListDataFromH5</code> call was not freed with <code>TwFreeEventListData</code> or <code>blob</code> is NULL or <code>blobLength</code> &lt; 1 </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwSuccess</code>  </td><td class="col1 leftalign"> data was successfully read  </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwOutOfBounds</code>  </td><td class="col1"> if any of the six indices in any of the <code>blob</code> elements is out of range </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>TwNoData</code>  </td><td class="col1"> if no event list is present in the data file </td>
	</tr>
</tbody></table></div>
<!-- EDIT103 TABLE [53951-54514] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT101 SECTION "TwGetEventListBlobFromH5" [52150-54523] -->
<h3 class="sectionedit104" id="twfreeeventlistdata">TwFreeEventListData</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwFreeEventListData<span class="br0">(</span><span class="kw4">void</span><span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose34">Purpose</h4>
<div class="level4">

<p>
Frees the memory allocated by an earlier call to <code>TwGetEventListDataFromH5</code> or <code>TwGetEventListBlobFromH5</code> in all files. 
</p>

</div>

<h4 id="parameters34">Parameters</h4>
<div class="level4">

<p>
none
</p>

</div>

<h4 id="return_value34">Return value</h4>
<div class="level4">
<div class="table sectionedit105"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="2"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwSuccess</code>  </td><td class="col2"> memory was freed </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> nothing to free </td>
	</tr>
</tbody></table></div>
<!-- EDIT105 TABLE [54817-54962] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT104 SECTION "TwFreeEventListData" [54524-54973] -->
<h3 class="sectionedit106" id="twfreeeventlistdata2">TwFreeEventListData2</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwFreeEventListData2<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> filename<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose35">Purpose</h4>
<div class="level4">

<p>
Frees the memory allocated by an earlier call to <code>TwGetEventListDataFromH5</code> or <code>TwGetEventListBlobFromH5</code>. 
</p>

</div>

<h4 id="parameters35">Parameters</h4>
<div class="level4">
<div class="table sectionedit107"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
</tbody></table></div>
<!-- EDIT107 TABLE [55240-55337] -->
</div>

<h4 id="return_value35">Return value</h4>
<div class="level4">
<div class="table sectionedit108"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="2"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwSuccess</code>  </td><td class="col2"> memory was freed </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> nothing to free </td>
	</tr>
</tbody></table></div>
<!-- EDIT108 TABLE [55361-55506] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT106 SECTION "TwFreeEventListData2" [54974-55516] -->
<h3 class="sectionedit109" id="twh5getmasscalibpar">TwH5GetMassCalibPar</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwH5GetMassCalibPar<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> filename<span class="sy0">,</span> <span class="kw4">int</span> segmentIndex<span class="sy0">,</span> <span class="kw4">int</span> bufIndex<span class="sy0">,</span> <span class="kw4">int</span> writeIndex<span class="sy0">,</span> <span class="kw4">int</span><span class="sy0">*</span> mode<span class="sy0">,</span> <span class="kw4">int</span><span class="sy0">*</span> nbrParams<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> p<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose36">Purpose</h4>
<div class="level4">

<p>
Retrieves (potentially dynamic, see <code>TwH5SetMassCalibDynamic</code>) mass calibration parameters from the data file. <code>segmentIndex</code> and <code>bufIndex</code>
 are currently ignored (but checked if in range). If only the global 
mass calibration is stored, this function will return the same 
parameters for every valid <code>writeIndex</code>.
</p>

</div>

<h4 id="parameters36">Parameters</h4>
<div class="level4">
<div class="table sectionedit110"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>segmentIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> segment index of the calibration parameters to retrieve (currently not used) </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>bufIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> buf index of the calibration parameters to retrieve (currently not used) </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>writeIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> write index of the calibration parameters to retrieve </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>mode</code>  </td><td class="col1 centeralign">  <code>int*</code>  </td><td class="col2"> holds the calibration mode on function return, can be NULL </td>
	</tr>
	<tr class="row6">
		<td class="col0 centeralign">  <code>nbrParams</code>  </td><td class="col1 centeralign">  <code>int*</code>  </td><td class="col2"> <code>*nbrParams</code> is set to length of array <code>p</code> on calling the function and holds the effective number of parameters written to <code>p</code> on function return. </td>
	</tr>
	<tr class="row7">
		<td class="col0 centeralign">  <code>p</code>  </td><td class="col1 centeralign">  <code>double*</code>  </td><td class="col2"> array of <code>double</code>s of minimal length *nbrParams, can be NULL if used to query <code>nbrParams</code>. </td>
	</tr>
</tbody></table></div>
<!-- EDIT110 TABLE [56075-56883] -->
</div>

<h4 id="return_value36">Return value</h4>
<div class="level4">
<div class="table sectionedit111"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="4"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwSuccess</code>  </td><td class="col2"> mass calibration parameters were read successfully </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> <code>p</code> is NULL, but *nbrParams is not 0 </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwOutOfBounds</code>  </td><td class="col1"> <code>segmentIndex</code>, <code>bufIndex</code> or <code>writeIndex</code> out of valid range </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwValueAdjusted</code>  </td><td class="col1"> <code>*nbrSegments</code> is smaller than the actual number of calibration parameters </td>
	</tr>
</tbody></table></div>
<!-- EDIT111 TABLE [56907-57338] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT109 SECTION "TwH5GetMassCalibPar" [55517-57349] -->
<h3 class="sectionedit112" id="twmultipeakfitintegration">TwMultiPeakFitIntegration</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwMultiPeakFitIntegration <span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> filename<span class="sy0">,</span> <span class="kw4">int</span> option<span class="sy0">,</span> TwProgressCallback2<span class="sy0">*</span> callback<span class="sy0">,</span> <span class="kw4">void</span><span class="sy0">*</span> cbUserData<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose37">Purpose</h4>
<div class="level4">

<p>
Integrates (potentially overlapping) <abbr title="Time Of Flight">TOF</abbr> peaks using multi-peak fitting. In addition to the <code>option</code> argument, this function relies on information that must already be stored in the data file before calling this function:
</p>
<ul>
<li class="level1"><div class="li"> correct mass calibration (potentially dynamic)</div>
</li>
<li class="level1"><div class="li"> correct <abbr title="Time Of Flight">TOF</abbr> resolution parameters ('R0', 'm0' and 'dm')</div>
</li>
<li class="level1"><div class="li"> peak table specifying the (overlapping) peaks</div>
</li>
</ul>

<p>
The function determines from the masses in the peak table if and which 
peaks overlap and determines their relative intensities (areas) through 
multi-peak fitting. Peak table entries that don't overlap will not be 
fitted by a single peak but rather the value already in <code>/PeakData/PeakData</code>
 is used. The criterion if a pair of peaks overlapps is if their center 
mass is within 3 FWHMs (calculated from 'R0', 'm0' and 'dm').
</p>

</div>

<h4 id="parameters37">Parameters</h4>
<div class="level4">
<div class="table sectionedit113"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>option</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> options for multi-peak fit (see <code>TwMultiPeakFit</code> function in TwTool library) </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>callback</code>  </td><td class="col1 centeralign">  <code>TwProgressCallback2*</code>  </td><td class="col2"> callback function that is called for every processed buf </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>cbUserData</code>  </td><td class="col1 centeralign">  <code>void*</code>  </td><td class="col2"> arbitrary user data that will be available in <code>TwProgressCallback2</code> </td>
	</tr>
</tbody></table></div>
<!-- EDIT113 TABLE [58385-58806] -->
</div>

<h4 id="return_value37">Return value</h4>
<div class="level4">
<div class="table sectionedit114"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0" rowspan="5"> <code>TwRetVal</code> </td><td class="col1 centeralign">  <code>TwSuccess</code>  </td><td class="col2"> success </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwFileNotFound</code>  </td><td class="col1"> unable to open file </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwNoData</code>  </td><td class="col1"> source of <abbr title="Time Of Flight">TOF</abbr> spectra (FullSpectra, raw or EventList) and/or peak data not present in data file </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwAborted</code>  </td><td class="col1"> peak integration was aborted (through callback) </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> general error </td>
	</tr>
</tbody></table></div>
<!-- EDIT114 TABLE [58830-59243] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT112 SECTION "TwMultiPeakFitIntegration" [57350-59254] -->
<h3 class="sectionedit115" id="twh5addlogentry">TwH5AddLogEntry</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwH5AddLogEntry <span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> filename<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> logEntryText<span class="sy0">,</span> <span class="kw4">unsigned</span> <span class="kw4">int64</span> logEntryTime<span class="br0">)</span><span class="sy0">;</span> </pre>

<p></p>

</div>

<h4 id="purpose38">Purpose</h4>
<div class="level4">

<p>
Adds a log entry to an existing data file. To add acquisition log entries during a running acquisition use <code>TwAddLogEntry</code> from TofDaqDll.dll.
</p>

</div>

<h4 id="parameters38">Parameters</h4>
<div class="level4">
<div class="table sectionedit116"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>logEntryText</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> log entry text (max. 255 chararcters) </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>logEntryTime</code>  </td><td class="col1 centeralign">  <code>unsigned int64</code>  </td><td class="col2"> log entry timestamp (0 for now) </td>
	</tr>
</tbody></table></div>
<!-- EDIT116 TABLE [59595-59849] -->
</div>

<h4 id="return_value38">Return value</h4>
<div class="level4">
<div class="table sectionedit117"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign" rowspan="3">  <code>TwRetVal</code>  </td><td class="col1 centeralign">  <code>TwSuccess</code>  </td><td class="col2"> success </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwFileNotFound</code>  </td><td class="col1"> unable to open file </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> general error </td>
	</tr>
</tbody></table></div>
<!-- EDIT117 TABLE [59873-60071] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT115 SECTION "TwH5AddLogEntry" [59255-60082] -->
<h3 class="sectionedit118" id="twh5adduserdatamultirow">TwH5AddUserDataMultiRow</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwH5AddUserDataMultiRow<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> filename<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> location<span class="sy0">,</span> <span class="kw4">int</span> nbrElements<span class="sy0">,</span> <span class="kw4">int</span> nbrRows<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> elementDescription<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> data<span class="sy0">,</span> <span class="kw4">int</span> compressionLevel<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose39">Purpose</h4>
<div class="level4">

<p>
“Offline” equivalent of <code>TwAddUserDataMultiRow</code> function (TofDaqDll). Adds user data to a data file.
</p>

</div>

<h4 id="parameters39">Parameters</h4>
<div class="level4">
<div class="table sectionedit119"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>location</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> location of group in HDF5 file where the datasets are created </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>nbrElements</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> number of elements to store per row (if the dataset exists already this value must be the same as in the file) </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>nbrRows</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> number of rows to store per call to this function (each row contains <code>nbrElements</code> entries </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>elementDescription</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> text description of elements (length 256*<code>nbrElements</code>), if <code>elementDescription</code> is <code>NULL</code> the dataset “Info” is not created. </td>
	</tr>
	<tr class="row6">
		<td class="col0 centeralign">  <code>data</code>  </td><td class="col1 centeralign">  <code>double*</code>  </td><td class="col2 leftalign"> double array of length <code>nbrElements</code>*<code>nbrRows</code> holding the actual data to be stored in dataset “Data”  </td>
	</tr>
	<tr class="row7">
		<td class="col0 centeralign">  <code>compressionLevel</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> ZLIB compression level (0-9) for dataset creation. If the dataset at <code>Location</code> already exists this parameter has no effect. </td>
	</tr>
</tbody></table></div>
<!-- EDIT119 TABLE [60454-61405] -->
</div>

<h4 id="return_value39">Return value</h4>
<div class="level4">
<div class="table sectionedit120"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign" rowspan="4">  <code>TwRetVal</code>  </td><td class="col1 centeralign">  <code>TwSuccess</code>  </td><td class="col2"> success </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwFileNotFound</code>  </td><td class="col1"> unable to open file </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwOutOfBounds</code>  </td><td class="col1"> missmatch in parameter <code>nbrElements</code> (if dataset exists already) </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> general error </td>
	</tr>
</tbody></table></div>
<!-- EDIT120 TABLE [61429-61735] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT118 SECTION "TwH5AddUserDataMultiRow" [60083-61745] -->
<h3 class="sectionedit121" id="twh5setmasscalibdynamic">TwH5SetMassCalibDynamic</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwH5SetMassCalibDynamic<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> filename<span class="sy0">,</span> <span class="kw4">int</span> segmentIndex<span class="sy0">,</span> <span class="kw4">int</span> bufIndex<span class="sy0">,</span> <span class="kw4">int</span> writeIndex<span class="sy0">,</span> <span class="kw4">int</span> nbrParams<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> par<span class="sy0">,</span> <span class="kw4">int</span> nbrStat<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> stat<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose40">Purpose</h4>
<div class="level4">

<p>
Stores dynamic mass calibration for a given spectrum in the data file. Currently <code>segmentIndex</code> and <code>bufIndex</code>
 are ignored as the Tofwerk HDF5 format specifies only the format for 
storing dynamic mass calibration parameters for every write. In the 
future this definition might be extended, for now pass -1 for <code>segmentIndex</code> and <code>bufIndex</code>
 as this is expected to be the wildcard for “all” in a future version. 
This function can be used to delete the dynamic calibration information 
by passing the “special” parameter set: <code>segmentIndex</code> = <code>bufIndex</code> = <code>writeIndex</code> = -1, <code>nbrParams</code> = <code>nbrStat</code> = 0 and <code>par</code> = <code>stat</code> = <code>NULL</code>. With the <code>stat</code> array additional information can be stored in the dataset <code>/FullSpectra/MassCalibrationStats</code> (no official format definition or supporting <abbr title="Atmospheric Pressure Interface / Application Programming Interface">API</abbr> functions).
</p>

</div>

<h4 id="parameters40">Parameters</h4>
<div class="level4">
<div class="table sectionedit122"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>segmentIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> segment index of the calibration to store (currently ignored, use -1) </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>bufIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> buf index of the calibration to store (currently ignored, use -1) </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>writeIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> write index of the calibration to store </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>nbrParams</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> length of array <code>par</code>, must be the same number of parameters as the global mass calibration </td>
	</tr>
	<tr class="row6">
		<td class="col0 centeralign">  <code>par</code>  </td><td class="col1 centeralign">  <code>double*</code>  </td><td class="col2 leftalign"> double array of length <code>nbrParams</code> holding the actual calibration values  </td>
	</tr>
	<tr class="row7">
		<td class="col0 centeralign">  <code>nbrStat</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> length of array <code>stat</code> </td>
	</tr>
	<tr class="row8">
		<td class="col0 centeralign">  <code>stat</code>  </td><td class="col1 centeralign">  <code>double*</code>  </td><td class="col2"> double array of length <code>nbrStat</code>, additional information on how the parameters were obtained (typically) </td>
	</tr>
</tbody></table></div>
<!-- EDIT122 TABLE [62836-63647] -->
</div>

<h4 id="return_value40">Return value</h4>
<div class="level4">
<div class="table sectionedit123"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign" rowspan="5">  <code>TwRetVal</code>  </td><td class="col1 centeralign">  <code>TwSuccess</code>  </td><td class="col2"> success </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwFileNotFound</code>  </td><td class="col1"> unable to open file </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwOutOfBounds</code>  </td><td class="col1"> at least one of the indices is out of bounds </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwInvalidParameter</code>  </td><td class="col1"> <code>nbrParams</code> does not match the number of calibration parameters in the global mass calibration </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> <code>par</code> is NULL but <code>nbrParams</code> != 0, <code>stat</code> is NULL but <code>nbrStat</code> != 0 </td>
	</tr>
</tbody></table></div>
<!-- EDIT123 TABLE [63671-64162] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT121 SECTION "TwH5SetMassCalibDynamic" [61746-64172] -->
<h3 class="sectionedit124" id="twgeneratesegmentprofilesfromeventlist">TwGenerateSegmentProfilesFromEventList</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwGenerateSegmentProfilesFromEventList<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> filename<span class="sy0">,</span> <span class="kw4">int</span> nbrProfiles<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> startMass<span class="sy0">,</span> <span class="kw4">double</span><span class="sy0">*</span> endMass<span class="sy0">,</span> <span class="kw4">int</span> bufStartIndex<span class="sy0">,</span> <span class="kw4">int</span> bufEndIndex<span class="sy0">,</span> <span class="kw4">int</span> writeStartIndex<span class="sy0">,</span> <span class="kw4">int</span> writeEndIndex<span class="sy0">,</span> <span class="kw4">float</span><span class="sy0">*</span> data<span class="sy0">,</span> bool startEndInSamples<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose41">Purpose</h4>
<div class="level4">

<p>
Extracts segment profiles from a data file that has event list data stored according to the integration borders (<code>startMass</code> and <code>endMass</code>). Note that the result array (<code>data</code>) is <strong>not</strong>
 zeroed by this function, this allows the user to add up disjoint 
buf/write chunks in the same data array by repeated calls to this 
function. It is the caller's responsibility to pass a properly 
zero-initialized <code>data</code> array if this accumulation is not needed/wanted. Note that the integration ranges are explicitly from <code>startMass[i]</code> to (but not including) <code>endMass[i]</code>, whereas the “usual” behavior of Tofwerk <abbr title="Atmospheric Pressure Interface / Application Programming Interface">API</abbr>
 functions is from start index to (and including) end index (buf and 
write indices of this function follow this logic). This changed behavior
 is rationalized by the most common usage mode where <code>endMass[i]</code> is equal to <code>startMass[i+1]</code>,
 avoiding that the “border” sample is counted in two profiles. However, 
if startMass[i] is equal to endMass[i] the generated profile will be all
 zeros.
</p>

</div>

<h4 id="parameters41">Parameters</h4>
<div class="level4">
<div class="table sectionedit125"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>nbrProfiles</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> number of segment profiles to generate </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>startMass</code>  </td><td class="col1 centeralign">  <code>double*</code>  </td><td class="col2"> array of length <code>nbrProfiles</code> with the integration start range (in mass or sample index, see <code>startEndInSamples</code>) </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>endMass</code>  </td><td class="col1 centeralign">  <code>double*</code>  </td><td class="col2"> array of length <code>nbrProfiles</code> with the integration end range (in mass or sample index, see <code>startEndInSamples</code>) </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>bufStartIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> buf index of accumulation start </td>
	</tr>
	<tr class="row6">
		<td class="col0 centeralign">  <code>bufEndIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> buf index of accumulation end </td>
	</tr>
	<tr class="row7">
		<td class="col0 centeralign">  <code>writeStartIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> write index of accumulation start </td>
	</tr>
	<tr class="row8">
		<td class="col0 centeralign">  <code>writeEndIndex</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> write index of accumulation end </td>
	</tr>
	<tr class="row9">
		<td class="col0 centeralign">  <code>data</code>  </td><td class="col1 centeralign">  <code>float*</code>  </td><td class="col2 leftalign"> float array of length <code>nbrProfiles</code>*<code>nbrSegments</code>  </td>
	</tr>
	<tr class="row10">
		<td class="col0 centeralign">  <code>startEndInSamples</code>  </td><td class="col1 centeralign">  <code>bool</code>  </td><td class="col2"> flag indicating whether the array elements in <code>startMass</code> and <code>endMass</code> are to be interpreted as mass or sample index </td>
	</tr>
</tbody></table></div>
<!-- EDIT125 TABLE [65536-66548] -->
</div>

<h4 id="return_value41">Return value</h4>
<div class="level4">
<div class="table sectionedit126"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign" rowspan="5">  <code>TwRetVal</code>  </td><td class="col1 centeralign">  <code>TwSuccess</code>  </td><td class="col2"> success </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwFileNotFound</code>  </td><td class="col1"> unable to open file </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwOutOfBounds</code>  </td><td class="col1"> at least one of the indices is out of bounds </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwNoData</code>  </td><td class="col1"> data file contains no event list data </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> <code>nbrProfiles &lt; 1</code> and/or <code>startMass</code>, <code>endMass</code>, <code>data</code> is <code>NULL</code> </td>
	</tr>
</tbody></table></div>
<!-- EDIT126 TABLE [66572-66992] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT124 SECTION "TwGenerateSegmentProfilesFromEventList" [64173-67002] -->
<h3 class="sectionedit127" id="twh5makepaletteimage">TwH5MakePaletteImage</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwH5MakePaletteImage<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> filename<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> location<span class="sy0">,</span> <span class="kw4">float</span><span class="sy0">*</span> data<span class="sy0">,</span> <span class="kw4">int</span> width<span class="sy0">,</span> <span class="kw4">int</span> height<span class="sy0">,</span> <span class="kw4">int</span> palette<span class="sy0">,</span> <span class="kw4">unsigned</span> <span class="kw4">char</span> paletteOffset<span class="sy0">,</span> bool paletteInvert<span class="sy0">,</span> <span class="kw4">float</span><span class="sy0">*</span> dataMinMax<span class="sy0">,</span> <span class="kw4">float</span> gammaVal<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose42">Purpose</h4>
<div class="level4">

<p>
This function uses a subset of the tool function <code>TwGenerateImageData</code> and stores the resulting image data in the HDF5 file.
</p>

</div>

<h4 id="parameters42">Parameters</h4>
<div class="level4">
<div class="table sectionedit128"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>location</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> location in the HDF5 file </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>data</code>  </td><td class="col1 centeralign">  <code>float*</code>  </td><td class="col2"> input data. Expected length: <code>width</code>*<code>height</code> </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>width</code>  </td><td class="col1 centeralign">  <code>int </code>  </td><td class="col2 leftalign"> image width  </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>height</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> image height </td>
	</tr>
	<tr class="row6">
		<td class="col0 centeralign">  <code>palette</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> paletteIndex (0-6) </td>
	</tr>
	<tr class="row7">
		<td class="col0 centeralign">  <code>paletteOffset</code>  </td><td class="col1 centeralign">  <code>unsigned char</code>  </td><td class="col2"> palette offset </td>
	</tr>
	<tr class="row8">
		<td class="col0 centeralign">  <code>paletteInvert</code>  </td><td class="col1 centeralign">  <code>bool</code>  </td><td class="col2"> palette invert flag </td>
	</tr>
	<tr class="row9">
		<td class="col0 centeralign">  <code>dataMinMax</code>  </td><td class="col1 centeralign">  <code>float*</code>  </td><td class="col2 leftalign"> data min/max values. Passing <code>NULL</code> determines min and max values from the input data.  </td>
	</tr>
	<tr class="row10">
		<td class="col0 centeralign">  <code>gamma</code>  </td><td class="col1 centeralign">  <code>float</code>  </td><td class="col2 leftalign"> gamma value  </td>
	</tr>
</tbody></table></div>
<!-- EDIT128 TABLE [67433-68107] -->
</div>

<h4 id="return_value42">Return value</h4>
<div class="level4">
<div class="table sectionedit129"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign" rowspan="5">  <code>TwRetVal</code>  </td><td class="col1 centeralign">  <code>TwSuccess</code>  </td><td class="col2"> success </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwFileNotFound</code>  </td><td class="col1"> unable to open file </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwOutOfBounds</code>  </td><td class="col1"> invalid value for <code>width</code>, <code>height</code> and/or <code>palette</code> </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwInvalidParameter</code>  </td><td class="col1"> <code>location</code> does not start with <code>/</code> </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> <code>filename</code>, <code>location</code> and/or <code>data</code> is <code>NULL</code> </td>
	</tr>
</tbody></table></div>
<!-- EDIT129 TABLE [68130-68554] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT127 SECTION "TwH5MakePaletteImage" [67003-68576] -->
<h3 class="sectionedit130" id="twh5maketruecolorimage">TwH5MakeTrueColorImage</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwH5MakeTrueColorImage<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> filename<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> location<span class="sy0">,</span> <span class="kw4">float</span><span class="sy0">*</span> data<span class="sy0">,</span> <span class="kw4">int</span> width<span class="sy0">,</span> <span class="kw4">int</span> height<span class="sy0">,</span> <span class="kw4">unsigned</span> <span class="kw4">char</span><span class="sy0">*</span> paletteOffset<span class="sy0">,</span> bool<span class="sy0">*</span> paletteInvert<span class="sy0">,</span> <span class="kw4">float</span><span class="sy0">*</span> dataMinMax<span class="sy0">,</span> <span class="kw4">float</span><span class="sy0">*</span> gammaVal<span class="sy0">,</span> <span class="kw4">unsigned</span> <span class="kw4">char</span><span class="sy0">*</span> specialColours<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose43">Purpose</h4>
<div class="level4">

<p>
This function uses a subset of the tool function <code>TwGenerateImageData</code> and stores the resulting image data in the HDF5 file.
</p>

</div>

<h4 id="parameters43">Parameters</h4>
<div class="level4">
<div class="table sectionedit131"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename to HDF5 file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>location</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> location in the HDF5 file </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>data</code>  </td><td class="col1 centeralign">  <code>float*</code>  </td><td class="col2"> input data. Expected length: 3*<code>width</code>*<code>height</code> </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>width</code>  </td><td class="col1 centeralign">  <code>int </code>  </td><td class="col2 leftalign"> image width  </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>height</code>  </td><td class="col1 centeralign">  <code>int</code>  </td><td class="col2"> image height </td>
	</tr>
	<tr class="row6">
		<td class="col0 centeralign">  <code>paletteOffset</code>  </td><td class="col1 centeralign">  <code>unsigned char*</code>  </td><td class="col2"> palette offset array of length 3 </td>
	</tr>
	<tr class="row7">
		<td class="col0 centeralign">  <code>paletteInvert</code>  </td><td class="col1 centeralign">  <code>bool*</code>  </td><td class="col2"> palette invert flag array of length 3 </td>
	</tr>
	<tr class="row8">
		<td class="col0 centeralign">  <code>dataMinMax</code>  </td><td class="col1 centeralign">  <code>float*</code>  </td><td class="col2 leftalign"> data min/max values. Expected length: 3. Passing <code>NULL</code> determines min and max values from the input data.  </td>
	</tr>
	<tr class="row9">
		<td class="col0 centeralign">  <code>gammaVal</code>  </td><td class="col1 centeralign">  <code>float*</code>  </td><td class="col2"> gamma value array of length 3 </td>
	</tr>
	<tr class="row10">
		<td class="col0 centeralign">  <code>specialColours</code>  </td><td class="col1 centeralign">  <code>unsigned char*</code>  </td><td class="col2"> “special” colors RGB triples for &lt; min, &gt; max and NaNs. Expected length: 9. Passing <code>NULL</code> uses internal defaults (white for values &lt; min, black for values &gt; max, grey for NaNs) </td>
	</tr>
</tbody></table></div>
<!-- EDIT131 TABLE [69032-69966] -->
</div>

<h4 id="return_value43">Return value</h4>
<div class="level4">
<div class="table sectionedit132"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign" rowspan="5">  <code>TwRetVal</code>  </td><td class="col1 centeralign">  <code>TwSuccess</code>  </td><td class="col2"> success </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwFileNotFound</code>  </td><td class="col1"> unable to open file </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>TwOutOfBounds</code>  </td><td class="col1"> invalid value for <code>width</code>, <code>height</code> and/or <code>palette</code> </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>TwInvalidParameter</code>  </td><td class="col1"> <code>location</code> does not start with <code>/</code> </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> <code>filename</code>, <code>location</code> and/or <code>data</code> is <code>NULL</code> </td>
	</tr>
</tbody></table></div>
<!-- EDIT132 TABLE [69989-70413] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT130 SECTION "TwH5MakeTrueColorImage" [68577-70422] -->
<h3 class="sectionedit133" id="twwritenetcdftimeseriesfile">TwWriteNetCdfTimeSeriesFile</h3>
<div class="level3">

</div>
<div class="level4">

<p>
</p><pre class="code c">TOFWERK_H5_API TwRetVal TwWriteNetCdfTimeSeriesFile<span class="br0">(</span><span class="kw4">char</span><span class="sy0">*</span> filename<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> expTitle<span class="sy0">,</span> <span class="kw4">char</span><span class="sy0">*</span> rawName<span class="sy0">,</span> <span class="kw4">int</span> nbrPoints<span class="sy0">,</span> <span class="kw4">float</span><span class="sy0">*</span> retention<span class="sy0">,</span> <span class="kw4">float</span><span class="sy0">*</span> ordinate<span class="br0">)</span><span class="sy0">;</span></pre>

<p></p>

</div>

<h4 id="purpose44">Purpose</h4>
<div class="level4">

<p>
Writes a ANDI chromatography file.
</p>

</div>

<h4 id="parameters44">Parameters</h4>
<div class="level4">
<div class="table sectionedit134"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  name  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign">  <code>filename</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> path/filename of netCDF file </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>expTitle</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> experiment title </td>
	</tr>
	<tr class="row3">
		<td class="col0 centeralign">  <code>rawName</code>  </td><td class="col1 centeralign">  <code>char*</code>  </td><td class="col2"> dataset name </td>
	</tr>
	<tr class="row4">
		<td class="col0 centeralign">  <code>nbrPoints</code>  </td><td class="col1 centeralign">  <code>int </code>  </td><td class="col2"> length of arrays <code>retention</code> and <code>ordinate</code> </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign">  <code>retention</code>  </td><td class="col1 centeralign">  <code>float*</code>  </td><td class="col2"> time axis (<code>nbrPoints</code> long) </td>
	</tr>
	<tr class="row6">
		<td class="col0 centeralign">  <code>ordinate</code>  </td><td class="col1 centeralign">  <code>float*</code>  </td><td class="col2"> intensity axis (<code>nbrPoints</code> long) </td>
	</tr>
</tbody></table></div>
<!-- EDIT134 TABLE [70707-71128] -->
</div>

<h4 id="return_value44">Return value</h4>
<div class="level4">
<div class="table sectionedit135"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  type        </th><th class="col1 centeralign">  value    </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 centeralign" rowspan="2">  <code>TwRetVal</code>  </td><td class="col1 centeralign">  <code>TwSuccess</code>  </td><td class="col2"> success </td>
	</tr>
	<tr class="row2">
		<td class="col0 centeralign">  <code>TwError</code>  </td><td class="col1"> failure to create <code>filename</code> or platform other than Windows </td>
	</tr>
</tbody></table></div>
<!-- EDIT135 TABLE [71151-71335] --><hr>

<p>
<br>

</p>

</div>
<!-- EDIT133 SECTION "TwWriteNetCdfTimeSeriesFile" [70423-71391] -->
<h2 class="sectionedit136" id="data_structures">Data structures</h2>
<div class="level2">

<p>
These data structures are used by one or more of the above functions. 
Size and offset for each element of the structure are given, if there is
 padding due to data alignment issues the corresponding offset is given 
in <span style="color:red; ">red</span> and might need adjustment if you
 try to mimic these structures in your programming environment (e.g. 
insert dummy variables to account for different alignment).
</p>

</div>
<!-- EDIT136 SECTION "Data structures" [71392-71821] -->
<h3 class="sectionedit137" id="twretval">TwRetVal</h3>
<div class="level3">

<p>
most TofDaq <abbr title="Atmospheric Pressure Interface / Application Programming Interface">API</abbr> functions return a value of type <code>TwRetVal</code> which is simply a C/C++ enumeration. In programming languages that do not have an equivalent to <code>enum</code> simply use the integer in the table:
</p>
<div class="table sectionedit138"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  TwRetVal  </th><th class="col1 centeralign">  integer  </th><th class="col2 centeralign">  meaning  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0"> <code>TwDaqRecNotRunning</code> </td><td class="col1 centeralign">  0  </td><td class="col2"> no TofDaq recorder application is running </td>
	</tr>
	<tr class="row2">
		<td class="col0"> <code>TwAcquisitionActive</code> </td><td class="col1 centeralign">  1  </td><td class="col2"> <abbr title="Atmospheric Pressure Interface / Application Programming Interface">API</abbr> call failed because of an active acquisition (for functions that work only before/after data acquisition) </td>
	</tr>
	<tr class="row3">
		<td class="col0"> <code>TwNoActiveAcquisition</code> </td><td class="col1 centeralign">  2  </td><td class="col2"> <abbr title="Atmospheric Pressure Interface / Application Programming Interface">API</abbr> call failed because there is no active acquisition (for functions that work only during acquisition) </td>
	</tr>
	<tr class="row4">
		<td class="col0"> <code>TwFileNotFound</code> </td><td class="col1 centeralign">  3  </td><td class="col2"> the specified file was not found </td>
	</tr>
	<tr class="row5">
		<td class="col0"> <code>TwSuccess</code> </td><td class="col1 centeralign">  4  </td><td class="col2"> success, this is what you usually want </td>
	</tr>
	<tr class="row6">
		<td class="col0"> <code>TwError</code> </td><td class="col1 centeralign">  5  </td><td class="col2"> general error, see possible return values for the functions </td>
	</tr>
	<tr class="row7">
		<td class="col0"> <code>TwOutOfBounds</code> </td><td class="col1 centeralign">  6  </td><td class="col2"> index is out of range 0..(number of elements - 1) </td>
	</tr>
	<tr class="row8">
		<td class="col0"> <code>TwNoData</code> </td><td class="col1 centeralign">  7  </td><td class="col2"> data error, see possible return values for the functions </td>
	</tr>
	<tr class="row9">
		<td class="col0"> <code>TwTimeout</code> </td><td class="col1 centeralign">  8  </td><td class="col2"> most <abbr title="Atmospheric Pressure Interface / Application Programming Interface">API</abbr> functions have a timeout of 500 ms </td>
	</tr>
	<tr class="row10">
		<td class="col0"> <code>TwValueAdjusted</code> </td><td class="col1 centeralign">  9  </td><td class="col2"> success, but a value was adjusted </td>
	</tr>
	<tr class="row11">
		<td class="col0"> <code>TwInvalidParameter</code> </td><td class="col1 centeralign">  10  </td><td class="col2"> parameter is not recognized </td>
	</tr>
	<tr class="row12">
		<td class="col0"> <code>TwInvalidValue</code> </td><td class="col1 centeralign">  11  </td><td class="col2"> value is of invalid type or could not be converted successfully </td>
	</tr>
	<tr class="row13">
		<td class="col0"> <code>TwAborted</code> </td><td class="col1 centeralign">  12  </td><td class="col2"> operation aborted </td>
	</tr>
</tbody></table></div>
<!-- EDIT138 TABLE [72045-73165] -->
<p>
<br>

</p>

</div>
<!-- EDIT137 SECTION "TwRetVal" [71822-73170] -->
<h3 class="sectionedit139" id="twh5desc">TwH5Desc</h3>
<div class="level3">

<p>
The TwH5Desc structure is used by the <code>TwGetH5Descriptor</code> 
function and contains information about data dimensions, available 
datasets and mass calibration. By far not all attributes stored in the 
file are available in the structure, this additional information can be 
read using <code>TwGet…AttributeFromH5</code> functions.
</p>
<div class="table sectionedit140"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  member                        </th><th class="col1 centeralign">  type            </th><th class="col2 centeralign">  size (bytes)  </th><th class="col3 centeralign">  offset (bytes)  </th><th class="col4 centeralign">  description                                                                                                        </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 leftalign"> <code>nbrSamples</code>                 </td><td class="col1 centeralign">  <code>int</code>         </td><td class="col2 centeralign">  4             </td><td class="col3 centeralign">  0               </td><td class="col4 leftalign"> length of mass spectrum (<code>/FullSpectra/TofData</code> and <code>/FullSpectra/SumSpectrum</code>), 1<sup>st</sup> data dimension  </td>
	</tr>
	<tr class="row2">
		<td class="col0 leftalign"> <code>nbrPeaks</code>                   </td><td class="col1 centeralign">  <code>int</code>         </td><td class="col2 centeralign">  4             </td><td class="col3 centeralign">  4               </td><td class="col4 leftalign"> length of stick spectrum (<code>/PeakData/PeakData</code>), 1<sup>st</sup> data dimension                                    </td>
	</tr>
	<tr class="row3">
		<td class="col0 leftalign"> <code>nbrWaveforms</code>               </td><td class="col1 centeralign">  <code>int</code>         </td><td class="col2 centeralign">  4             </td><td class="col3 centeralign">  8               </td><td class="col4 leftalign"> number of extractions summed into one segment                                                                       </td>
	</tr>
	<tr class="row4">
		<td class="col0 leftalign"> <code>nbrSegments</code>                </td><td class="col1 centeralign">  <code>int</code>         </td><td class="col2 centeralign">  4             </td><td class="col3 centeralign">  12              </td><td class="col4 leftalign"> number of segments per block, 2<sup>nd</sup> data dimension                                                         </td>
	</tr>
	<tr class="row5">
		<td class="col0 leftalign"> <code>nbrBlocks</code>                  </td><td class="col1 centeralign">  <code>int</code>         </td><td class="col2 centeralign">  4             </td><td class="col3 centeralign">  16              </td><td class="col4 leftalign"> number of blocks summed into one memory                                                                             </td>
	</tr>
	<tr class="row6">
		<td class="col0 leftalign"> <code>nbrMemories</code>                </td><td class="col1 centeralign">  <code>int</code>         </td><td class="col2 centeralign">  4             </td><td class="col3 centeralign">  20              </td><td class="col4 leftalign"> number of memories summed into one buf                                                                              </td>
	</tr>
	<tr class="row7">
		<td class="col0 leftalign"> <code>nbrBufs</code>                    </td><td class="col1 centeralign">  <code>int</code>         </td><td class="col2 centeralign">  4             </td><td class="col3 centeralign">  24              </td><td class="col4 leftalign"> number of bufs per write, 3<sup>rd</sup> data dimension                                                             </td>
	</tr>
	<tr class="row8">
		<td class="col0 leftalign"> <code>nbrWrites</code>                  </td><td class="col1 centeralign">  <code>int</code>         </td><td class="col2 centeralign">  4             </td><td class="col3 centeralign">  28              </td><td class="col4 leftalign"> number of writes per run, 4<sup>th</sup> data dimension                                                             </td>
	</tr>
	<tr class="row9">
		<td class="col0 leftalign"> <code>nbrLogEntries</code>              </td><td class="col1 centeralign">  <code>int</code>         </td><td class="col2 centeralign">  4             </td><td class="col3 centeralign">  32              </td><td class="col4 leftalign"> number of entries in <code>/AcquisitionLog/Log</code>                                                                        </td>
	</tr>
	<tr class="row10">
		<td class="col0 leftalign"> <code>secondTof</code>                  </td><td class="col1 centeralign">  <code>bool</code>        </td><td class="col2 centeralign">  1             </td><td class="col3 centeralign">  36              </td><td class="col4 leftalign"> indicates whether the data file contains bipolar data                                                               </td>
	</tr>
	<tr class="row11">
		<td class="col0 leftalign"> <code>hasSumSpectrum</code>             </td><td class="col1 centeralign">  <code>bool</code>        </td><td class="col2 centeralign">  1             </td><td class="col3 centeralign">  37              </td><td class="col4 leftalign"> indicates whether the data file has a sum spectrum stored                                                           </td>
	</tr>
	<tr class="row12">
		<td class="col0 leftalign"> <code>hasSumSpectrum2</code>            </td><td class="col1 centeralign">  <code>bool</code>        </td><td class="col2 centeralign">  1             </td><td class="col3 centeralign">  38              </td><td class="col4 leftalign"> indicates whether the data file has a sum spectrum for the second <abbr title="Time Of Flight">TOF</abbr> stored                                        </td>
	</tr>
	<tr class="row13">
		<td class="col0 leftalign"> <code>hasBufTimes</code>                </td><td class="col1 centeralign">  <code>bool</code>        </td><td class="col2 centeralign">  1             </td><td class="col3 centeralign">  39              </td><td class="col4 leftalign"> indicates whether the data file has a sum spectrum stored                                                           </td>
	</tr>
	<tr class="row14">
		<td class="col0 leftalign"> <code>hasTofData</code>                 </td><td class="col1 centeralign">  <code>bool</code>        </td><td class="col2 centeralign">  1             </td><td class="col3 centeralign">  40              </td><td class="col4 leftalign"> indicates whether the data file has <abbr title="Time Of Flight">TOF</abbr> spectra stored                                                              </td>
	</tr>
	<tr class="row15">
		<td class="col0 leftalign"> <code>hasTofData2</code>                </td><td class="col1 centeralign">  <code>bool</code>        </td><td class="col2 centeralign">  1             </td><td class="col3 centeralign">  41              </td><td class="col4 leftalign"> indicates whether the data file has <abbr title="Time Of Flight">TOF</abbr> spectra for the second <abbr title="Time Of Flight">TOF</abbr> stored                                           </td>
	</tr>
	<tr class="row16">
		<td class="col0 leftalign"> <code>hasPeakData</code>                </td><td class="col1 centeralign">  <code>bool</code>        </td><td class="col2 centeralign">  1             </td><td class="col3 centeralign">  42              </td><td class="col4 leftalign"> indicates whether the data file has peak data stored                                                                </td>
	</tr>
	<tr class="row17">
		<td class="col0 leftalign"> <code>hasPeakData2</code>               </td><td class="col1 centeralign">  <code>bool</code>        </td><td class="col2 centeralign">  1             </td><td class="col3 centeralign">  43              </td><td class="col4 leftalign"> indicates whether the data file has peak data for the second <abbr title="Time Of Flight">TOF</abbr> stored                                             </td>
	</tr>
	<tr class="row18">
		<td class="col0 leftalign"> <code>hasTpsData</code>                 </td><td class="col1 centeralign">  <code>bool</code>        </td><td class="col2 centeralign">  1             </td><td class="col3 centeralign">  44              </td><td class="col4 leftalign"> indicates whether the data file has a sum spectrum stored                                                           </td>
	</tr>
	<tr class="row19">
		<td class="col0 leftalign"> <code>hasNbrMemories</code>             </td><td class="col1 centeralign">  <code>bool</code>        </td><td class="col2 centeralign">  1             </td><td class="col3 centeralign">  45              </td><td class="col4 leftalign"> indicates whether the data file has a sum spectrum stored                                                           </td>
	</tr>
	<tr class="row20">
		<td class="col0 leftalign"> <code>hasPressureData</code>            </td><td class="col1 centeralign">  <code>bool</code>        </td><td class="col2 centeralign">  1             </td><td class="col3 centeralign">  46              </td><td class="col4 leftalign"> indicates whether the data file has a sum spectrum stored                                                           </td>
	</tr>
	<tr class="row21">
		<td class="col0 leftalign"> <code>hasLogData</code>                 </td><td class="col1 centeralign">  <code>bool</code>        </td><td class="col2 centeralign">  1             </td><td class="col3 centeralign">  47              </td><td class="col4 leftalign"> indicates whether the data file has a sum spectrum stored                                                           </td>
	</tr>
	<tr class="row22">
		<td class="col0 leftalign"> <code>hasMassCalibData</code>           </td><td class="col1 centeralign">  <code>bool</code>        </td><td class="col2 centeralign">  1             </td><td class="col3 centeralign">  48              </td><td class="col4 leftalign"> indicates whether the data file has dynamic mass calibration stored                                                 </td>
	</tr>
	<tr class="row23">
		<td class="col0 leftalign"> <code>hasMassCalib2Data</code>          </td><td class="col1 centeralign">  <code>bool</code>        </td><td class="col2 centeralign">  1             </td><td class="col3 centeralign">  49              </td><td class="col4 leftalign"> indicates whether the data file has dynamic mass calibration for second <abbr title="Time Of Flight">TOF</abbr> stored                                  </td>
	</tr>
	<tr class="row24">
		<td class="col0 leftalign"> <code>hasCh1RawData</code>              </td><td class="col1 centeralign">  <code>bool</code>        </td><td class="col2 centeralign">  1             </td><td class="col3 centeralign">  50              </td><td class="col4 leftalign"> indicates whether the data file has a sum spectrum stored                                                           </td>
	</tr>
	<tr class="row25">
		<td class="col0 leftalign"> <code>hasCh2RawData</code>              </td><td class="col1 centeralign">  <code>bool</code>        </td><td class="col2 centeralign">  1             </td><td class="col3 centeralign">  51              </td><td class="col4 leftalign"> indicates whether the data file has a sum spectrum stored                                                           </td>
	</tr>
	<tr class="row26">
		<td class="col0 leftalign"> <code>hasRawDataDesc</code>             </td><td class="col1 centeralign">  <code>bool</code>        </td><td class="col2 centeralign">  1             </td><td class="col3 centeralign">  52              </td><td class="col4 leftalign"> indicates whether the data file has a sum spectrum stored                                                           </td>
	</tr>
	<tr class="row27">
		<td class="col0 leftalign"> <code>hasEventList</code>               </td><td class="col1 centeralign">  <code>bool</code>        </td><td class="col2 centeralign">  1             </td><td class="col3 centeralign">  53              </td><td class="col4 leftalign"> indicates whether the data file has an event list stored                                                            </td>
	</tr>
	<tr class="row28">
		<td class="col0 leftalign"> <code>segIlf</code>                     </td><td class="col1 centeralign">  <code>short</code>       </td><td class="col2 centeralign">  2             </td><td class="col3 centeralign">  54              </td><td class="col4 leftalign"> segment interleaving factor                                                                                         </td>
	</tr>
	<tr class="row29">
		<td class="col0 leftalign"> <code>eventListMaxElementLength</code>  </td><td class="col1 centeralign">  <code>int</code>         </td><td class="col2 centeralign">  4             </td><td class="col3 centeralign">  56              </td><td class="col4 leftalign"> maximum number of elements in <code>/FullSpectra/EventList</code> dataset                                                    </td>
	</tr>
	<tr class="row30">
		<td class="col0 leftalign"> <code>daqMode</code>                    </td><td class="col1 centeralign">  <code>int</code>         </td><td class="col2 centeralign">  4             </td><td class="col3 centeralign">  60              </td><td class="col4 leftalign"> <abbr title="Data Acquisition">DAQ</abbr> hardware used to record data file                                                                               </td>
	</tr>
	<tr class="row31">
		<td class="col0 leftalign"> <code>acquisitionMode</code>            </td><td class="col1 centeralign">  <code>int</code>         </td><td class="col2 centeralign">  4             </td><td class="col3 centeralign">  64              </td><td class="col4 leftalign"> <abbr title="Data Acquisition">DAQ</abbr> acquisition mode                                                                                                </td>
	</tr>
	<tr class="row32">
		<td class="col0 leftalign"> <code>massCalibMode</code>              </td><td class="col1 centeralign">  <code>int</code>         </td><td class="col2 centeralign">  4             </td><td class="col3 centeralign">  68              </td><td class="col4 leftalign"> mass calibration function used                                                                                      </td>
	</tr>
	<tr class="row33">
		<td class="col0 leftalign"> <code>massCalibMode2</code>             </td><td class="col1 centeralign">  <code>int</code>         </td><td class="col2 centeralign">  4             </td><td class="col3 centeralign">  72              </td><td class="col4 leftalign"> mass calibration function used for second <abbr title="Time Of Flight">TOF</abbr>                                                                       </td>
	</tr>
	<tr class="row34">
		<td class="col0 leftalign"> <code>nbrCalibParams</code>             </td><td class="col1 centeralign">  <code>int</code>         </td><td class="col2 centeralign">  4             </td><td class="col3 centeralign">  76              </td><td class="col4 leftalign"> number of mass calibration parameters                                                                               </td>
	</tr>
	<tr class="row35">
		<td class="col0 leftalign"> <code>nbrCalibParams2</code>            </td><td class="col1 centeralign">  <code>int</code>         </td><td class="col2 centeralign">  4             </td><td class="col3 centeralign">  80              </td><td class="col4 leftalign"> number of mass calibration parameters for second <abbr title="Time Of Flight">TOF</abbr>                                                                </td>
	</tr>
	<tr class="row36">
		<td class="col0 leftalign"> <code>nbrCubes</code>                   </td><td class="col1 centeralign">  <code>int</code>         </td><td class="col2 centeralign">  4             </td><td class="col3 centeralign">  80              </td><td class="col4 leftalign"> number of cubes summed into one write                                                                               </td>
	</tr>
	<tr class="row37">
		<td class="col0 leftalign"> <code>p</code>                          </td><td class="col1 centeralign">  <code>double[16]</code>  </td><td class="col2 centeralign">  128           </td><td class="col3 centeralign">  88              </td><td class="col4 leftalign"> mass calibration parameters                                                                                         </td>
	</tr>
	<tr class="row38">
		<td class="col0 leftalign"> <code>p2</code>                         </td><td class="col1 centeralign">  <code>double[16]</code>  </td><td class="col2 centeralign">  128           </td><td class="col3 centeralign">  216             </td><td class="col4 leftalign"> mass calibration parameters for second <abbr title="Time Of Flight">TOF</abbr>                                                                          </td>
	</tr>
	<tr class="row39">
		<td class="col0 leftalign"> <code>tofPeriod</code>                  </td><td class="col1 centeralign">  <code>double</code>      </td><td class="col2 centeralign">  8             </td><td class="col3 centeralign">  344             </td><td class="col4 leftalign"> <abbr title="Time Of Flight">TOF</abbr> period in seconds                                                                                               </td>
	</tr>
	<tr class="row40">
		<td class="col0 leftalign"> <code>blockPeriod</code>                </td><td class="col1 centeralign">  <code>double</code>      </td><td class="col2 centeralign">  8             </td><td class="col3 centeralign">  352             </td><td class="col4 leftalign"> block period in seconds                                                                                             </td>
	</tr>
	<tr class="row41">
		<td class="col0 leftalign"> <code>sampleInterval</code>             </td><td class="col1 centeralign">  <code>float</code>       </td><td class="col2 centeralign">  4             </td><td class="col3 centeralign">  360             </td><td class="col4 leftalign"> sample interval in seconds                                                                                          </td>
	</tr>
	<tr class="row42">
		<td class="col0 leftalign"> <code>singleIonSignal</code>            </td><td class="col1 centeralign">  <code>float</code>       </td><td class="col2 centeralign">  4             </td><td class="col3 centeralign">  364             </td><td class="col4 leftalign"> single ion signal in mV·ns                                                                                          </td>
	</tr>
	<tr class="row43">
		<td class="col0 leftalign"> <code>singleIonSignal2</code>           </td><td class="col1 centeralign">  <code>float</code>       </td><td class="col2 centeralign">  4             </td><td class="col3 centeralign">  368             </td><td class="col4 leftalign"> single ion signal in mV·ns for second <abbr title="Time Of Flight">TOF</abbr>                                                                           </td>
	</tr>
	<tr class="row44">
		<td class="col0 leftalign"> <code>dummy</code>                      </td><td class="col1 leftalign"> <code>char[4]</code>      </td><td class="col2 centeralign">  4             </td><td class="col3 centeralign">  372             </td><td class="col4 leftalign"> alignment dummy                                                                                                     </td>
	</tr>
	<tr class="row45">
		<td class="col0 centeralign" colspan="2">  <em>Total size</em>                                  </td><td class="col2 centeralign">  <em>376</em>       </td><td class="col3 leftalign" colspan="2">
                                                                        
                                                               </td>
	</tr>
</tbody></table></div>
<!-- EDIT140 TABLE [73510-83080] -->
<p>
<br>

</p>

</div>
<!-- EDIT139 SECTION "TwH5Desc" [73171-83085] -->
<h3 class="sectionedit141" id="tpeakpar">TPeakPar</h3>
<div class="level3">

<p>
This structure is used by the <code>TwGetPeakParametersFromH5</code> function.
</p>
<div class="table sectionedit142"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  member  </th><th class="col1 centeralign">  type  </th><th class="col2 centeralign">  size (bytes)  </th><th class="col3 centeralign">  offset (bytes)  </th><th class="col4 centeralign">  description  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0"> <code>label</code> </td><td class="col1 centeralign">  <code>char[64]</code>  </td><td class="col2 centeralign">  64  </td><td class="col3 centeralign">  0  </td><td class="col4"> contains the arbitrary peak label or “nominal” or “nominal2” for automatically generated peak lists </td>
	</tr>
	<tr class="row2">
		<td class="col0"> <code>mass</code> </td><td class="col1 centeralign">  <code>float</code>  </td><td class="col2 centeralign">  4  </td><td class="col3 centeralign">  64  </td><td class="col4"> mass of the peak </td>
	</tr>
	<tr class="row3">
		<td class="col0"> <code>loMass</code> </td><td class="col1 centeralign">  <code>float</code>  </td><td class="col2 centeralign">  4  </td><td class="col3 centeralign">  68  </td><td class="col4"> lower integration border (in mass units) </td>
	</tr>
	<tr class="row4">
		<td class="col0"> <code>hiMass</code> </td><td class="col1 centeralign">  <code>float</code>  </td><td class="col2 centeralign">  4  </td><td class="col3 centeralign">  72  </td><td class="col4"> upper integration border (in mass units) </td>
	</tr>
	<tr class="row5">
		<td class="col0 centeralign" colspan="2">  <em>Total size</em>            </td><td class="col2 centeralign">  <em>76</em>  </td><td class="col3 leftalign" colspan="2">   </td>
	</tr>
</tbody></table></div>
<!-- EDIT142 TABLE [83175-83679] -->
<p>
<br>

</p>

</div>
<!-- EDIT141 SECTION "TPeakPar" [83086-83684] -->
<h2 class="sectionedit143" id="deprecated_functions">Deprecated functions</h2>
<div class="level2">

<p>
These functions are still supported but should not be used anymore in 
new programs, they are likely to be removed in future versions. If your 
software relies on one of these functions and cannot be modified to use a
 replacement function contact Tofwerk Software Development to 
“undeprecate” your function:
</p>
<div class="table sectionedit144"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0 centeralign">  deprecated function  </th><th class="col1 centeralign">  replacement function  </th><th class="col2 centeralign">  deprecation reason  </th>
	</tr>
	</thead>
	<tbody><tr class="row1">
		<td class="col0 leftalign"> <code>TwH5Tof2Mass</code>  </td><td class="col1 leftalign"> <code>TwTof2Mass</code>  </td><td class="col2" rowspan="2"> function was moved to <code>TwToolDll.dll</code> </td>
	</tr>
	<tr class="row2">
		<td class="col0 leftalign"> <code>TwH5Mass2Tof</code>  </td><td class="col1 leftalign"> <code>TwMass2Tof</code>  </td>
	</tr>
</tbody></table></div>
<!-- EDIT144 TABLE [84024-84225] -->
</div>
<!-- EDIT143 SECTION "Deprecated functions" [83685-84226] -->
<h2 class="sectionedit145" id="previous_revisions">Previous revisions</h2>
<div class="level2">

<p>
<a href="http://wiki.tofwerk.com/doku.php?id=manuals:daq:twh5dll198" class="wikilink1" title="manuals:daq:twh5dll198">TwH5Dll 1.98</a>
</p>

<p>
<a href="http://wiki.tofwerk.com/doku.php?id=manuals:daq:twh5dll197" class="wikilink1" title="manuals:daq:twh5dll197">TwH5Dll 1.97</a>
</p>

<p>
<a href="http://wiki.tofwerk.com/doku.php?id=manuals:daq:twh5dll196" class="wikilink1" title="manuals:daq:twh5dll196">TwH5Dll 1.96</a>
</p>

<p>
<a href="http://wiki.tofwerk.com/doku.php?id=manuals:daq:twh5dll195" class="wikilink1" title="manuals:daq:twh5dll195">TwH5Dll 1.95</a>
</p>

<p>
<a href="http://wiki.tofwerk.com/doku.php?id=manuals:daq:twh5dll194" class="wikilink1" title="manuals:daq:twh5dll194">TwH5Dll 1.94</a>
</p>

<p>
<a href="http://wiki.tofwerk.com/doku.php?id=manuals:daq:twh5dll193" class="wikilink1" title="manuals:daq:twh5dll193">TwH5Dll 1.93</a>
</p>

<p>
<a href="http://wiki.tofwerk.com/doku.php?id=manuals:daq:twh5dll192" class="wikilink1" title="manuals:daq:twh5dll192">TwH5Dll 1.92</a>
</p>

<p>
<a href="http://wiki.tofwerk.com/doku.php?id=manuals:daq:twh5dll191" class="wikilink1" title="manuals:daq:twh5dll191">TwH5Dll 1.91</a>
</p>

<p>
<a href="http://wiki.tofwerk.com/doku.php?id=manuals:daq:twh5dll190" class="wikilink1" title="manuals:daq:twh5dll190">TwH5Dll 1.90</a>
</p>

<p>
<a href="http://wiki.tofwerk.com/doku.php?id=manuals:daq:twh5dll189" class="wikilink1" title="manuals:daq:twh5dll189">TwH5Dll 1.89</a>
</p>

<p>
<a href="http://wiki.tofwerk.com/doku.php?id=manuals:daq:twh5dll188" class="wikilink1" title="manuals:daq:twh5dll188">TwH5Dll 1.88</a>
</p>

<p>
<a href="http://wiki.tofwerk.com/doku.php?id=manuals:daq:twh5dll187" class="wikilink1" title="manuals:daq:twh5dll187">TwH5Dll 1.87</a>
</p>

<p>
<a href="http://wiki.tofwerk.com/doku.php?id=manuals:daq:twh5dll186" class="wikilink1" title="manuals:daq:twh5dll186">TwH5Dll 1.86</a>
</p>

<p>
<a href="http://wiki.tofwerk.com/doku.php?id=manuals:daq:twh5dll185" class="wikilink1" title="manuals:daq:twh5dll185">TwH5Dll 1.85</a>
</p>

<p>
<a href="http://wiki.tofwerk.com/doku.php?id=manuals:daq:twh5dll184" class="wikilink1" title="manuals:daq:twh5dll184">TwH5Dll 1.84</a>
</p>

<p>
In versions before 1.84 all <abbr title="Atmospheric Pressure Interface / Application Programming Interface">API</abbr> functions were contained in TofDaqDll.dll
</p>

<p>
<a href="http://soft.tofwerk.com/TofDaqDll_1.81.zip" class="urlextern" title="http://soft.tofwerk.com/TofDaqDll_1.81.zip" rel="nofollow">TofDaq API 1.81</a>
</p>

</div>
<!-- EDIT145 SECTION "Previous revisions" [84227-] --></div>


</body></html>