// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// tof
NumericVector tof(CharacterVector toftype, double drift, double pulse, double mass, NumericVector x, NumericVector v);
RcppExport SEXP TofDaqR_tof(SEXP toftypeSEXP, SEXP driftSEXP, SEXP pulseSEXP, SEXP massSEXP, SEXP xSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type toftype(toftypeSEXP);
    Rcpp::traits::input_parameter< double >::type drift(driftSEXP);
    Rcpp::traits::input_parameter< double >::type pulse(pulseSEXP);
    Rcpp::traits::input_parameter< double >::type mass(massSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(tof(toftype, drift, pulse, mass, x, v));
    return rcpp_result_gen;
END_RCPP
}
// EventList2TofSpec
SEXP EventList2TofSpec(NumericVector events, double clockPeriod, double sampleInterval, int nbrSamples);
RcppExport SEXP TofDaqR_EventList2TofSpec(SEXP eventsSEXP, SEXP clockPeriodSEXP, SEXP sampleIntervalSEXP, SEXP nbrSamplesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type events(eventsSEXP);
    Rcpp::traits::input_parameter< double >::type clockPeriod(clockPeriodSEXP);
    Rcpp::traits::input_parameter< double >::type sampleInterval(sampleIntervalSEXP);
    Rcpp::traits::input_parameter< int >::type nbrSamples(nbrSamplesSEXP);
    rcpp_result_gen = Rcpp::wrap(EventList2TofSpec(events, clockPeriod, sampleInterval, nbrSamples));
    return rcpp_result_gen;
END_RCPP
}
// DecodeEventList
SEXP DecodeEventList(NumericVector events, int clockPeriod, int sampleInterval);
RcppExport SEXP TofDaqR_DecodeEventList(SEXP eventsSEXP, SEXP clockPeriodSEXP, SEXP sampleIntervalSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type events(eventsSEXP);
    Rcpp::traits::input_parameter< int >::type clockPeriod(clockPeriodSEXP);
    Rcpp::traits::input_parameter< int >::type sampleInterval(sampleIntervalSEXP);
    rcpp_result_gen = Rcpp::wrap(DecodeEventList(events, clockPeriod, sampleInterval));
    return rcpp_result_gen;
END_RCPP
}
// DecodeEventListThreshold
List DecodeEventListThreshold(NumericVector events, double clockPeriod, double sampleInterval, double threshold, int presamples, int postsamples);
RcppExport SEXP TofDaqR_DecodeEventListThreshold(SEXP eventsSEXP, SEXP clockPeriodSEXP, SEXP sampleIntervalSEXP, SEXP thresholdSEXP, SEXP presamplesSEXP, SEXP postsamplesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type events(eventsSEXP);
    Rcpp::traits::input_parameter< double >::type clockPeriod(clockPeriodSEXP);
    Rcpp::traits::input_parameter< double >::type sampleInterval(sampleIntervalSEXP);
    Rcpp::traits::input_parameter< double >::type threshold(thresholdSEXP);
    Rcpp::traits::input_parameter< int >::type presamples(presamplesSEXP);
    Rcpp::traits::input_parameter< int >::type postsamples(postsamplesSEXP);
    rcpp_result_gen = Rcpp::wrap(DecodeEventListThreshold(events, clockPeriod, sampleInterval, threshold, presamples, postsamples));
    return rcpp_result_gen;
END_RCPP
}
// SiProcessSpectrumFromShMem
SEXP SiProcessSpectrumFromShMem(int specType, int BufIndex);
RcppExport SEXP TofDaqR_SiProcessSpectrumFromShMem(SEXP specTypeSEXP, SEXP BufIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type specType(specTypeSEXP);
    Rcpp::traits::input_parameter< int >::type BufIndex(BufIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(SiProcessSpectrumFromShMem(specType, BufIndex));
    return rcpp_result_gen;
END_RCPP
}
// KeepSharedMemMapped
SEXP KeepSharedMemMapped(bool keepMapped);
RcppExport SEXP TofDaqR_KeepSharedMemMapped(SEXP keepMappedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< bool >::type keepMapped(keepMappedSEXP);
    rcpp_result_gen = Rcpp::wrap(KeepSharedMemMapped(keepMapped));
    return rcpp_result_gen;
END_RCPP
}
// InitializeDll
SEXP InitializeDll();
RcppExport SEXP TofDaqR_InitializeDll() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(InitializeDll());
    return rcpp_result_gen;
END_RCPP
}
// CleanupDll
void CleanupDll();
RcppExport SEXP TofDaqR_CleanupDll() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    CleanupDll();
    return R_NilValue;
END_RCPP
}
// GetDllVersion
double GetDllVersion();
RcppExport SEXP TofDaqR_GetDllVersion() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(GetDllVersion());
    return rcpp_result_gen;
END_RCPP
}
// TofDaqRunning
bool TofDaqRunning();
RcppExport SEXP TofDaqR_TofDaqRunning() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TofDaqRunning());
    return rcpp_result_gen;
END_RCPP
}
// DaqActive
bool DaqActive();
RcppExport SEXP TofDaqR_DaqActive() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DaqActive());
    return rcpp_result_gen;
END_RCPP
}
// StartAcquisition
SEXP StartAcquisition();
RcppExport SEXP TofDaqR_StartAcquisition() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(StartAcquisition());
    return rcpp_result_gen;
END_RCPP
}
// StopAcquisition
SEXP StopAcquisition();
RcppExport SEXP TofDaqR_StopAcquisition() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(StopAcquisition());
    return rcpp_result_gen;
END_RCPP
}
// CloseTofDaqRec
SEXP CloseTofDaqRec();
RcppExport SEXP TofDaqR_CloseTofDaqRec() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CloseTofDaqRec());
    return rcpp_result_gen;
END_RCPP
}
// InitializeDaqDevice
SEXP InitializeDaqDevice();
RcppExport SEXP TofDaqR_InitializeDaqDevice() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(InitializeDaqDevice());
    return rcpp_result_gen;
END_RCPP
}
// SetTimeout
void SetTimeout(int timeout);
RcppExport SEXP TofDaqR_SetTimeout(SEXP timeoutSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type timeout(timeoutSEXP);
    SetTimeout(timeout);
    return R_NilValue;
END_RCPP
}
// GetTimeout
int GetTimeout();
RcppExport SEXP TofDaqR_GetTimeout() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(GetTimeout());
    return rcpp_result_gen;
END_RCPP
}
// AutoSetupDaqDevice
SEXP AutoSetupDaqDevice();
RcppExport SEXP TofDaqR_AutoSetupDaqDevice() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(AutoSetupDaqDevice());
    return rcpp_result_gen;
END_RCPP
}
// OnDemandMassCalibration
SEXP OnDemandMassCalibration(int action);
RcppExport SEXP TofDaqR_OnDemandMassCalibration(SEXP actionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type action(actionSEXP);
    rcpp_result_gen = Rcpp::wrap(OnDemandMassCalibration(action));
    return rcpp_result_gen;
END_RCPP
}
// ShowConfigWindow
SEXP ShowConfigWindow(int ConfigWindowIndex);
RcppExport SEXP TofDaqR_ShowConfigWindow(SEXP ConfigWindowIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type ConfigWindowIndex(ConfigWindowIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(ShowConfigWindow(ConfigWindowIndex));
    return rcpp_result_gen;
END_RCPP
}
// LoadIniFile
SEXP LoadIniFile(Nullable<Rcpp::String> IniFile);
RcppExport SEXP TofDaqR_LoadIniFile(SEXP IniFileSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Nullable<Rcpp::String> >::type IniFile(IniFileSEXP);
    rcpp_result_gen = Rcpp::wrap(LoadIniFile(IniFile));
    return rcpp_result_gen;
END_RCPP
}
// SaveIniFile
SEXP SaveIniFile(Nullable<Rcpp::String> IniFile);
RcppExport SEXP TofDaqR_SaveIniFile(SEXP IniFileSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Nullable<Rcpp::String> >::type IniFile(IniFileSEXP);
    rcpp_result_gen = Rcpp::wrap(SaveIniFile(IniFile));
    return rcpp_result_gen;
END_RCPP
}
// GetDaqParameter
String GetDaqParameter(SEXP Parameter);
RcppExport SEXP TofDaqR_GetDaqParameter(SEXP ParameterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Parameter(ParameterSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDaqParameter(Parameter));
    return rcpp_result_gen;
END_RCPP
}
// GetDaqParameterInt
int GetDaqParameterInt(SEXP Parameter);
RcppExport SEXP TofDaqR_GetDaqParameterInt(SEXP ParameterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Parameter(ParameterSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDaqParameterInt(Parameter));
    return rcpp_result_gen;
END_RCPP
}
// GetDaqParameterBool
bool GetDaqParameterBool(SEXP Parameter);
RcppExport SEXP TofDaqR_GetDaqParameterBool(SEXP ParameterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Parameter(ParameterSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDaqParameterBool(Parameter));
    return rcpp_result_gen;
END_RCPP
}
// GetDaqParameterFloat
double GetDaqParameterFloat(SEXP Parameter);
RcppExport SEXP TofDaqR_GetDaqParameterFloat(SEXP ParameterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Parameter(ParameterSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDaqParameterFloat(Parameter));
    return rcpp_result_gen;
END_RCPP
}
// GetDaqParameterInt64
String GetDaqParameterInt64(SEXP Parameter);
RcppExport SEXP TofDaqR_GetDaqParameterInt64(SEXP ParameterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Parameter(ParameterSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDaqParameterInt64(Parameter));
    return rcpp_result_gen;
END_RCPP
}
// GetDaqParameterDouble
double GetDaqParameterDouble(SEXP Parameter);
RcppExport SEXP TofDaqR_GetDaqParameterDouble(SEXP ParameterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Parameter(ParameterSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDaqParameterDouble(Parameter));
    return rcpp_result_gen;
END_RCPP
}
// GetDaqParameterIntRef
SEXP GetDaqParameterIntRef(SEXP Parameter);
RcppExport SEXP TofDaqR_GetDaqParameterIntRef(SEXP ParameterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Parameter(ParameterSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDaqParameterIntRef(Parameter));
    return rcpp_result_gen;
END_RCPP
}
// GetDaqParameterBoolRef
SEXP GetDaqParameterBoolRef(SEXP Parameter);
RcppExport SEXP TofDaqR_GetDaqParameterBoolRef(SEXP ParameterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Parameter(ParameterSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDaqParameterBoolRef(Parameter));
    return rcpp_result_gen;
END_RCPP
}
// GetDaqParameterFloatRef
SEXP GetDaqParameterFloatRef(SEXP Parameter);
RcppExport SEXP TofDaqR_GetDaqParameterFloatRef(SEXP ParameterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Parameter(ParameterSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDaqParameterFloatRef(Parameter));
    return rcpp_result_gen;
END_RCPP
}
// GetDaqParameterInt64Ref
SEXP GetDaqParameterInt64Ref(SEXP Parameter);
RcppExport SEXP TofDaqR_GetDaqParameterInt64Ref(SEXP ParameterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Parameter(ParameterSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDaqParameterInt64Ref(Parameter));
    return rcpp_result_gen;
END_RCPP
}
// GetDaqParameterDoubleRef
SEXP GetDaqParameterDoubleRef(SEXP Parameter);
RcppExport SEXP TofDaqR_GetDaqParameterDoubleRef(SEXP ParameterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Parameter(ParameterSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDaqParameterDoubleRef(Parameter));
    return rcpp_result_gen;
END_RCPP
}
// GetDaqParameterStringRef
SEXP GetDaqParameterStringRef(SEXP Parameter);
RcppExport SEXP TofDaqR_GetDaqParameterStringRef(SEXP ParameterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Parameter(ParameterSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDaqParameterStringRef(Parameter));
    return rcpp_result_gen;
END_RCPP
}
// SetDaqParameter
SEXP SetDaqParameter(SEXP Parameter, SEXP ValueString);
RcppExport SEXP TofDaqR_SetDaqParameter(SEXP ParameterSEXP, SEXP ValueStringSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Parameter(ParameterSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ValueString(ValueStringSEXP);
    rcpp_result_gen = Rcpp::wrap(SetDaqParameter(Parameter, ValueString));
    return rcpp_result_gen;
END_RCPP
}
// SetDaqParameterInt
SEXP SetDaqParameterInt(SEXP Parameter, int Value);
RcppExport SEXP TofDaqR_SetDaqParameterInt(SEXP ParameterSEXP, SEXP ValueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Parameter(ParameterSEXP);
    Rcpp::traits::input_parameter< int >::type Value(ValueSEXP);
    rcpp_result_gen = Rcpp::wrap(SetDaqParameterInt(Parameter, Value));
    return rcpp_result_gen;
END_RCPP
}
// SetDaqParameterBool
SEXP SetDaqParameterBool(SEXP Parameter, bool Value);
RcppExport SEXP TofDaqR_SetDaqParameterBool(SEXP ParameterSEXP, SEXP ValueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Parameter(ParameterSEXP);
    Rcpp::traits::input_parameter< bool >::type Value(ValueSEXP);
    rcpp_result_gen = Rcpp::wrap(SetDaqParameterBool(Parameter, Value));
    return rcpp_result_gen;
END_RCPP
}
// SetDaqParameterFloat
SEXP SetDaqParameterFloat(SEXP Parameter, double Value);
RcppExport SEXP TofDaqR_SetDaqParameterFloat(SEXP ParameterSEXP, SEXP ValueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Parameter(ParameterSEXP);
    Rcpp::traits::input_parameter< double >::type Value(ValueSEXP);
    rcpp_result_gen = Rcpp::wrap(SetDaqParameterFloat(Parameter, Value));
    return rcpp_result_gen;
END_RCPP
}
// SetDaqParameterInt64
SEXP SetDaqParameterInt64(SEXP Parameter, SEXP Value);
RcppExport SEXP TofDaqR_SetDaqParameterInt64(SEXP ParameterSEXP, SEXP ValueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Parameter(ParameterSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Value(ValueSEXP);
    rcpp_result_gen = Rcpp::wrap(SetDaqParameterInt64(Parameter, Value));
    return rcpp_result_gen;
END_RCPP
}
// SetDaqParameterDouble
SEXP SetDaqParameterDouble(SEXP Parameter, double Value);
RcppExport SEXP TofDaqR_SetDaqParameterDouble(SEXP ParameterSEXP, SEXP ValueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Parameter(ParameterSEXP);
    Rcpp::traits::input_parameter< double >::type Value(ValueSEXP);
    rcpp_result_gen = Rcpp::wrap(SetDaqParameterDouble(Parameter, Value));
    return rcpp_result_gen;
END_RCPP
}
// GetDescriptor
SEXP GetDescriptor();
RcppExport SEXP TofDaqR_GetDescriptor() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(GetDescriptor());
    return rcpp_result_gen;
END_RCPP
}
// GetPeakParameters
SEXP GetPeakParameters(int PeakIndex);
RcppExport SEXP TofDaqR_GetPeakParameters(SEXP PeakIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type PeakIndex(PeakIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(GetPeakParameters(PeakIndex));
    return rcpp_result_gen;
END_RCPP
}
// ReleaseSharedMemory
SEXP ReleaseSharedMemory();
RcppExport SEXP TofDaqR_ReleaseSharedMemory() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(ReleaseSharedMemory());
    return rcpp_result_gen;
END_RCPP
}
// WaitForNewData
SEXP WaitForNewData(int timeout, bool WaitForEventReset);
RcppExport SEXP TofDaqR_WaitForNewData(SEXP timeoutSEXP, SEXP WaitForEventResetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type timeout(timeoutSEXP);
    Rcpp::traits::input_parameter< bool >::type WaitForEventReset(WaitForEventResetSEXP);
    rcpp_result_gen = Rcpp::wrap(WaitForNewData(timeout, WaitForEventReset));
    return rcpp_result_gen;
END_RCPP
}
// WaitForEndOfAcquisition
SEXP WaitForEndOfAcquisition(int timeout);
RcppExport SEXP TofDaqR_WaitForEndOfAcquisition(SEXP timeoutSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type timeout(timeoutSEXP);
    rcpp_result_gen = Rcpp::wrap(WaitForEndOfAcquisition(timeout));
    return rcpp_result_gen;
END_RCPP
}
// GetSumSpectrumFromShMem
SEXP GetSumSpectrumFromShMem(bool Normalize);
RcppExport SEXP TofDaqR_GetSumSpectrumFromShMem(SEXP NormalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< bool >::type Normalize(NormalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(GetSumSpectrumFromShMem(Normalize));
    return rcpp_result_gen;
END_RCPP
}
// GetTofSpectrumFromShMem
SEXP GetTofSpectrumFromShMem(int SegmentIndex, int SegmentEndIndex, int BufIndex, bool Normalize);
RcppExport SEXP TofDaqR_GetTofSpectrumFromShMem(SEXP SegmentIndexSEXP, SEXP SegmentEndIndexSEXP, SEXP BufIndexSEXP, SEXP NormalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type SegmentIndex(SegmentIndexSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentEndIndex(SegmentEndIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufIndex(BufIndexSEXP);
    Rcpp::traits::input_parameter< bool >::type Normalize(NormalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(GetTofSpectrumFromShMem(SegmentIndex, SegmentEndIndex, BufIndex, Normalize));
    return rcpp_result_gen;
END_RCPP
}
// GetSpecXaxisFromShMem
SEXP GetSpecXaxisFromShMem(int Type);
RcppExport SEXP TofDaqR_GetSpecXaxisFromShMem(SEXP TypeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type Type(TypeSEXP);
    rcpp_result_gen = Rcpp::wrap(GetSpecXaxisFromShMem(Type));
    return rcpp_result_gen;
END_RCPP
}
// GetStickSpectrumFromShMem
SEXP GetStickSpectrumFromShMem(int SegmentIndex, int SegmentEndIndex, int BufIndex);
RcppExport SEXP TofDaqR_GetStickSpectrumFromShMem(SEXP SegmentIndexSEXP, SEXP SegmentEndIndexSEXP, SEXP BufIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type SegmentIndex(SegmentIndexSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentEndIndex(SegmentEndIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufIndex(BufIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(GetStickSpectrumFromShMem(SegmentIndex, SegmentEndIndex, BufIndex));
    return rcpp_result_gen;
END_RCPP
}
// GetSegmentProfileFromShMem
SEXP GetSegmentProfileFromShMem(int PeakIndex, int BufIndex);
RcppExport SEXP TofDaqR_GetSegmentProfileFromShMem(SEXP PeakIndexSEXP, SEXP BufIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type PeakIndex(PeakIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufIndex(BufIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(GetSegmentProfileFromShMem(PeakIndex, BufIndex));
    return rcpp_result_gen;
END_RCPP
}
// GetBufTimeFromShMem
SEXP GetBufTimeFromShMem(int BufIndex, int WriteIndex);
RcppExport SEXP TofDaqR_GetBufTimeFromShMem(SEXP BufIndexSEXP, SEXP WriteIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type BufIndex(BufIndexSEXP);
    Rcpp::traits::input_parameter< int >::type WriteIndex(WriteIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(GetBufTimeFromShMem(BufIndex, WriteIndex));
    return rcpp_result_gen;
END_RCPP
}
// AddLogEntry
SEXP AddLogEntry(SEXP LogEntryText, SEXP LogEntryTime);
RcppExport SEXP TofDaqR_AddLogEntry(SEXP LogEntryTextSEXP, SEXP LogEntryTimeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type LogEntryText(LogEntryTextSEXP);
    Rcpp::traits::input_parameter< SEXP >::type LogEntryTime(LogEntryTimeSEXP);
    rcpp_result_gen = Rcpp::wrap(AddLogEntry(LogEntryText, LogEntryTime));
    return rcpp_result_gen;
END_RCPP
}
// AddAttributeInt
SEXP AddAttributeInt(SEXP Object, SEXP AttributeName, int Value);
RcppExport SEXP TofDaqR_AddAttributeInt(SEXP ObjectSEXP, SEXP AttributeNameSEXP, SEXP ValueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Object(ObjectSEXP);
    Rcpp::traits::input_parameter< SEXP >::type AttributeName(AttributeNameSEXP);
    Rcpp::traits::input_parameter< int >::type Value(ValueSEXP);
    rcpp_result_gen = Rcpp::wrap(AddAttributeInt(Object, AttributeName, Value));
    return rcpp_result_gen;
END_RCPP
}
// AddAttributeDouble
SEXP AddAttributeDouble(SEXP Object, SEXP AttributeName, double Value);
RcppExport SEXP TofDaqR_AddAttributeDouble(SEXP ObjectSEXP, SEXP AttributeNameSEXP, SEXP ValueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Object(ObjectSEXP);
    Rcpp::traits::input_parameter< SEXP >::type AttributeName(AttributeNameSEXP);
    Rcpp::traits::input_parameter< double >::type Value(ValueSEXP);
    rcpp_result_gen = Rcpp::wrap(AddAttributeDouble(Object, AttributeName, Value));
    return rcpp_result_gen;
END_RCPP
}
// AddAttributeString
SEXP AddAttributeString(SEXP Object, SEXP AttributeName, SEXP Value);
RcppExport SEXP TofDaqR_AddAttributeString(SEXP ObjectSEXP, SEXP AttributeNameSEXP, SEXP ValueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Object(ObjectSEXP);
    Rcpp::traits::input_parameter< SEXP >::type AttributeName(AttributeNameSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Value(ValueSEXP);
    rcpp_result_gen = Rcpp::wrap(AddAttributeString(Object, AttributeName, Value));
    return rcpp_result_gen;
END_RCPP
}
// AddUserData
SEXP AddUserData(SEXP Location, int NbrElements, NumericVector Data, Nullable<Rcpp::String> ElementDescription, int CompressionLevel);
RcppExport SEXP TofDaqR_AddUserData(SEXP LocationSEXP, SEXP NbrElementsSEXP, SEXP DataSEXP, SEXP ElementDescriptionSEXP, SEXP CompressionLevelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Location(LocationSEXP);
    Rcpp::traits::input_parameter< int >::type NbrElements(NbrElementsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Data(DataSEXP);
    Rcpp::traits::input_parameter< Nullable<Rcpp::String> >::type ElementDescription(ElementDescriptionSEXP);
    Rcpp::traits::input_parameter< int >::type CompressionLevel(CompressionLevelSEXP);
    rcpp_result_gen = Rcpp::wrap(AddUserData(Location, NbrElements, Data, ElementDescription, CompressionLevel));
    return rcpp_result_gen;
END_RCPP
}
// AddUserDataMultiRow
SEXP AddUserDataMultiRow(SEXP Location, int NbrElements, int NbrRows, NumericVector Data, Nullable<Rcpp::String> ElementDescription, int CompressionLevel);
RcppExport SEXP TofDaqR_AddUserDataMultiRow(SEXP LocationSEXP, SEXP NbrElementsSEXP, SEXP NbrRowsSEXP, SEXP DataSEXP, SEXP ElementDescriptionSEXP, SEXP CompressionLevelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Location(LocationSEXP);
    Rcpp::traits::input_parameter< int >::type NbrElements(NbrElementsSEXP);
    Rcpp::traits::input_parameter< int >::type NbrRows(NbrRowsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Data(DataSEXP);
    Rcpp::traits::input_parameter< Nullable<Rcpp::String> >::type ElementDescription(ElementDescriptionSEXP);
    Rcpp::traits::input_parameter< int >::type CompressionLevel(CompressionLevelSEXP);
    rcpp_result_gen = Rcpp::wrap(AddUserDataMultiRow(Location, NbrElements, NbrRows, Data, ElementDescription, CompressionLevel));
    return rcpp_result_gen;
END_RCPP
}
// RegisterUserDataBuf
SEXP RegisterUserDataBuf(SEXP Location, int NbrElements, Nullable<Rcpp::String> ElementDescription, int CompressionLevel);
RcppExport SEXP TofDaqR_RegisterUserDataBuf(SEXP LocationSEXP, SEXP NbrElementsSEXP, SEXP ElementDescriptionSEXP, SEXP CompressionLevelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Location(LocationSEXP);
    Rcpp::traits::input_parameter< int >::type NbrElements(NbrElementsSEXP);
    Rcpp::traits::input_parameter< Nullable<Rcpp::String> >::type ElementDescription(ElementDescriptionSEXP);
    Rcpp::traits::input_parameter< int >::type CompressionLevel(CompressionLevelSEXP);
    rcpp_result_gen = Rcpp::wrap(RegisterUserDataBuf(Location, NbrElements, ElementDescription, CompressionLevel));
    return rcpp_result_gen;
END_RCPP
}
// RegisterUserDataWrite
SEXP RegisterUserDataWrite(SEXP Location, int NbrElements, Nullable<Rcpp::String> ElementDescription, int CompressionLevel);
RcppExport SEXP TofDaqR_RegisterUserDataWrite(SEXP LocationSEXP, SEXP NbrElementsSEXP, SEXP ElementDescriptionSEXP, SEXP CompressionLevelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Location(LocationSEXP);
    Rcpp::traits::input_parameter< int >::type NbrElements(NbrElementsSEXP);
    Rcpp::traits::input_parameter< Nullable<Rcpp::String> >::type ElementDescription(ElementDescriptionSEXP);
    Rcpp::traits::input_parameter< int >::type CompressionLevel(CompressionLevelSEXP);
    rcpp_result_gen = Rcpp::wrap(RegisterUserDataWrite(Location, NbrElements, ElementDescription, CompressionLevel));
    return rcpp_result_gen;
END_RCPP
}
// RegisterUserDataNoStore
SEXP RegisterUserDataNoStore(SEXP Location, int NbrElements, Nullable<Rcpp::String> ElementDescription);
RcppExport SEXP TofDaqR_RegisterUserDataNoStore(SEXP LocationSEXP, SEXP NbrElementsSEXP, SEXP ElementDescriptionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Location(LocationSEXP);
    Rcpp::traits::input_parameter< int >::type NbrElements(NbrElementsSEXP);
    Rcpp::traits::input_parameter< Nullable<Rcpp::String> >::type ElementDescription(ElementDescriptionSEXP);
    rcpp_result_gen = Rcpp::wrap(RegisterUserDataNoStore(Location, NbrElements, ElementDescription));
    return rcpp_result_gen;
END_RCPP
}
// UnregisterUserData
SEXP UnregisterUserData(SEXP Location);
RcppExport SEXP TofDaqR_UnregisterUserData(SEXP LocationSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Location(LocationSEXP);
    rcpp_result_gen = Rcpp::wrap(UnregisterUserData(Location));
    return rcpp_result_gen;
END_RCPP
}
// UpdateUserData
SEXP UpdateUserData(SEXP Location, int NbrElements, NumericVector Data);
RcppExport SEXP TofDaqR_UpdateUserData(SEXP LocationSEXP, SEXP NbrElementsSEXP, SEXP DataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Location(LocationSEXP);
    Rcpp::traits::input_parameter< int >::type NbrElements(NbrElementsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Data(DataSEXP);
    rcpp_result_gen = Rcpp::wrap(UpdateUserData(Location, NbrElements, Data));
    return rcpp_result_gen;
END_RCPP
}
// ReadRegUserData
SEXP ReadRegUserData(SEXP Location, int NbrElements);
RcppExport SEXP TofDaqR_ReadRegUserData(SEXP LocationSEXP, SEXP NbrElementsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Location(LocationSEXP);
    Rcpp::traits::input_parameter< int >::type NbrElements(NbrElementsSEXP);
    rcpp_result_gen = Rcpp::wrap(ReadRegUserData(Location, NbrElements));
    return rcpp_result_gen;
END_RCPP
}
// QueryRegUserDataSize
SEXP QueryRegUserDataSize(SEXP Location);
RcppExport SEXP TofDaqR_QueryRegUserDataSize(SEXP LocationSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Location(LocationSEXP);
    rcpp_result_gen = Rcpp::wrap(QueryRegUserDataSize(Location));
    return rcpp_result_gen;
END_RCPP
}
// GetRegUserDataSources
SEXP GetRegUserDataSources();
RcppExport SEXP TofDaqR_GetRegUserDataSources() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(GetRegUserDataSources());
    return rcpp_result_gen;
END_RCPP
}
// GetRegUserDataDesc
SEXP GetRegUserDataDesc(SEXP Location);
RcppExport SEXP TofDaqR_GetRegUserDataDesc(SEXP LocationSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Location(LocationSEXP);
    rcpp_result_gen = Rcpp::wrap(GetRegUserDataDesc(Location));
    return rcpp_result_gen;
END_RCPP
}
// KeepFileOpen
SEXP KeepFileOpen(bool keepOpen);
RcppExport SEXP TofDaqR_KeepFileOpen(SEXP keepOpenSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< bool >::type keepOpen(keepOpenSEXP);
    rcpp_result_gen = Rcpp::wrap(KeepFileOpen(keepOpen));
    return rcpp_result_gen;
END_RCPP
}
// TpsConnect
SEXP TpsConnect();
RcppExport SEXP TofDaqR_TpsConnect() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TpsConnect());
    return rcpp_result_gen;
END_RCPP
}
// TpsConnect2
SEXP TpsConnect2(SEXP ip, int type);
RcppExport SEXP TofDaqR_TpsConnect2(SEXP ipSEXP, SEXP typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type ip(ipSEXP);
    Rcpp::traits::input_parameter< int >::type type(typeSEXP);
    rcpp_result_gen = Rcpp::wrap(TpsConnect2(ip, type));
    return rcpp_result_gen;
END_RCPP
}
// TpsDisconnect
SEXP TpsDisconnect();
RcppExport SEXP TofDaqR_TpsDisconnect() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TpsDisconnect());
    return rcpp_result_gen;
END_RCPP
}
// TpsGetMonitorValue
SEXP TpsGetMonitorValue(int moduleCode);
RcppExport SEXP TofDaqR_TpsGetMonitorValue(SEXP moduleCodeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type moduleCode(moduleCodeSEXP);
    rcpp_result_gen = Rcpp::wrap(TpsGetMonitorValue(moduleCode));
    return rcpp_result_gen;
END_RCPP
}
// TpsGetTargetValue
SEXP TpsGetTargetValue(int moduleCode);
RcppExport SEXP TofDaqR_TpsGetTargetValue(SEXP moduleCodeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type moduleCode(moduleCodeSEXP);
    rcpp_result_gen = Rcpp::wrap(TpsGetTargetValue(moduleCode));
    return rcpp_result_gen;
END_RCPP
}
// TpsGetLastSetValue
SEXP TpsGetLastSetValue(int moduleCode);
RcppExport SEXP TofDaqR_TpsGetLastSetValue(SEXP moduleCodeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type moduleCode(moduleCodeSEXP);
    rcpp_result_gen = Rcpp::wrap(TpsGetLastSetValue(moduleCode));
    return rcpp_result_gen;
END_RCPP
}
// TpsSetTargetValue
SEXP TpsSetTargetValue(int moduleCode, double value);
RcppExport SEXP TofDaqR_TpsSetTargetValue(SEXP moduleCodeSEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type moduleCode(moduleCodeSEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    rcpp_result_gen = Rcpp::wrap(TpsSetTargetValue(moduleCode, value));
    return rcpp_result_gen;
END_RCPP
}
// TpsGetNbrModules
SEXP TpsGetNbrModules();
RcppExport SEXP TofDaqR_TpsGetNbrModules() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TpsGetNbrModules());
    return rcpp_result_gen;
END_RCPP
}
// TpsGetModuleCodes
SEXP TpsGetModuleCodes();
RcppExport SEXP TofDaqR_TpsGetModuleCodes() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TpsGetModuleCodes());
    return rcpp_result_gen;
END_RCPP
}
// TpsInitialize
SEXP TpsInitialize();
RcppExport SEXP TofDaqR_TpsInitialize() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TpsInitialize());
    return rcpp_result_gen;
END_RCPP
}
// TpsSetAllVoltages
SEXP TpsSetAllVoltages();
RcppExport SEXP TofDaqR_TpsSetAllVoltages() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TpsSetAllVoltages());
    return rcpp_result_gen;
END_RCPP
}
// TpsShutdown
SEXP TpsShutdown();
RcppExport SEXP TofDaqR_TpsShutdown() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TpsShutdown());
    return rcpp_result_gen;
END_RCPP
}
// TpsGetStatus
SEXP TpsGetStatus();
RcppExport SEXP TofDaqR_TpsGetStatus() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TpsGetStatus());
    return rcpp_result_gen;
END_RCPP
}
// TpsLoadSetFile
SEXP TpsLoadSetFile(SEXP setFile);
RcppExport SEXP TofDaqR_TpsLoadSetFile(SEXP setFileSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type setFile(setFileSEXP);
    rcpp_result_gen = Rcpp::wrap(TpsLoadSetFile(setFile));
    return rcpp_result_gen;
END_RCPP
}
// TpsSaveSetFile
SEXP TpsSaveSetFile(SEXP setFile);
RcppExport SEXP TofDaqR_TpsSaveSetFile(SEXP setFileSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type setFile(setFileSEXP);
    rcpp_result_gen = Rcpp::wrap(TpsSaveSetFile(setFile));
    return rcpp_result_gen;
END_RCPP
}
// TpsGetActiveFilament
SEXP TpsGetActiveFilament();
RcppExport SEXP TofDaqR_TpsGetActiveFilament() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TpsGetActiveFilament());
    return rcpp_result_gen;
END_RCPP
}
// TpsSetActiveFilament
SEXP TpsSetActiveFilament(int activeFilament);
RcppExport SEXP TofDaqR_TpsSetActiveFilament(SEXP activeFilamentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type activeFilament(activeFilamentSEXP);
    rcpp_result_gen = Rcpp::wrap(TpsSetActiveFilament(activeFilament));
    return rcpp_result_gen;
END_RCPP
}
// TpsGetModuleLimits
SEXP TpsGetModuleLimits(int moduleCode);
RcppExport SEXP TofDaqR_TpsGetModuleLimits(SEXP moduleCodeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type moduleCode(moduleCodeSEXP);
    rcpp_result_gen = Rcpp::wrap(TpsGetModuleLimits(moduleCode));
    return rcpp_result_gen;
END_RCPP
}
// TpsChangeIonMode
SEXP TpsChangeIonMode(int ionMode);
RcppExport SEXP TofDaqR_TpsChangeIonMode(SEXP ionModeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type ionMode(ionModeSEXP);
    rcpp_result_gen = Rcpp::wrap(TpsChangeIonMode(ionMode));
    return rcpp_result_gen;
END_RCPP
}
// GetH5Descriptor
SEXP GetH5Descriptor(SEXP Filename);
RcppExport SEXP TofDaqR_GetH5Descriptor(SEXP FilenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    rcpp_result_gen = Rcpp::wrap(GetH5Descriptor(Filename));
    return rcpp_result_gen;
END_RCPP
}
// CloseH5
SEXP CloseH5(SEXP Filename);
RcppExport SEXP TofDaqR_CloseH5(SEXP FilenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    rcpp_result_gen = Rcpp::wrap(CloseH5(Filename));
    return rcpp_result_gen;
END_RCPP
}
// CloseAll
SEXP CloseAll();
RcppExport SEXP TofDaqR_CloseAll() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CloseAll());
    return rcpp_result_gen;
END_RCPP
}
// GetSumSpectrumFromH5
SEXP GetSumSpectrumFromH5(SEXP Filename, bool Normalize);
RcppExport SEXP TofDaqR_GetSumSpectrumFromH5(SEXP FilenameSEXP, SEXP NormalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< bool >::type Normalize(NormalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(GetSumSpectrumFromH5(Filename, Normalize));
    return rcpp_result_gen;
END_RCPP
}
// GetTofSpectrumFromH5
SEXP GetTofSpectrumFromH5(SEXP Filename, int SegmentIndex, int SegmentEndIndex, int BufIndex, int BufEndIndex, int WriteIndex, int WriteEndIndex, bool BufWriteLinked, bool Normalize);
RcppExport SEXP TofDaqR_GetTofSpectrumFromH5(SEXP FilenameSEXP, SEXP SegmentIndexSEXP, SEXP SegmentEndIndexSEXP, SEXP BufIndexSEXP, SEXP BufEndIndexSEXP, SEXP WriteIndexSEXP, SEXP WriteEndIndexSEXP, SEXP BufWriteLinkedSEXP, SEXP NormalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentIndex(SegmentIndexSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentEndIndex(SegmentEndIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufIndex(BufIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufEndIndex(BufEndIndexSEXP);
    Rcpp::traits::input_parameter< int >::type WriteIndex(WriteIndexSEXP);
    Rcpp::traits::input_parameter< int >::type WriteEndIndex(WriteEndIndexSEXP);
    Rcpp::traits::input_parameter< bool >::type BufWriteLinked(BufWriteLinkedSEXP);
    Rcpp::traits::input_parameter< bool >::type Normalize(NormalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(GetTofSpectrumFromH5(Filename, SegmentIndex, SegmentEndIndex, BufIndex, BufEndIndex, WriteIndex, WriteEndIndex, BufWriteLinked, Normalize));
    return rcpp_result_gen;
END_RCPP
}
// GetTofSpectrum2FromH5
SEXP GetTofSpectrum2FromH5(SEXP Filename, int SegmentIndex, int SegmentEndIndex, int BufIndex, int BufEndIndex, int WriteIndex, int WriteEndIndex, bool BufWriteLinked, bool Normalize);
RcppExport SEXP TofDaqR_GetTofSpectrum2FromH5(SEXP FilenameSEXP, SEXP SegmentIndexSEXP, SEXP SegmentEndIndexSEXP, SEXP BufIndexSEXP, SEXP BufEndIndexSEXP, SEXP WriteIndexSEXP, SEXP WriteEndIndexSEXP, SEXP BufWriteLinkedSEXP, SEXP NormalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentIndex(SegmentIndexSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentEndIndex(SegmentEndIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufIndex(BufIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufEndIndex(BufEndIndexSEXP);
    Rcpp::traits::input_parameter< int >::type WriteIndex(WriteIndexSEXP);
    Rcpp::traits::input_parameter< int >::type WriteEndIndex(WriteEndIndexSEXP);
    Rcpp::traits::input_parameter< bool >::type BufWriteLinked(BufWriteLinkedSEXP);
    Rcpp::traits::input_parameter< bool >::type Normalize(NormalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(GetTofSpectrum2FromH5(Filename, SegmentIndex, SegmentEndIndex, BufIndex, BufEndIndex, WriteIndex, WriteEndIndex, BufWriteLinked, Normalize));
    return rcpp_result_gen;
END_RCPP
}
// GetStickSpectrumFromH5
SEXP GetStickSpectrumFromH5(SEXP Filename, int SegmentIndex, int SegmentEndIndex, int BufIndex, int BufEndIndex, int WriteIndex, int WriteEndIndex, bool BufWriteLinked, bool Normalize);
RcppExport SEXP TofDaqR_GetStickSpectrumFromH5(SEXP FilenameSEXP, SEXP SegmentIndexSEXP, SEXP SegmentEndIndexSEXP, SEXP BufIndexSEXP, SEXP BufEndIndexSEXP, SEXP WriteIndexSEXP, SEXP WriteEndIndexSEXP, SEXP BufWriteLinkedSEXP, SEXP NormalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentIndex(SegmentIndexSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentEndIndex(SegmentEndIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufIndex(BufIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufEndIndex(BufEndIndexSEXP);
    Rcpp::traits::input_parameter< int >::type WriteIndex(WriteIndexSEXP);
    Rcpp::traits::input_parameter< int >::type WriteEndIndex(WriteEndIndexSEXP);
    Rcpp::traits::input_parameter< bool >::type BufWriteLinked(BufWriteLinkedSEXP);
    Rcpp::traits::input_parameter< bool >::type Normalize(NormalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(GetStickSpectrumFromH5(Filename, SegmentIndex, SegmentEndIndex, BufIndex, BufEndIndex, WriteIndex, WriteEndIndex, BufWriteLinked, Normalize));
    return rcpp_result_gen;
END_RCPP
}
// GetStickSpectrum2FromH5
SEXP GetStickSpectrum2FromH5(SEXP Filename, int SegmentIndex, int SegmentEndIndex, int BufIndex, int BufEndIndex, int WriteIndex, int WriteEndIndex, bool BufWriteLinked, bool Normalize);
RcppExport SEXP TofDaqR_GetStickSpectrum2FromH5(SEXP FilenameSEXP, SEXP SegmentIndexSEXP, SEXP SegmentEndIndexSEXP, SEXP BufIndexSEXP, SEXP BufEndIndexSEXP, SEXP WriteIndexSEXP, SEXP WriteEndIndexSEXP, SEXP BufWriteLinkedSEXP, SEXP NormalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentIndex(SegmentIndexSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentEndIndex(SegmentEndIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufIndex(BufIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufEndIndex(BufEndIndexSEXP);
    Rcpp::traits::input_parameter< int >::type WriteIndex(WriteIndexSEXP);
    Rcpp::traits::input_parameter< int >::type WriteEndIndex(WriteEndIndexSEXP);
    Rcpp::traits::input_parameter< bool >::type BufWriteLinked(BufWriteLinkedSEXP);
    Rcpp::traits::input_parameter< bool >::type Normalize(NormalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(GetStickSpectrum2FromH5(Filename, SegmentIndex, SegmentEndIndex, BufIndex, BufEndIndex, WriteIndex, WriteEndIndex, BufWriteLinked, Normalize));
    return rcpp_result_gen;
END_RCPP
}
// GetPeakParametersFromH5
SEXP GetPeakParametersFromH5(SEXP Filename, int PeakIndex);
RcppExport SEXP TofDaqR_GetPeakParametersFromH5(SEXP FilenameSEXP, SEXP PeakIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type PeakIndex(PeakIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(GetPeakParametersFromH5(Filename, PeakIndex));
    return rcpp_result_gen;
END_RCPP
}
// GetBufTimeFromH5
SEXP GetBufTimeFromH5(SEXP Filename, int BufIndex, int WriteIndex);
RcppExport SEXP TofDaqR_GetBufTimeFromH5(SEXP FilenameSEXP, SEXP BufIndexSEXP, SEXP WriteIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type BufIndex(BufIndexSEXP);
    Rcpp::traits::input_parameter< int >::type WriteIndex(WriteIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(GetBufTimeFromH5(Filename, BufIndex, WriteIndex));
    return rcpp_result_gen;
END_RCPP
}
// GetSpecXaxisFromH5
SEXP GetSpecXaxisFromH5(SEXP Filename, int Type, int writeIndex);
RcppExport SEXP TofDaqR_GetSpecXaxisFromH5(SEXP FilenameSEXP, SEXP TypeSEXP, SEXP writeIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type Type(TypeSEXP);
    Rcpp::traits::input_parameter< int >::type writeIndex(writeIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(GetSpecXaxisFromH5(Filename, Type, writeIndex));
    return rcpp_result_gen;
END_RCPP
}
// GetSegmentProfileFromH5
SEXP GetSegmentProfileFromH5(SEXP Filename, int PeakIndex, int BufStartIndex, int BufEndIndex, int WriteStartIndex, int WriteEndIndex, bool BufWriteLinked);
RcppExport SEXP TofDaqR_GetSegmentProfileFromH5(SEXP FilenameSEXP, SEXP PeakIndexSEXP, SEXP BufStartIndexSEXP, SEXP BufEndIndexSEXP, SEXP WriteStartIndexSEXP, SEXP WriteEndIndexSEXP, SEXP BufWriteLinkedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type PeakIndex(PeakIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufStartIndex(BufStartIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufEndIndex(BufEndIndexSEXP);
    Rcpp::traits::input_parameter< int >::type WriteStartIndex(WriteStartIndexSEXP);
    Rcpp::traits::input_parameter< int >::type WriteEndIndex(WriteEndIndexSEXP);
    Rcpp::traits::input_parameter< bool >::type BufWriteLinked(BufWriteLinkedSEXP);
    rcpp_result_gen = Rcpp::wrap(GetSegmentProfileFromH5(Filename, PeakIndex, BufStartIndex, BufEndIndex, WriteStartIndex, WriteEndIndex, BufWriteLinked));
    return rcpp_result_gen;
END_RCPP
}
// GetSegmentProfile2FromH5
SEXP GetSegmentProfile2FromH5(SEXP Filename, int PeakIndex, int BufStartIndex, int BufEndIndex, int WriteStartIndex, int WriteEndIndex, bool BufWriteLinked);
RcppExport SEXP TofDaqR_GetSegmentProfile2FromH5(SEXP FilenameSEXP, SEXP PeakIndexSEXP, SEXP BufStartIndexSEXP, SEXP BufEndIndexSEXP, SEXP WriteStartIndexSEXP, SEXP WriteEndIndexSEXP, SEXP BufWriteLinkedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type PeakIndex(PeakIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufStartIndex(BufStartIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufEndIndex(BufEndIndexSEXP);
    Rcpp::traits::input_parameter< int >::type WriteStartIndex(WriteStartIndexSEXP);
    Rcpp::traits::input_parameter< int >::type WriteEndIndex(WriteEndIndexSEXP);
    Rcpp::traits::input_parameter< bool >::type BufWriteLinked(BufWriteLinkedSEXP);
    rcpp_result_gen = Rcpp::wrap(GetSegmentProfile2FromH5(Filename, PeakIndex, BufStartIndex, BufEndIndex, WriteStartIndex, WriteEndIndex, BufWriteLinked));
    return rcpp_result_gen;
END_RCPP
}
// GetBufWriteProfileFromH5
SEXP GetBufWriteProfileFromH5(SEXP Filename, int PeakIndex, int SegmentStartIndex, int SegmentEndIndex);
RcppExport SEXP TofDaqR_GetBufWriteProfileFromH5(SEXP FilenameSEXP, SEXP PeakIndexSEXP, SEXP SegmentStartIndexSEXP, SEXP SegmentEndIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type PeakIndex(PeakIndexSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentStartIndex(SegmentStartIndexSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentEndIndex(SegmentEndIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(GetBufWriteProfileFromH5(Filename, PeakIndex, SegmentStartIndex, SegmentEndIndex));
    return rcpp_result_gen;
END_RCPP
}
// GetBufWriteProfile2FromH5
SEXP GetBufWriteProfile2FromH5(SEXP Filename, int PeakIndex, int SegmentStartIndex, int SegmentEndIndex);
RcppExport SEXP TofDaqR_GetBufWriteProfile2FromH5(SEXP FilenameSEXP, SEXP PeakIndexSEXP, SEXP SegmentStartIndexSEXP, SEXP SegmentEndIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type PeakIndex(PeakIndexSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentStartIndex(SegmentStartIndexSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentEndIndex(SegmentEndIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(GetBufWriteProfile2FromH5(Filename, PeakIndex, SegmentStartIndex, SegmentEndIndex));
    return rcpp_result_gen;
END_RCPP
}
// GetRegUserDataSourcesFromH5
SEXP GetRegUserDataSourcesFromH5(SEXP Filename);
RcppExport SEXP TofDaqR_GetRegUserDataSourcesFromH5(SEXP FilenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    rcpp_result_gen = Rcpp::wrap(GetRegUserDataSourcesFromH5(Filename));
    return rcpp_result_gen;
END_RCPP
}
// GetRegUserDataFromH5
SEXP GetRegUserDataFromH5(SEXP Filename, SEXP location, int bufIndex, int writeIndex, bool readDescription);
RcppExport SEXP TofDaqR_GetRegUserDataFromH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP bufIndexSEXP, SEXP writeIndexSEXP, SEXP readDescriptionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< SEXP >::type location(locationSEXP);
    Rcpp::traits::input_parameter< int >::type bufIndex(bufIndexSEXP);
    Rcpp::traits::input_parameter< int >::type writeIndex(writeIndexSEXP);
    Rcpp::traits::input_parameter< bool >::type readDescription(readDescriptionSEXP);
    rcpp_result_gen = Rcpp::wrap(GetRegUserDataFromH5(Filename, location, bufIndex, writeIndex, readDescription));
    return rcpp_result_gen;
END_RCPP
}
// GetTofData
SEXP GetTofData(SEXP Filename, int sampleOffset, int sampleCount, int segOffset, int segCount, int bufOffset, int bufCount, int writeOffset, int writeCount);
RcppExport SEXP TofDaqR_GetTofData(SEXP FilenameSEXP, SEXP sampleOffsetSEXP, SEXP sampleCountSEXP, SEXP segOffsetSEXP, SEXP segCountSEXP, SEXP bufOffsetSEXP, SEXP bufCountSEXP, SEXP writeOffsetSEXP, SEXP writeCountSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type sampleOffset(sampleOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type sampleCount(sampleCountSEXP);
    Rcpp::traits::input_parameter< int >::type segOffset(segOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type segCount(segCountSEXP);
    Rcpp::traits::input_parameter< int >::type bufOffset(bufOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type bufCount(bufCountSEXP);
    Rcpp::traits::input_parameter< int >::type writeOffset(writeOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type writeCount(writeCountSEXP);
    rcpp_result_gen = Rcpp::wrap(GetTofData(Filename, sampleOffset, sampleCount, segOffset, segCount, bufOffset, bufCount, writeOffset, writeCount));
    return rcpp_result_gen;
END_RCPP
}
// GetTofData2
SEXP GetTofData2(SEXP Filename, int sampleOffset, int sampleCount, int segOffset, int segCount, int bufOffset, int bufCount, int writeOffset, int writeCount);
RcppExport SEXP TofDaqR_GetTofData2(SEXP FilenameSEXP, SEXP sampleOffsetSEXP, SEXP sampleCountSEXP, SEXP segOffsetSEXP, SEXP segCountSEXP, SEXP bufOffsetSEXP, SEXP bufCountSEXP, SEXP writeOffsetSEXP, SEXP writeCountSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type sampleOffset(sampleOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type sampleCount(sampleCountSEXP);
    Rcpp::traits::input_parameter< int >::type segOffset(segOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type segCount(segCountSEXP);
    Rcpp::traits::input_parameter< int >::type bufOffset(bufOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type bufCount(bufCountSEXP);
    Rcpp::traits::input_parameter< int >::type writeOffset(writeOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type writeCount(writeCountSEXP);
    rcpp_result_gen = Rcpp::wrap(GetTofData2(Filename, sampleOffset, sampleCount, segOffset, segCount, bufOffset, bufCount, writeOffset, writeCount));
    return rcpp_result_gen;
END_RCPP
}
// GetPeakData
SEXP GetPeakData(SEXP Filename, int peakOffset, int peakCount, int segOffset, int segCount, int bufOffset, int bufCount, int writeOffset, int writeCount);
RcppExport SEXP TofDaqR_GetPeakData(SEXP FilenameSEXP, SEXP peakOffsetSEXP, SEXP peakCountSEXP, SEXP segOffsetSEXP, SEXP segCountSEXP, SEXP bufOffsetSEXP, SEXP bufCountSEXP, SEXP writeOffsetSEXP, SEXP writeCountSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type peakOffset(peakOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type peakCount(peakCountSEXP);
    Rcpp::traits::input_parameter< int >::type segOffset(segOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type segCount(segCountSEXP);
    Rcpp::traits::input_parameter< int >::type bufOffset(bufOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type bufCount(bufCountSEXP);
    Rcpp::traits::input_parameter< int >::type writeOffset(writeOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type writeCount(writeCountSEXP);
    rcpp_result_gen = Rcpp::wrap(GetPeakData(Filename, peakOffset, peakCount, segOffset, segCount, bufOffset, bufCount, writeOffset, writeCount));
    return rcpp_result_gen;
END_RCPP
}
// GetPeakData2
SEXP GetPeakData2(SEXP Filename, int peakOffset, int peakCount, int segOffset, int segCount, int bufOffset, int bufCount, int writeOffset, int writeCount);
RcppExport SEXP TofDaqR_GetPeakData2(SEXP FilenameSEXP, SEXP peakOffsetSEXP, SEXP peakCountSEXP, SEXP segOffsetSEXP, SEXP segCountSEXP, SEXP bufOffsetSEXP, SEXP bufCountSEXP, SEXP writeOffsetSEXP, SEXP writeCountSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type peakOffset(peakOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type peakCount(peakCountSEXP);
    Rcpp::traits::input_parameter< int >::type segOffset(segOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type segCount(segCountSEXP);
    Rcpp::traits::input_parameter< int >::type bufOffset(bufOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type bufCount(bufCountSEXP);
    Rcpp::traits::input_parameter< int >::type writeOffset(writeOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type writeCount(writeCountSEXP);
    rcpp_result_gen = Rcpp::wrap(GetPeakData2(Filename, peakOffset, peakCount, segOffset, segCount, bufOffset, bufCount, writeOffset, writeCount));
    return rcpp_result_gen;
END_RCPP
}
// GetTimingData
SEXP GetTimingData(SEXP Filename, int bufOffset, int bufCount, int writeOffset, int writeCount);
RcppExport SEXP TofDaqR_GetTimingData(SEXP FilenameSEXP, SEXP bufOffsetSEXP, SEXP bufCountSEXP, SEXP writeOffsetSEXP, SEXP writeCountSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type bufOffset(bufOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type bufCount(bufCountSEXP);
    Rcpp::traits::input_parameter< int >::type writeOffset(writeOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type writeCount(writeCountSEXP);
    rcpp_result_gen = Rcpp::wrap(GetTimingData(Filename, bufOffset, bufCount, writeOffset, writeCount));
    return rcpp_result_gen;
END_RCPP
}
// GetIntAttributeFromH5
SEXP GetIntAttributeFromH5(SEXP Filename, SEXP location, SEXP name);
RcppExport SEXP TofDaqR_GetIntAttributeFromH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< SEXP >::type location(locationSEXP);
    Rcpp::traits::input_parameter< SEXP >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(GetIntAttributeFromH5(Filename, location, name));
    return rcpp_result_gen;
END_RCPP
}
// GetUintAttributeFromH5
SEXP GetUintAttributeFromH5(SEXP Filename, SEXP location, SEXP name);
RcppExport SEXP TofDaqR_GetUintAttributeFromH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< SEXP >::type location(locationSEXP);
    Rcpp::traits::input_parameter< SEXP >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(GetUintAttributeFromH5(Filename, location, name));
    return rcpp_result_gen;
END_RCPP
}
// GetInt64AttributeFromH5
SEXP GetInt64AttributeFromH5(SEXP Filename, SEXP location, SEXP name);
RcppExport SEXP TofDaqR_GetInt64AttributeFromH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< SEXP >::type location(locationSEXP);
    Rcpp::traits::input_parameter< SEXP >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(GetInt64AttributeFromH5(Filename, location, name));
    return rcpp_result_gen;
END_RCPP
}
// GetUint64AttributeFromH5
SEXP GetUint64AttributeFromH5(SEXP Filename, SEXP location, SEXP name);
RcppExport SEXP TofDaqR_GetUint64AttributeFromH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< SEXP >::type location(locationSEXP);
    Rcpp::traits::input_parameter< SEXP >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(GetUint64AttributeFromH5(Filename, location, name));
    return rcpp_result_gen;
END_RCPP
}
// GetFloatAttributeFromH5
SEXP GetFloatAttributeFromH5(SEXP Filename, SEXP location, SEXP name);
RcppExport SEXP TofDaqR_GetFloatAttributeFromH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< SEXP >::type location(locationSEXP);
    Rcpp::traits::input_parameter< SEXP >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(GetFloatAttributeFromH5(Filename, location, name));
    return rcpp_result_gen;
END_RCPP
}
// GetDoubleAttributeFromH5
SEXP GetDoubleAttributeFromH5(SEXP Filename, SEXP location, SEXP name);
RcppExport SEXP TofDaqR_GetDoubleAttributeFromH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< SEXP >::type location(locationSEXP);
    Rcpp::traits::input_parameter< SEXP >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDoubleAttributeFromH5(Filename, location, name));
    return rcpp_result_gen;
END_RCPP
}
// GetStringAttributeFromH5
SEXP GetStringAttributeFromH5(SEXP Filename, SEXP location, SEXP name);
RcppExport SEXP TofDaqR_GetStringAttributeFromH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< SEXP >::type location(locationSEXP);
    Rcpp::traits::input_parameter< SEXP >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(GetStringAttributeFromH5(Filename, location, name));
    return rcpp_result_gen;
END_RCPP
}
// SetIntAttributeInH5
SEXP SetIntAttributeInH5(SEXP Filename, SEXP location, SEXP name, int attribute);
RcppExport SEXP TofDaqR_SetIntAttributeInH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP nameSEXP, SEXP attributeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< SEXP >::type location(locationSEXP);
    Rcpp::traits::input_parameter< SEXP >::type name(nameSEXP);
    Rcpp::traits::input_parameter< int >::type attribute(attributeSEXP);
    rcpp_result_gen = Rcpp::wrap(SetIntAttributeInH5(Filename, location, name, attribute));
    return rcpp_result_gen;
END_RCPP
}
// SetUintAttributeInH5
SEXP SetUintAttributeInH5(SEXP Filename, SEXP location, SEXP name, double attribute);
RcppExport SEXP TofDaqR_SetUintAttributeInH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP nameSEXP, SEXP attributeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< SEXP >::type location(locationSEXP);
    Rcpp::traits::input_parameter< SEXP >::type name(nameSEXP);
    Rcpp::traits::input_parameter< double >::type attribute(attributeSEXP);
    rcpp_result_gen = Rcpp::wrap(SetUintAttributeInH5(Filename, location, name, attribute));
    return rcpp_result_gen;
END_RCPP
}
// SetInt64AttributeInH5
SEXP SetInt64AttributeInH5(SEXP Filename, SEXP location, SEXP name, SEXP attribute);
RcppExport SEXP TofDaqR_SetInt64AttributeInH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP nameSEXP, SEXP attributeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< SEXP >::type location(locationSEXP);
    Rcpp::traits::input_parameter< SEXP >::type name(nameSEXP);
    Rcpp::traits::input_parameter< SEXP >::type attribute(attributeSEXP);
    rcpp_result_gen = Rcpp::wrap(SetInt64AttributeInH5(Filename, location, name, attribute));
    return rcpp_result_gen;
END_RCPP
}
// SetUint64AttributeInH5
SEXP SetUint64AttributeInH5(SEXP Filename, SEXP location, SEXP name, SEXP attribute);
RcppExport SEXP TofDaqR_SetUint64AttributeInH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP nameSEXP, SEXP attributeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< SEXP >::type location(locationSEXP);
    Rcpp::traits::input_parameter< SEXP >::type name(nameSEXP);
    Rcpp::traits::input_parameter< SEXP >::type attribute(attributeSEXP);
    rcpp_result_gen = Rcpp::wrap(SetUint64AttributeInH5(Filename, location, name, attribute));
    return rcpp_result_gen;
END_RCPP
}
// SetFloatAttributeInH5
SEXP SetFloatAttributeInH5(SEXP Filename, SEXP location, SEXP name, double attribute);
RcppExport SEXP TofDaqR_SetFloatAttributeInH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP nameSEXP, SEXP attributeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< SEXP >::type location(locationSEXP);
    Rcpp::traits::input_parameter< SEXP >::type name(nameSEXP);
    Rcpp::traits::input_parameter< double >::type attribute(attributeSEXP);
    rcpp_result_gen = Rcpp::wrap(SetFloatAttributeInH5(Filename, location, name, attribute));
    return rcpp_result_gen;
END_RCPP
}
// SetDoubleAttributeInH5
SEXP SetDoubleAttributeInH5(SEXP Filename, SEXP location, SEXP name, double attribute);
RcppExport SEXP TofDaqR_SetDoubleAttributeInH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP nameSEXP, SEXP attributeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< SEXP >::type location(locationSEXP);
    Rcpp::traits::input_parameter< SEXP >::type name(nameSEXP);
    Rcpp::traits::input_parameter< double >::type attribute(attributeSEXP);
    rcpp_result_gen = Rcpp::wrap(SetDoubleAttributeInH5(Filename, location, name, attribute));
    return rcpp_result_gen;
END_RCPP
}
// SetStringAttributeInH5
SEXP SetStringAttributeInH5(SEXP Filename, SEXP location, SEXP name, SEXP attribute);
RcppExport SEXP TofDaqR_SetStringAttributeInH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP nameSEXP, SEXP attributeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< SEXP >::type location(locationSEXP);
    Rcpp::traits::input_parameter< SEXP >::type name(nameSEXP);
    Rcpp::traits::input_parameter< SEXP >::type attribute(attributeSEXP);
    rcpp_result_gen = Rcpp::wrap(SetStringAttributeInH5(Filename, location, name, attribute));
    return rcpp_result_gen;
END_RCPP
}
// GetUserDataFromH5
SEXP GetUserDataFromH5(SEXP Filename, SEXP location, int rowIndex);
RcppExport SEXP TofDaqR_GetUserDataFromH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP rowIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< SEXP >::type location(locationSEXP);
    Rcpp::traits::input_parameter< int >::type rowIndex(rowIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(GetUserDataFromH5(Filename, location, rowIndex));
    return rcpp_result_gen;
END_RCPP
}
// GetAcquisitionLogFromH5
SEXP GetAcquisitionLogFromH5(SEXP Filename, int index);
RcppExport SEXP TofDaqR_GetAcquisitionLogFromH5(SEXP FilenameSEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(GetAcquisitionLogFromH5(Filename, index));
    return rcpp_result_gen;
END_RCPP
}
// GetEventListSpectrumFromH5
SEXP GetEventListSpectrumFromH5(SEXP Filename, int segmentIndex, int bufIndex, int writeIndex);
RcppExport SEXP TofDaqR_GetEventListSpectrumFromH5(SEXP FilenameSEXP, SEXP segmentIndexSEXP, SEXP bufIndexSEXP, SEXP writeIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type segmentIndex(segmentIndexSEXP);
    Rcpp::traits::input_parameter< int >::type bufIndex(bufIndexSEXP);
    Rcpp::traits::input_parameter< int >::type writeIndex(writeIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(GetEventListSpectrumFromH5(Filename, segmentIndex, bufIndex, writeIndex));
    return rcpp_result_gen;
END_RCPP
}
// H5GetMassCalibPar
SEXP H5GetMassCalibPar(SEXP Filename, int writeIndex);
RcppExport SEXP TofDaqR_H5GetMassCalibPar(SEXP FilenameSEXP, SEXP writeIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type writeIndex(writeIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(H5GetMassCalibPar(Filename, writeIndex));
    return rcpp_result_gen;
END_RCPP
}
// H5AddLogEntry
SEXP H5AddLogEntry(SEXP Filename, SEXP LogEntryText, SEXP LogEntryTime);
RcppExport SEXP TofDaqR_H5AddLogEntry(SEXP FilenameSEXP, SEXP LogEntryTextSEXP, SEXP LogEntryTimeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< SEXP >::type LogEntryText(LogEntryTextSEXP);
    Rcpp::traits::input_parameter< SEXP >::type LogEntryTime(LogEntryTimeSEXP);
    rcpp_result_gen = Rcpp::wrap(H5AddLogEntry(Filename, LogEntryText, LogEntryTime));
    return rcpp_result_gen;
END_RCPP
}
// FitSinglePeak
SEXP FitSinglePeak(NumericVector yVals, NumericVector xVals, int peakType, double blOffset, double blSlope, double amplitude, double fwhmLo, double fwhmHi, double peakPos, double mu);
RcppExport SEXP TofDaqR_FitSinglePeak(SEXP yValsSEXP, SEXP xValsSEXP, SEXP peakTypeSEXP, SEXP blOffsetSEXP, SEXP blSlopeSEXP, SEXP amplitudeSEXP, SEXP fwhmLoSEXP, SEXP fwhmHiSEXP, SEXP peakPosSEXP, SEXP muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type yVals(yValsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xVals(xValsSEXP);
    Rcpp::traits::input_parameter< int >::type peakType(peakTypeSEXP);
    Rcpp::traits::input_parameter< double >::type blOffset(blOffsetSEXP);
    Rcpp::traits::input_parameter< double >::type blSlope(blSlopeSEXP);
    Rcpp::traits::input_parameter< double >::type amplitude(amplitudeSEXP);
    Rcpp::traits::input_parameter< double >::type fwhmLo(fwhmLoSEXP);
    Rcpp::traits::input_parameter< double >::type fwhmHi(fwhmHiSEXP);
    Rcpp::traits::input_parameter< double >::type peakPos(peakPosSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    rcpp_result_gen = Rcpp::wrap(FitSinglePeak(yVals, xVals, peakType, blOffset, blSlope, amplitude, fwhmLo, fwhmHi, peakPos, mu));
    return rcpp_result_gen;
END_RCPP
}
// FitSinglePeak2
SEXP FitSinglePeak2(NumericVector yVals, NumericVector xVals, int peakType, NumericVector param);
RcppExport SEXP TofDaqR_FitSinglePeak2(SEXP yValsSEXP, SEXP xValsSEXP, SEXP peakTypeSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type yVals(yValsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xVals(xValsSEXP);
    Rcpp::traits::input_parameter< int >::type peakType(peakTypeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(FitSinglePeak2(yVals, xVals, peakType, param));
    return rcpp_result_gen;
END_RCPP
}
// EvalSinglePeak
NumericVector EvalSinglePeak(NumericVector xVals, double blOffset, double blSlope, double amplitude, double fwhmLo, double fwhmHi, double peakPos, double mu);
RcppExport SEXP TofDaqR_EvalSinglePeak(SEXP xValsSEXP, SEXP blOffsetSEXP, SEXP blSlopeSEXP, SEXP amplitudeSEXP, SEXP fwhmLoSEXP, SEXP fwhmHiSEXP, SEXP peakPosSEXP, SEXP muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type xVals(xValsSEXP);
    Rcpp::traits::input_parameter< double >::type blOffset(blOffsetSEXP);
    Rcpp::traits::input_parameter< double >::type blSlope(blSlopeSEXP);
    Rcpp::traits::input_parameter< double >::type amplitude(amplitudeSEXP);
    Rcpp::traits::input_parameter< double >::type fwhmLo(fwhmLoSEXP);
    Rcpp::traits::input_parameter< double >::type fwhmHi(fwhmHiSEXP);
    Rcpp::traits::input_parameter< double >::type peakPos(peakPosSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    rcpp_result_gen = Rcpp::wrap(EvalSinglePeak(xVals, blOffset, blSlope, amplitude, fwhmLo, fwhmHi, peakPos, mu));
    return rcpp_result_gen;
END_RCPP
}
// GetMoleculeMass
SEXP GetMoleculeMass(SEXP molecule);
RcppExport SEXP TofDaqR_GetMoleculeMass(SEXP moleculeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type molecule(moleculeSEXP);
    rcpp_result_gen = Rcpp::wrap(GetMoleculeMass(molecule));
    return rcpp_result_gen;
END_RCPP
}
// GetIsotopePattern
SEXP GetIsotopePattern(SEXP molecule, double abundanceLimit);
RcppExport SEXP TofDaqR_GetIsotopePattern(SEXP moleculeSEXP, SEXP abundanceLimitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type molecule(moleculeSEXP);
    Rcpp::traits::input_parameter< double >::type abundanceLimit(abundanceLimitSEXP);
    rcpp_result_gen = Rcpp::wrap(GetIsotopePattern(molecule, abundanceLimit));
    return rcpp_result_gen;
END_RCPP
}
// GetIsotopePattern2
SEXP GetIsotopePattern2(SEXP molecule, double abundanceLimit);
RcppExport SEXP TofDaqR_GetIsotopePattern2(SEXP moleculeSEXP, SEXP abundanceLimitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type molecule(moleculeSEXP);
    Rcpp::traits::input_parameter< double >::type abundanceLimit(abundanceLimitSEXP);
    rcpp_result_gen = Rcpp::wrap(GetIsotopePattern2(molecule, abundanceLimit));
    return rcpp_result_gen;
END_RCPP
}
// Tof2Mass
NumericVector Tof2Mass(NumericVector tofSample, int massCalibMode, NumericVector p);
RcppExport SEXP TofDaqR_Tof2Mass(SEXP tofSampleSEXP, SEXP massCalibModeSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type tofSample(tofSampleSEXP);
    Rcpp::traits::input_parameter< int >::type massCalibMode(massCalibModeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(Tof2Mass(tofSample, massCalibMode, p));
    return rcpp_result_gen;
END_RCPP
}
// Mass2Tof
NumericVector Mass2Tof(NumericVector mass, int massCalibMode, NumericVector p);
RcppExport SEXP TofDaqR_Mass2Tof(SEXP massSEXP, SEXP massCalibModeSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type mass(massSEXP);
    Rcpp::traits::input_parameter< int >::type massCalibMode(massCalibModeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(Mass2Tof(mass, massCalibMode, p));
    return rcpp_result_gen;
END_RCPP
}
// MassCalibrate
SEXP MassCalibrate(int massCalibMode, NumericVector mass, NumericVector tof, Nullable<NumericVector> weight);
RcppExport SEXP TofDaqR_MassCalibrate(SEXP massCalibModeSEXP, SEXP massSEXP, SEXP tofSEXP, SEXP weightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type massCalibMode(massCalibModeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mass(massSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tof(tofSEXP);
    Rcpp::traits::input_parameter< Nullable<NumericVector> >::type weight(weightSEXP);
    rcpp_result_gen = Rcpp::wrap(MassCalibrate(massCalibMode, mass, tof, weight));
    return rcpp_result_gen;
END_RCPP
}
// SiInitializeHistograms
StringVector SiInitializeHistograms(NumericVector loMass, NumericVector hiMass, Nullable<IntegerVector> specType);
RcppExport SEXP TofDaqR_SiInitializeHistograms(SEXP loMassSEXP, SEXP hiMassSEXP, SEXP specTypeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type loMass(loMassSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type hiMass(hiMassSEXP);
    Rcpp::traits::input_parameter< Nullable<IntegerVector> >::type specType(specTypeSEXP);
    rcpp_result_gen = Rcpp::wrap(SiInitializeHistograms(loMass, hiMass, specType));
    return rcpp_result_gen;
END_RCPP
}
// SiSetProcessingOptions
StringVector SiSetProcessingOptions(SEXP option, double value, int specType);
RcppExport SEXP TofDaqR_SiSetProcessingOptions(SEXP optionSEXP, SEXP valueSEXP, SEXP specTypeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type option(optionSEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Rcpp::traits::input_parameter< int >::type specType(specTypeSEXP);
    rcpp_result_gen = Rcpp::wrap(SiSetProcessingOptions(option, value, specType));
    return rcpp_result_gen;
END_RCPP
}
// SiProcessSpectrum
SEXP SiProcessSpectrum(NumericVector spectrum, int specType);
RcppExport SEXP TofDaqR_SiProcessSpectrum(SEXP spectrumSEXP, SEXP specTypeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type spectrum(spectrumSEXP);
    Rcpp::traits::input_parameter< int >::type specType(specTypeSEXP);
    rcpp_result_gen = Rcpp::wrap(SiProcessSpectrum(spectrum, specType));
    return rcpp_result_gen;
END_RCPP
}
// SiGetHistogram
SEXP SiGetHistogram(int histogramIndex);
RcppExport SEXP TofDaqR_SiGetHistogram(SEXP histogramIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type histogramIndex(histogramIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(SiGetHistogram(histogramIndex));
    return rcpp_result_gen;
END_RCPP
}
// SiGetSumHistogram
SEXP SiGetSumHistogram(int specType, double minMass, double maxMass, double minRate, double maxRate);
RcppExport SEXP TofDaqR_SiGetSumHistogram(SEXP specTypeSEXP, SEXP minMassSEXP, SEXP maxMassSEXP, SEXP minRateSEXP, SEXP maxRateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type specType(specTypeSEXP);
    Rcpp::traits::input_parameter< double >::type minMass(minMassSEXP);
    Rcpp::traits::input_parameter< double >::type maxMass(maxMassSEXP);
    Rcpp::traits::input_parameter< double >::type minRate(minRateSEXP);
    Rcpp::traits::input_parameter< double >::type maxRate(maxRateSEXP);
    rcpp_result_gen = Rcpp::wrap(SiGetSumHistogram(specType, minMass, maxMass, minRate, maxRate));
    return rcpp_result_gen;
END_RCPP
}
// SiResetHistograms
StringVector SiResetHistograms();
RcppExport SEXP TofDaqR_SiResetHistograms() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(SiResetHistograms());
    return rcpp_result_gen;
END_RCPP
}
// SiCleanup
StringVector SiCleanup();
RcppExport SEXP TofDaqR_SiCleanup() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(SiCleanup());
    return rcpp_result_gen;
END_RCPP
}
// SiFitPhd
SEXP SiFitPhd(NumericVector intensity, NumericVector counts);
RcppExport SEXP TofDaqR_SiFitPhd(SEXP intensitySEXP, SEXP countsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type intensity(intensitySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type counts(countsSEXP);
    rcpp_result_gen = Rcpp::wrap(SiFitPhd(intensity, counts));
    return rcpp_result_gen;
END_RCPP
}
// SiEvalPhd
NumericVector SiEvalPhd(NumericVector par, NumericVector intensity);
RcppExport SEXP TofDaqR_SiEvalPhd(SEXP parSEXP, SEXP intensitySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type par(parSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type intensity(intensitySEXP);
    rcpp_result_gen = Rcpp::wrap(SiEvalPhd(par, intensity));
    return rcpp_result_gen;
END_RCPP
}
// SiFitRateFromPhd
SEXP SiFitRateFromPhd(NumericVector intensity, NumericVector counts, NumericVector siPar);
RcppExport SEXP TofDaqR_SiFitRateFromPhd(SEXP intensitySEXP, SEXP countsSEXP, SEXP siParSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type intensity(intensitySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type counts(countsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type siPar(siParSEXP);
    rcpp_result_gen = Rcpp::wrap(SiFitRateFromPhd(intensity, counts, siPar));
    return rcpp_result_gen;
END_RCPP
}
// FindTpsIp
SEXP FindTpsIp(SEXP TpsSerial, int timeout);
RcppExport SEXP TofDaqR_FindTpsIp(SEXP TpsSerialSEXP, SEXP timeoutSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type TpsSerial(TpsSerialSEXP);
    Rcpp::traits::input_parameter< int >::type timeout(timeoutSEXP);
    rcpp_result_gen = Rcpp::wrap(FindTpsIp(TpsSerial, timeout));
    return rcpp_result_gen;
END_RCPP
}
