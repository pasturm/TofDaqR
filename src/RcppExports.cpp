// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// tof
NumericVector tof(std::string toftype, double drift, double pulse, double massToCharge, NumericVector x, NumericVector v);
RcppExport SEXP _TofDaqR_tof(SEXP toftypeSEXP, SEXP driftSEXP, SEXP pulseSEXP, SEXP massToChargeSEXP, SEXP xSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type toftype(toftypeSEXP);
    Rcpp::traits::input_parameter< double >::type drift(driftSEXP);
    Rcpp::traits::input_parameter< double >::type pulse(pulseSEXP);
    Rcpp::traits::input_parameter< double >::type massToCharge(massToChargeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(tof(toftype, drift, pulse, massToCharge, x, v));
    return rcpp_result_gen;
END_RCPP
}
// EventList2TofSpec
NumericVector EventList2TofSpec(NumericVector events, double clockPeriod, double sampleInterval, int nbrSamples);
RcppExport SEXP _TofDaqR_EventList2TofSpec(SEXP eventsSEXP, SEXP clockPeriodSEXP, SEXP sampleIntervalSEXP, SEXP nbrSamplesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type events(eventsSEXP);
    Rcpp::traits::input_parameter< double >::type clockPeriod(clockPeriodSEXP);
    Rcpp::traits::input_parameter< double >::type sampleInterval(sampleIntervalSEXP);
    Rcpp::traits::input_parameter< int >::type nbrSamples(nbrSamplesSEXP);
    rcpp_result_gen = Rcpp::wrap(EventList2TofSpec(events, clockPeriod, sampleInterval, nbrSamples));
    return rcpp_result_gen;
END_RCPP
}
// DecodeEventList
List DecodeEventList(NumericVector events, double clockPeriod, double sampleInterval);
RcppExport SEXP _TofDaqR_DecodeEventList(SEXP eventsSEXP, SEXP clockPeriodSEXP, SEXP sampleIntervalSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type events(eventsSEXP);
    Rcpp::traits::input_parameter< double >::type clockPeriod(clockPeriodSEXP);
    Rcpp::traits::input_parameter< double >::type sampleInterval(sampleIntervalSEXP);
    rcpp_result_gen = Rcpp::wrap(DecodeEventList(events, clockPeriod, sampleInterval));
    return rcpp_result_gen;
END_RCPP
}
// DecodeEventListThreshold
List DecodeEventListThreshold(NumericVector events, double clockPeriod, double sampleInterval, double threshold, int presamples, int postsamples);
RcppExport SEXP _TofDaqR_DecodeEventListThreshold(SEXP eventsSEXP, SEXP clockPeriodSEXP, SEXP sampleIntervalSEXP, SEXP thresholdSEXP, SEXP presamplesSEXP, SEXP postsamplesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type events(eventsSEXP);
    Rcpp::traits::input_parameter< double >::type clockPeriod(clockPeriodSEXP);
    Rcpp::traits::input_parameter< double >::type sampleInterval(sampleIntervalSEXP);
    Rcpp::traits::input_parameter< double >::type threshold(thresholdSEXP);
    Rcpp::traits::input_parameter< int >::type presamples(presamplesSEXP);
    Rcpp::traits::input_parameter< int >::type postsamples(postsamplesSEXP);
    rcpp_result_gen = Rcpp::wrap(DecodeEventListThreshold(events, clockPeriod, sampleInterval, threshold, presamples, postsamples));
    return rcpp_result_gen;
END_RCPP
}
// SiProcessSpectrumFromShMem
List SiProcessSpectrumFromShMem(int specType, int BufIndex);
RcppExport SEXP _TofDaqR_SiProcessSpectrumFromShMem(SEXP specTypeSEXP, SEXP BufIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type specType(specTypeSEXP);
    Rcpp::traits::input_parameter< int >::type BufIndex(BufIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(SiProcessSpectrumFromShMem(specType, BufIndex));
    return rcpp_result_gen;
END_RCPP
}
// KeepSharedMemMapped
void KeepSharedMemMapped();
RcppExport SEXP _TofDaqR_KeepSharedMemMapped() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    KeepSharedMemMapped();
    return R_NilValue;
END_RCPP
}
// InitializeDll
void InitializeDll();
RcppExport SEXP _TofDaqR_InitializeDll() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    InitializeDll();
    return R_NilValue;
END_RCPP
}
// CleanupDll
void CleanupDll();
RcppExport SEXP _TofDaqR_CleanupDll() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    CleanupDll();
    return R_NilValue;
END_RCPP
}
// GetDllVersion
double GetDllVersion();
RcppExport SEXP _TofDaqR_GetDllVersion() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(GetDllVersion());
    return rcpp_result_gen;
END_RCPP
}
// TofDaqRunning
bool TofDaqRunning();
RcppExport SEXP _TofDaqR_TofDaqRunning() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TofDaqRunning());
    return rcpp_result_gen;
END_RCPP
}
// DaqActive
bool DaqActive();
RcppExport SEXP _TofDaqR_DaqActive() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DaqActive());
    return rcpp_result_gen;
END_RCPP
}
// StartAcquisition
void StartAcquisition();
RcppExport SEXP _TofDaqR_StartAcquisition() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    StartAcquisition();
    return R_NilValue;
END_RCPP
}
// StopAcquisition
void StopAcquisition();
RcppExport SEXP _TofDaqR_StopAcquisition() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    StopAcquisition();
    return R_NilValue;
END_RCPP
}
// ContinueAcquisition
void ContinueAcquisition();
RcppExport SEXP _TofDaqR_ContinueAcquisition() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    ContinueAcquisition();
    return R_NilValue;
END_RCPP
}
// ManualContinueNeeded
bool ManualContinueNeeded();
RcppExport SEXP _TofDaqR_ManualContinueNeeded() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(ManualContinueNeeded());
    return rcpp_result_gen;
END_RCPP
}
// CloseTofDaqRec
void CloseTofDaqRec();
RcppExport SEXP _TofDaqR_CloseTofDaqRec() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    CloseTofDaqRec();
    return R_NilValue;
END_RCPP
}
// IssueDio4Pulse
void IssueDio4Pulse(int delay, int width);
RcppExport SEXP _TofDaqR_IssueDio4Pulse(SEXP delaySEXP, SEXP widthSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type delay(delaySEXP);
    Rcpp::traits::input_parameter< int >::type width(widthSEXP);
    IssueDio4Pulse(delay, width);
    return R_NilValue;
END_RCPP
}
// SetDio4State
void SetDio4State(int state);
RcppExport SEXP _TofDaqR_SetDio4State(SEXP stateSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type state(stateSEXP);
    SetDio4State(state);
    return R_NilValue;
END_RCPP
}
// InitializeDaqDevice
void InitializeDaqDevice();
RcppExport SEXP _TofDaqR_InitializeDaqDevice() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    InitializeDaqDevice();
    return R_NilValue;
END_RCPP
}
// SetTimeout
void SetTimeout(int timeout);
RcppExport SEXP _TofDaqR_SetTimeout(SEXP timeoutSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type timeout(timeoutSEXP);
    SetTimeout(timeout);
    return R_NilValue;
END_RCPP
}
// GetTimeout
int GetTimeout();
RcppExport SEXP _TofDaqR_GetTimeout() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(GetTimeout());
    return rcpp_result_gen;
END_RCPP
}
// AutoSetupDaqDevice
void AutoSetupDaqDevice();
RcppExport SEXP _TofDaqR_AutoSetupDaqDevice() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    AutoSetupDaqDevice();
    return R_NilValue;
END_RCPP
}
// OnDemandMassCalibration
void OnDemandMassCalibration(int action);
RcppExport SEXP _TofDaqR_OnDemandMassCalibration(SEXP actionSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type action(actionSEXP);
    OnDemandMassCalibration(action);
    return R_NilValue;
END_RCPP
}
// ShowConfigWindow
void ShowConfigWindow(int ConfigWindowIndex);
RcppExport SEXP _TofDaqR_ShowConfigWindow(SEXP ConfigWindowIndexSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type ConfigWindowIndex(ConfigWindowIndexSEXP);
    ShowConfigWindow(ConfigWindowIndex);
    return R_NilValue;
END_RCPP
}
// LoadIniFile
void LoadIniFile(Nullable<Rcpp::String> IniFile);
RcppExport SEXP _TofDaqR_LoadIniFile(SEXP IniFileSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Nullable<Rcpp::String> >::type IniFile(IniFileSEXP);
    LoadIniFile(IniFile);
    return R_NilValue;
END_RCPP
}
// SaveIniFile
void SaveIniFile(Nullable<Rcpp::String> IniFile);
RcppExport SEXP _TofDaqR_SaveIniFile(SEXP IniFileSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Nullable<Rcpp::String> >::type IniFile(IniFileSEXP);
    SaveIniFile(IniFile);
    return R_NilValue;
END_RCPP
}
// GetDaqParameter
String GetDaqParameter(std::string Parameter);
RcppExport SEXP _TofDaqR_GetDaqParameter(SEXP ParameterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Parameter(ParameterSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDaqParameter(Parameter));
    return rcpp_result_gen;
END_RCPP
}
// GetDaqParameterInt
int GetDaqParameterInt(std::string Parameter);
RcppExport SEXP _TofDaqR_GetDaqParameterInt(SEXP ParameterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Parameter(ParameterSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDaqParameterInt(Parameter));
    return rcpp_result_gen;
END_RCPP
}
// GetDaqParameterBool
bool GetDaqParameterBool(std::string Parameter);
RcppExport SEXP _TofDaqR_GetDaqParameterBool(SEXP ParameterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Parameter(ParameterSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDaqParameterBool(Parameter));
    return rcpp_result_gen;
END_RCPP
}
// GetDaqParameterFloat
double GetDaqParameterFloat(std::string Parameter);
RcppExport SEXP _TofDaqR_GetDaqParameterFloat(SEXP ParameterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Parameter(ParameterSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDaqParameterFloat(Parameter));
    return rcpp_result_gen;
END_RCPP
}
// GetDaqParameterInt64
String GetDaqParameterInt64(std::string Parameter);
RcppExport SEXP _TofDaqR_GetDaqParameterInt64(SEXP ParameterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Parameter(ParameterSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDaqParameterInt64(Parameter));
    return rcpp_result_gen;
END_RCPP
}
// GetDaqParameterDouble
double GetDaqParameterDouble(std::string Parameter);
RcppExport SEXP _TofDaqR_GetDaqParameterDouble(SEXP ParameterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Parameter(ParameterSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDaqParameterDouble(Parameter));
    return rcpp_result_gen;
END_RCPP
}
// GetDaqParameterIntRef
int GetDaqParameterIntRef(std::string Parameter);
RcppExport SEXP _TofDaqR_GetDaqParameterIntRef(SEXP ParameterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Parameter(ParameterSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDaqParameterIntRef(Parameter));
    return rcpp_result_gen;
END_RCPP
}
// GetDaqParameterBoolRef
bool GetDaqParameterBoolRef(std::string Parameter);
RcppExport SEXP _TofDaqR_GetDaqParameterBoolRef(SEXP ParameterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Parameter(ParameterSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDaqParameterBoolRef(Parameter));
    return rcpp_result_gen;
END_RCPP
}
// GetDaqParameterFloatRef
float GetDaqParameterFloatRef(std::string Parameter);
RcppExport SEXP _TofDaqR_GetDaqParameterFloatRef(SEXP ParameterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Parameter(ParameterSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDaqParameterFloatRef(Parameter));
    return rcpp_result_gen;
END_RCPP
}
// GetDaqParameterInt64Ref
String GetDaqParameterInt64Ref(std::string Parameter);
RcppExport SEXP _TofDaqR_GetDaqParameterInt64Ref(SEXP ParameterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Parameter(ParameterSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDaqParameterInt64Ref(Parameter));
    return rcpp_result_gen;
END_RCPP
}
// GetDaqParameterDoubleRef
double GetDaqParameterDoubleRef(std::string Parameter);
RcppExport SEXP _TofDaqR_GetDaqParameterDoubleRef(SEXP ParameterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Parameter(ParameterSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDaqParameterDoubleRef(Parameter));
    return rcpp_result_gen;
END_RCPP
}
// GetDaqParameterStringRef
String GetDaqParameterStringRef(std::string Parameter);
RcppExport SEXP _TofDaqR_GetDaqParameterStringRef(SEXP ParameterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Parameter(ParameterSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDaqParameterStringRef(Parameter));
    return rcpp_result_gen;
END_RCPP
}
// SetDaqParameter
void SetDaqParameter(std::string Parameter, std::string ValueString);
RcppExport SEXP _TofDaqR_SetDaqParameter(SEXP ParameterSEXP, SEXP ValueStringSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Parameter(ParameterSEXP);
    Rcpp::traits::input_parameter< std::string >::type ValueString(ValueStringSEXP);
    SetDaqParameter(Parameter, ValueString);
    return R_NilValue;
END_RCPP
}
// SetDaqParameterInt
void SetDaqParameterInt(std::string Parameter, int Value);
RcppExport SEXP _TofDaqR_SetDaqParameterInt(SEXP ParameterSEXP, SEXP ValueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Parameter(ParameterSEXP);
    Rcpp::traits::input_parameter< int >::type Value(ValueSEXP);
    SetDaqParameterInt(Parameter, Value);
    return R_NilValue;
END_RCPP
}
// SetDaqParameterBool
void SetDaqParameterBool(std::string Parameter, bool Value);
RcppExport SEXP _TofDaqR_SetDaqParameterBool(SEXP ParameterSEXP, SEXP ValueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Parameter(ParameterSEXP);
    Rcpp::traits::input_parameter< bool >::type Value(ValueSEXP);
    SetDaqParameterBool(Parameter, Value);
    return R_NilValue;
END_RCPP
}
// SetDaqParameterFloat
void SetDaqParameterFloat(std::string Parameter, double Value);
RcppExport SEXP _TofDaqR_SetDaqParameterFloat(SEXP ParameterSEXP, SEXP ValueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Parameter(ParameterSEXP);
    Rcpp::traits::input_parameter< double >::type Value(ValueSEXP);
    SetDaqParameterFloat(Parameter, Value);
    return R_NilValue;
END_RCPP
}
// SetDaqParameterInt64
void SetDaqParameterInt64(std::string Parameter, std::string Value);
RcppExport SEXP _TofDaqR_SetDaqParameterInt64(SEXP ParameterSEXP, SEXP ValueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Parameter(ParameterSEXP);
    Rcpp::traits::input_parameter< std::string >::type Value(ValueSEXP);
    SetDaqParameterInt64(Parameter, Value);
    return R_NilValue;
END_RCPP
}
// SetDaqParameterDouble
void SetDaqParameterDouble(std::string Parameter, double Value);
RcppExport SEXP _TofDaqR_SetDaqParameterDouble(SEXP ParameterSEXP, SEXP ValueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Parameter(ParameterSEXP);
    Rcpp::traits::input_parameter< double >::type Value(ValueSEXP);
    SetDaqParameterDouble(Parameter, Value);
    return R_NilValue;
END_RCPP
}
// ConfigVarNbrMemories
void ConfigVarNbrMemories(bool Enable, IntegerVector StepAtBuf, IntegerVector NbrMemoriesForStep);
RcppExport SEXP _TofDaqR_ConfigVarNbrMemories(SEXP EnableSEXP, SEXP StepAtBufSEXP, SEXP NbrMemoriesForStepSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< bool >::type Enable(EnableSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type StepAtBuf(StepAtBufSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type NbrMemoriesForStep(NbrMemoriesForStepSEXP);
    ConfigVarNbrMemories(Enable, StepAtBuf, NbrMemoriesForStep);
    return R_NilValue;
END_RCPP
}
// SetMassCalib
void SetMassCalib(int mode, int nbrParams, NumericVector p, NumericVector mass, NumericVector tof, NumericVector weight);
RcppExport SEXP _TofDaqR_SetMassCalib(SEXP modeSEXP, SEXP nbrParamsSEXP, SEXP pSEXP, SEXP massSEXP, SEXP tofSEXP, SEXP weightSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type mode(modeSEXP);
    Rcpp::traits::input_parameter< int >::type nbrParams(nbrParamsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mass(massSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tof(tofSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weight(weightSEXP);
    SetMassCalib(mode, nbrParams, p, mass, tof, weight);
    return R_NilValue;
END_RCPP
}
// SetMassCalib2
void SetMassCalib2(int mode, int nbrParams, NumericVector p, NumericVector mass, NumericVector tof, NumericVector weight);
RcppExport SEXP _TofDaqR_SetMassCalib2(SEXP modeSEXP, SEXP nbrParamsSEXP, SEXP pSEXP, SEXP massSEXP, SEXP tofSEXP, SEXP weightSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type mode(modeSEXP);
    Rcpp::traits::input_parameter< int >::type nbrParams(nbrParamsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mass(massSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tof(tofSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weight(weightSEXP);
    SetMassCalib2(mode, nbrParams, p, mass, tof, weight);
    return R_NilValue;
END_RCPP
}
// SetMassCalibEx
void SetMassCalibEx(int mode, int nbrParams, NumericVector p, NumericVector mass, NumericVector tof, NumericVector weight, StringVector label);
RcppExport SEXP _TofDaqR_SetMassCalibEx(SEXP modeSEXP, SEXP nbrParamsSEXP, SEXP pSEXP, SEXP massSEXP, SEXP tofSEXP, SEXP weightSEXP, SEXP labelSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type mode(modeSEXP);
    Rcpp::traits::input_parameter< int >::type nbrParams(nbrParamsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mass(massSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tof(tofSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weight(weightSEXP);
    Rcpp::traits::input_parameter< StringVector >::type label(labelSEXP);
    SetMassCalibEx(mode, nbrParams, p, mass, tof, weight, label);
    return R_NilValue;
END_RCPP
}
// SetMassCalib2Ex
void SetMassCalib2Ex(int mode, int nbrParams, NumericVector p, NumericVector mass, NumericVector tof, NumericVector weight, StringVector label);
RcppExport SEXP _TofDaqR_SetMassCalib2Ex(SEXP modeSEXP, SEXP nbrParamsSEXP, SEXP pSEXP, SEXP massSEXP, SEXP tofSEXP, SEXP weightSEXP, SEXP labelSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type mode(modeSEXP);
    Rcpp::traits::input_parameter< int >::type nbrParams(nbrParamsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mass(massSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tof(tofSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weight(weightSEXP);
    Rcpp::traits::input_parameter< StringVector >::type label(labelSEXP);
    SetMassCalib2Ex(mode, nbrParams, p, mass, tof, weight, label);
    return R_NilValue;
END_RCPP
}
// GetDescriptor
List GetDescriptor();
RcppExport SEXP _TofDaqR_GetDescriptor() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(GetDescriptor());
    return rcpp_result_gen;
END_RCPP
}
// GetPeakParameters
List GetPeakParameters(int PeakIndex);
RcppExport SEXP _TofDaqR_GetPeakParameters(SEXP PeakIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type PeakIndex(PeakIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(GetPeakParameters(PeakIndex));
    return rcpp_result_gen;
END_RCPP
}
// ReleaseSharedMemory
void ReleaseSharedMemory();
RcppExport SEXP _TofDaqR_ReleaseSharedMemory() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    ReleaseSharedMemory();
    return R_NilValue;
END_RCPP
}
// WaitForNewData
void WaitForNewData(int timeout, bool WaitForEventReset);
RcppExport SEXP _TofDaqR_WaitForNewData(SEXP timeoutSEXP, SEXP WaitForEventResetSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type timeout(timeoutSEXP);
    Rcpp::traits::input_parameter< bool >::type WaitForEventReset(WaitForEventResetSEXP);
    WaitForNewData(timeout, WaitForEventReset);
    return R_NilValue;
END_RCPP
}
// WaitForEndOfAcquisition
void WaitForEndOfAcquisition(int timeout);
RcppExport SEXP _TofDaqR_WaitForEndOfAcquisition(SEXP timeoutSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type timeout(timeoutSEXP);
    WaitForEndOfAcquisition(timeout);
    return R_NilValue;
END_RCPP
}
// GetMassCalib
List GetMassCalib();
RcppExport SEXP _TofDaqR_GetMassCalib() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(GetMassCalib());
    return rcpp_result_gen;
END_RCPP
}
// GetMassCalib2
List GetMassCalib2();
RcppExport SEXP _TofDaqR_GetMassCalib2() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(GetMassCalib2());
    return rcpp_result_gen;
END_RCPP
}
// GetMassCalibEx
List GetMassCalibEx();
RcppExport SEXP _TofDaqR_GetMassCalibEx() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(GetMassCalibEx());
    return rcpp_result_gen;
END_RCPP
}
// GetMassCalib2Ex
List GetMassCalib2Ex();
RcppExport SEXP _TofDaqR_GetMassCalib2Ex() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(GetMassCalib2Ex());
    return rcpp_result_gen;
END_RCPP
}
// GetSumSpectrumFromShMem
NumericVector GetSumSpectrumFromShMem(bool Normalize);
RcppExport SEXP _TofDaqR_GetSumSpectrumFromShMem(SEXP NormalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< bool >::type Normalize(NormalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(GetSumSpectrumFromShMem(Normalize));
    return rcpp_result_gen;
END_RCPP
}
// GetSumSpectrumFromShMem2
NumericVector GetSumSpectrumFromShMem2(bool Normalize);
RcppExport SEXP _TofDaqR_GetSumSpectrumFromShMem2(SEXP NormalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< bool >::type Normalize(NormalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(GetSumSpectrumFromShMem2(Normalize));
    return rcpp_result_gen;
END_RCPP
}
// GetTofSpectrumFromShMem
SEXP GetTofSpectrumFromShMem(int SegmentIndex, int SegmentEndIndex, int BufIndex, bool Normalize);
RcppExport SEXP _TofDaqR_GetTofSpectrumFromShMem(SEXP SegmentIndexSEXP, SEXP SegmentEndIndexSEXP, SEXP BufIndexSEXP, SEXP NormalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type SegmentIndex(SegmentIndexSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentEndIndex(SegmentEndIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufIndex(BufIndexSEXP);
    Rcpp::traits::input_parameter< bool >::type Normalize(NormalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(GetTofSpectrumFromShMem(SegmentIndex, SegmentEndIndex, BufIndex, Normalize));
    return rcpp_result_gen;
END_RCPP
}
// GetTofSpectrumFromShMem2
SEXP GetTofSpectrumFromShMem2(int SegmentIndex, int SegmentEndIndex, int BufIndex, bool Normalize);
RcppExport SEXP _TofDaqR_GetTofSpectrumFromShMem2(SEXP SegmentIndexSEXP, SEXP SegmentEndIndexSEXP, SEXP BufIndexSEXP, SEXP NormalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type SegmentIndex(SegmentIndexSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentEndIndex(SegmentEndIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufIndex(BufIndexSEXP);
    Rcpp::traits::input_parameter< bool >::type Normalize(NormalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(GetTofSpectrumFromShMem2(SegmentIndex, SegmentEndIndex, BufIndex, Normalize));
    return rcpp_result_gen;
END_RCPP
}
// GetSpecXaxisFromShMem
NumericVector GetSpecXaxisFromShMem(int Type);
RcppExport SEXP _TofDaqR_GetSpecXaxisFromShMem(SEXP TypeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type Type(TypeSEXP);
    rcpp_result_gen = Rcpp::wrap(GetSpecXaxisFromShMem(Type));
    return rcpp_result_gen;
END_RCPP
}
// GetStickSpectrumFromShMem
List GetStickSpectrumFromShMem(int SegmentIndex, int SegmentEndIndex, int BufIndex);
RcppExport SEXP _TofDaqR_GetStickSpectrumFromShMem(SEXP SegmentIndexSEXP, SEXP SegmentEndIndexSEXP, SEXP BufIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type SegmentIndex(SegmentIndexSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentEndIndex(SegmentEndIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufIndex(BufIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(GetStickSpectrumFromShMem(SegmentIndex, SegmentEndIndex, BufIndex));
    return rcpp_result_gen;
END_RCPP
}
// GetStickSpectrumFromShMem2
List GetStickSpectrumFromShMem2(int SegmentIndex, int SegmentEndIndex, int BufIndex);
RcppExport SEXP _TofDaqR_GetStickSpectrumFromShMem2(SEXP SegmentIndexSEXP, SEXP SegmentEndIndexSEXP, SEXP BufIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type SegmentIndex(SegmentIndexSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentEndIndex(SegmentEndIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufIndex(BufIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(GetStickSpectrumFromShMem2(SegmentIndex, SegmentEndIndex, BufIndex));
    return rcpp_result_gen;
END_RCPP
}
// GetSegmentProfileFromShMem
SEXP GetSegmentProfileFromShMem(int PeakIndex, int BufIndex);
RcppExport SEXP _TofDaqR_GetSegmentProfileFromShMem(SEXP PeakIndexSEXP, SEXP BufIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type PeakIndex(PeakIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufIndex(BufIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(GetSegmentProfileFromShMem(PeakIndex, BufIndex));
    return rcpp_result_gen;
END_RCPP
}
// GetSegmentProfileFromShMem2
SEXP GetSegmentProfileFromShMem2(int PeakIndex, int BufIndex);
RcppExport SEXP _TofDaqR_GetSegmentProfileFromShMem2(SEXP PeakIndexSEXP, SEXP BufIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type PeakIndex(PeakIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufIndex(BufIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(GetSegmentProfileFromShMem2(PeakIndex, BufIndex));
    return rcpp_result_gen;
END_RCPP
}
// GetBufTimeFromShMem
double GetBufTimeFromShMem(int BufIndex, int WriteIndex);
RcppExport SEXP _TofDaqR_GetBufTimeFromShMem(SEXP BufIndexSEXP, SEXP WriteIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type BufIndex(BufIndexSEXP);
    Rcpp::traits::input_parameter< int >::type WriteIndex(WriteIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(GetBufTimeFromShMem(BufIndex, WriteIndex));
    return rcpp_result_gen;
END_RCPP
}
// AddLogEntry
void AddLogEntry(std::string LogEntryText, std::string LogEntryTime);
RcppExport SEXP _TofDaqR_AddLogEntry(SEXP LogEntryTextSEXP, SEXP LogEntryTimeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type LogEntryText(LogEntryTextSEXP);
    Rcpp::traits::input_parameter< std::string >::type LogEntryTime(LogEntryTimeSEXP);
    AddLogEntry(LogEntryText, LogEntryTime);
    return R_NilValue;
END_RCPP
}
// AddAttributeInt
void AddAttributeInt(std::string Object, std::string AttributeName, int Value);
RcppExport SEXP _TofDaqR_AddAttributeInt(SEXP ObjectSEXP, SEXP AttributeNameSEXP, SEXP ValueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Object(ObjectSEXP);
    Rcpp::traits::input_parameter< std::string >::type AttributeName(AttributeNameSEXP);
    Rcpp::traits::input_parameter< int >::type Value(ValueSEXP);
    AddAttributeInt(Object, AttributeName, Value);
    return R_NilValue;
END_RCPP
}
// AddAttributeDouble
void AddAttributeDouble(std::string Object, std::string AttributeName, double Value);
RcppExport SEXP _TofDaqR_AddAttributeDouble(SEXP ObjectSEXP, SEXP AttributeNameSEXP, SEXP ValueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Object(ObjectSEXP);
    Rcpp::traits::input_parameter< std::string >::type AttributeName(AttributeNameSEXP);
    Rcpp::traits::input_parameter< double >::type Value(ValueSEXP);
    AddAttributeDouble(Object, AttributeName, Value);
    return R_NilValue;
END_RCPP
}
// AddAttributeString
void AddAttributeString(std::string Object, std::string AttributeName, std::string Value);
RcppExport SEXP _TofDaqR_AddAttributeString(SEXP ObjectSEXP, SEXP AttributeNameSEXP, SEXP ValueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Object(ObjectSEXP);
    Rcpp::traits::input_parameter< std::string >::type AttributeName(AttributeNameSEXP);
    Rcpp::traits::input_parameter< std::string >::type Value(ValueSEXP);
    AddAttributeString(Object, AttributeName, Value);
    return R_NilValue;
END_RCPP
}
// AddUserData
void AddUserData(std::string Location, int NbrElements, NumericVector Data, Nullable<Rcpp::StringVector> ElementDescription, int CompressionLevel);
RcppExport SEXP _TofDaqR_AddUserData(SEXP LocationSEXP, SEXP NbrElementsSEXP, SEXP DataSEXP, SEXP ElementDescriptionSEXP, SEXP CompressionLevelSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Location(LocationSEXP);
    Rcpp::traits::input_parameter< int >::type NbrElements(NbrElementsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Data(DataSEXP);
    Rcpp::traits::input_parameter< Nullable<Rcpp::StringVector> >::type ElementDescription(ElementDescriptionSEXP);
    Rcpp::traits::input_parameter< int >::type CompressionLevel(CompressionLevelSEXP);
    AddUserData(Location, NbrElements, Data, ElementDescription, CompressionLevel);
    return R_NilValue;
END_RCPP
}
// AddUserDataMultiRow
void AddUserDataMultiRow(std::string Location, int NbrElements, int NbrRows, NumericVector Data, Nullable<Rcpp::StringVector> ElementDescription, int CompressionLevel);
RcppExport SEXP _TofDaqR_AddUserDataMultiRow(SEXP LocationSEXP, SEXP NbrElementsSEXP, SEXP NbrRowsSEXP, SEXP DataSEXP, SEXP ElementDescriptionSEXP, SEXP CompressionLevelSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Location(LocationSEXP);
    Rcpp::traits::input_parameter< int >::type NbrElements(NbrElementsSEXP);
    Rcpp::traits::input_parameter< int >::type NbrRows(NbrRowsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Data(DataSEXP);
    Rcpp::traits::input_parameter< Nullable<Rcpp::StringVector> >::type ElementDescription(ElementDescriptionSEXP);
    Rcpp::traits::input_parameter< int >::type CompressionLevel(CompressionLevelSEXP);
    AddUserDataMultiRow(Location, NbrElements, NbrRows, Data, ElementDescription, CompressionLevel);
    return R_NilValue;
END_RCPP
}
// RegisterUserDataBuf
void RegisterUserDataBuf(std::string Location, int NbrElements, Nullable<Rcpp::StringVector> ElementDescription, int CompressionLevel);
RcppExport SEXP _TofDaqR_RegisterUserDataBuf(SEXP LocationSEXP, SEXP NbrElementsSEXP, SEXP ElementDescriptionSEXP, SEXP CompressionLevelSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Location(LocationSEXP);
    Rcpp::traits::input_parameter< int >::type NbrElements(NbrElementsSEXP);
    Rcpp::traits::input_parameter< Nullable<Rcpp::StringVector> >::type ElementDescription(ElementDescriptionSEXP);
    Rcpp::traits::input_parameter< int >::type CompressionLevel(CompressionLevelSEXP);
    RegisterUserDataBuf(Location, NbrElements, ElementDescription, CompressionLevel);
    return R_NilValue;
END_RCPP
}
// RegisterUserDataWrite
void RegisterUserDataWrite(std::string Location, int NbrElements, Nullable<Rcpp::StringVector> ElementDescription, int CompressionLevel);
RcppExport SEXP _TofDaqR_RegisterUserDataWrite(SEXP LocationSEXP, SEXP NbrElementsSEXP, SEXP ElementDescriptionSEXP, SEXP CompressionLevelSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Location(LocationSEXP);
    Rcpp::traits::input_parameter< int >::type NbrElements(NbrElementsSEXP);
    Rcpp::traits::input_parameter< Nullable<Rcpp::StringVector> >::type ElementDescription(ElementDescriptionSEXP);
    Rcpp::traits::input_parameter< int >::type CompressionLevel(CompressionLevelSEXP);
    RegisterUserDataWrite(Location, NbrElements, ElementDescription, CompressionLevel);
    return R_NilValue;
END_RCPP
}
// RegisterUserDataNoStore
void RegisterUserDataNoStore(std::string Location, int NbrElements, Nullable<Rcpp::StringVector> ElementDescription);
RcppExport SEXP _TofDaqR_RegisterUserDataNoStore(SEXP LocationSEXP, SEXP NbrElementsSEXP, SEXP ElementDescriptionSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Location(LocationSEXP);
    Rcpp::traits::input_parameter< int >::type NbrElements(NbrElementsSEXP);
    Rcpp::traits::input_parameter< Nullable<Rcpp::StringVector> >::type ElementDescription(ElementDescriptionSEXP);
    RegisterUserDataNoStore(Location, NbrElements, ElementDescription);
    return R_NilValue;
END_RCPP
}
// UnregisterUserData
void UnregisterUserData(std::string Location);
RcppExport SEXP _TofDaqR_UnregisterUserData(SEXP LocationSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Location(LocationSEXP);
    UnregisterUserData(Location);
    return R_NilValue;
END_RCPP
}
// UpdateUserData
void UpdateUserData(std::string Location, int NbrElements, NumericVector Data);
RcppExport SEXP _TofDaqR_UpdateUserData(SEXP LocationSEXP, SEXP NbrElementsSEXP, SEXP DataSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Location(LocationSEXP);
    Rcpp::traits::input_parameter< int >::type NbrElements(NbrElementsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Data(DataSEXP);
    UpdateUserData(Location, NbrElements, Data);
    return R_NilValue;
END_RCPP
}
// ReadRegUserData
NumericVector ReadRegUserData(std::string Location, int NbrElements);
RcppExport SEXP _TofDaqR_ReadRegUserData(SEXP LocationSEXP, SEXP NbrElementsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Location(LocationSEXP);
    Rcpp::traits::input_parameter< int >::type NbrElements(NbrElementsSEXP);
    rcpp_result_gen = Rcpp::wrap(ReadRegUserData(Location, NbrElements));
    return rcpp_result_gen;
END_RCPP
}
// QueryRegUserDataSize
int QueryRegUserDataSize(std::string Location);
RcppExport SEXP _TofDaqR_QueryRegUserDataSize(SEXP LocationSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Location(LocationSEXP);
    rcpp_result_gen = Rcpp::wrap(QueryRegUserDataSize(Location));
    return rcpp_result_gen;
END_RCPP
}
// GetRegUserDataSources
List GetRegUserDataSources();
RcppExport SEXP _TofDaqR_GetRegUserDataSources() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(GetRegUserDataSources());
    return rcpp_result_gen;
END_RCPP
}
// GetRegUserDataDesc
CharacterVector GetRegUserDataDesc(std::string Location);
RcppExport SEXP _TofDaqR_GetRegUserDataDesc(SEXP LocationSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Location(LocationSEXP);
    rcpp_result_gen = Rcpp::wrap(GetRegUserDataDesc(Location));
    return rcpp_result_gen;
END_RCPP
}
// KeepFileOpen
void KeepFileOpen(bool keepOpen);
RcppExport SEXP _TofDaqR_KeepFileOpen(SEXP keepOpenSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< bool >::type keepOpen(keepOpenSEXP);
    KeepFileOpen(keepOpen);
    return R_NilValue;
END_RCPP
}
// TpsConnect
void TpsConnect();
RcppExport SEXP _TofDaqR_TpsConnect() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    TpsConnect();
    return R_NilValue;
END_RCPP
}
// TpsConnect2
void TpsConnect2(std::string ip, int type);
RcppExport SEXP _TofDaqR_TpsConnect2(SEXP ipSEXP, SEXP typeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type ip(ipSEXP);
    Rcpp::traits::input_parameter< int >::type type(typeSEXP);
    TpsConnect2(ip, type);
    return R_NilValue;
END_RCPP
}
// TpsDisconnect
void TpsDisconnect();
RcppExport SEXP _TofDaqR_TpsDisconnect() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    TpsDisconnect();
    return R_NilValue;
END_RCPP
}
// TpsGetMonitorValue
double TpsGetMonitorValue(int moduleCode);
RcppExport SEXP _TofDaqR_TpsGetMonitorValue(SEXP moduleCodeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type moduleCode(moduleCodeSEXP);
    rcpp_result_gen = Rcpp::wrap(TpsGetMonitorValue(moduleCode));
    return rcpp_result_gen;
END_RCPP
}
// TpsGetTargetValue
double TpsGetTargetValue(int moduleCode);
RcppExport SEXP _TofDaqR_TpsGetTargetValue(SEXP moduleCodeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type moduleCode(moduleCodeSEXP);
    rcpp_result_gen = Rcpp::wrap(TpsGetTargetValue(moduleCode));
    return rcpp_result_gen;
END_RCPP
}
// TpsGetLastSetValue
double TpsGetLastSetValue(int moduleCode);
RcppExport SEXP _TofDaqR_TpsGetLastSetValue(SEXP moduleCodeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type moduleCode(moduleCodeSEXP);
    rcpp_result_gen = Rcpp::wrap(TpsGetLastSetValue(moduleCode));
    return rcpp_result_gen;
END_RCPP
}
// TpsSetTargetValue
void TpsSetTargetValue(int moduleCode, double value);
RcppExport SEXP _TofDaqR_TpsSetTargetValue(SEXP moduleCodeSEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type moduleCode(moduleCodeSEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    TpsSetTargetValue(moduleCode, value);
    return R_NilValue;
END_RCPP
}
// TpsGetNbrModules
int TpsGetNbrModules();
RcppExport SEXP _TofDaqR_TpsGetNbrModules() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TpsGetNbrModules());
    return rcpp_result_gen;
END_RCPP
}
// TpsGetModuleCodes
IntegerVector TpsGetModuleCodes();
RcppExport SEXP _TofDaqR_TpsGetModuleCodes() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TpsGetModuleCodes());
    return rcpp_result_gen;
END_RCPP
}
// TpsInitialize
void TpsInitialize();
RcppExport SEXP _TofDaqR_TpsInitialize() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    TpsInitialize();
    return R_NilValue;
END_RCPP
}
// TpsSetAllVoltages
void TpsSetAllVoltages();
RcppExport SEXP _TofDaqR_TpsSetAllVoltages() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    TpsSetAllVoltages();
    return R_NilValue;
END_RCPP
}
// TpsShutdown
void TpsShutdown();
RcppExport SEXP _TofDaqR_TpsShutdown() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    TpsShutdown();
    return R_NilValue;
END_RCPP
}
// TpsGetStatus
List TpsGetStatus();
RcppExport SEXP _TofDaqR_TpsGetStatus() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TpsGetStatus());
    return rcpp_result_gen;
END_RCPP
}
// TpsLoadSetFile
void TpsLoadSetFile(std::string setFile);
RcppExport SEXP _TofDaqR_TpsLoadSetFile(SEXP setFileSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type setFile(setFileSEXP);
    TpsLoadSetFile(setFile);
    return R_NilValue;
END_RCPP
}
// TpsSaveSetFile
void TpsSaveSetFile(std::string setFile);
RcppExport SEXP _TofDaqR_TpsSaveSetFile(SEXP setFileSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type setFile(setFileSEXP);
    TpsSaveSetFile(setFile);
    return R_NilValue;
END_RCPP
}
// TpsGetActiveFilament
int TpsGetActiveFilament();
RcppExport SEXP _TofDaqR_TpsGetActiveFilament() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TpsGetActiveFilament());
    return rcpp_result_gen;
END_RCPP
}
// TpsSetActiveFilament
void TpsSetActiveFilament(int activeFilament);
RcppExport SEXP _TofDaqR_TpsSetActiveFilament(SEXP activeFilamentSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type activeFilament(activeFilamentSEXP);
    TpsSetActiveFilament(activeFilament);
    return R_NilValue;
END_RCPP
}
// TpsGetModuleLimits
NumericVector TpsGetModuleLimits(int moduleCode);
RcppExport SEXP _TofDaqR_TpsGetModuleLimits(SEXP moduleCodeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type moduleCode(moduleCodeSEXP);
    rcpp_result_gen = Rcpp::wrap(TpsGetModuleLimits(moduleCode));
    return rcpp_result_gen;
END_RCPP
}
// TpsChangeIonMode
void TpsChangeIonMode(int ionMode);
RcppExport SEXP _TofDaqR_TpsChangeIonMode(SEXP ionModeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type ionMode(ionModeSEXP);
    TpsChangeIonMode(ionMode);
    return R_NilValue;
END_RCPP
}
// GetH5Descriptor
List GetH5Descriptor(std::string Filename);
RcppExport SEXP _TofDaqR_GetH5Descriptor(SEXP FilenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    rcpp_result_gen = Rcpp::wrap(GetH5Descriptor(Filename));
    return rcpp_result_gen;
END_RCPP
}
// CloseH5
void CloseH5(std::string Filename);
RcppExport SEXP _TofDaqR_CloseH5(SEXP FilenameSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    CloseH5(Filename);
    return R_NilValue;
END_RCPP
}
// CloseAll
void CloseAll();
RcppExport SEXP _TofDaqR_CloseAll() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    CloseAll();
    return R_NilValue;
END_RCPP
}
// GetSumSpectrumFromH5
NumericVector GetSumSpectrumFromH5(std::string Filename, bool Normalize);
RcppExport SEXP _TofDaqR_GetSumSpectrumFromH5(SEXP FilenameSEXP, SEXP NormalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< bool >::type Normalize(NormalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(GetSumSpectrumFromH5(Filename, Normalize));
    return rcpp_result_gen;
END_RCPP
}
// GetTofSpectrumFromH5
SEXP GetTofSpectrumFromH5(std::string Filename, int SegmentIndex, int SegmentEndIndex, int BufIndex, int BufEndIndex, int WriteIndex, int WriteEndIndex, bool BufWriteLinked, bool Normalize);
RcppExport SEXP _TofDaqR_GetTofSpectrumFromH5(SEXP FilenameSEXP, SEXP SegmentIndexSEXP, SEXP SegmentEndIndexSEXP, SEXP BufIndexSEXP, SEXP BufEndIndexSEXP, SEXP WriteIndexSEXP, SEXP WriteEndIndexSEXP, SEXP BufWriteLinkedSEXP, SEXP NormalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentIndex(SegmentIndexSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentEndIndex(SegmentEndIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufIndex(BufIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufEndIndex(BufEndIndexSEXP);
    Rcpp::traits::input_parameter< int >::type WriteIndex(WriteIndexSEXP);
    Rcpp::traits::input_parameter< int >::type WriteEndIndex(WriteEndIndexSEXP);
    Rcpp::traits::input_parameter< bool >::type BufWriteLinked(BufWriteLinkedSEXP);
    Rcpp::traits::input_parameter< bool >::type Normalize(NormalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(GetTofSpectrumFromH5(Filename, SegmentIndex, SegmentEndIndex, BufIndex, BufEndIndex, WriteIndex, WriteEndIndex, BufWriteLinked, Normalize));
    return rcpp_result_gen;
END_RCPP
}
// GetTofSpectrum2FromH5
SEXP GetTofSpectrum2FromH5(std::string Filename, int SegmentIndex, int SegmentEndIndex, int BufIndex, int BufEndIndex, int WriteIndex, int WriteEndIndex, bool BufWriteLinked, bool Normalize);
RcppExport SEXP _TofDaqR_GetTofSpectrum2FromH5(SEXP FilenameSEXP, SEXP SegmentIndexSEXP, SEXP SegmentEndIndexSEXP, SEXP BufIndexSEXP, SEXP BufEndIndexSEXP, SEXP WriteIndexSEXP, SEXP WriteEndIndexSEXP, SEXP BufWriteLinkedSEXP, SEXP NormalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentIndex(SegmentIndexSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentEndIndex(SegmentEndIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufIndex(BufIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufEndIndex(BufEndIndexSEXP);
    Rcpp::traits::input_parameter< int >::type WriteIndex(WriteIndexSEXP);
    Rcpp::traits::input_parameter< int >::type WriteEndIndex(WriteEndIndexSEXP);
    Rcpp::traits::input_parameter< bool >::type BufWriteLinked(BufWriteLinkedSEXP);
    Rcpp::traits::input_parameter< bool >::type Normalize(NormalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(GetTofSpectrum2FromH5(Filename, SegmentIndex, SegmentEndIndex, BufIndex, BufEndIndex, WriteIndex, WriteEndIndex, BufWriteLinked, Normalize));
    return rcpp_result_gen;
END_RCPP
}
// GetStickSpectrumFromH5
SEXP GetStickSpectrumFromH5(std::string Filename, int SegmentIndex, int SegmentEndIndex, int BufIndex, int BufEndIndex, int WriteIndex, int WriteEndIndex, bool BufWriteLinked, bool Normalize);
RcppExport SEXP _TofDaqR_GetStickSpectrumFromH5(SEXP FilenameSEXP, SEXP SegmentIndexSEXP, SEXP SegmentEndIndexSEXP, SEXP BufIndexSEXP, SEXP BufEndIndexSEXP, SEXP WriteIndexSEXP, SEXP WriteEndIndexSEXP, SEXP BufWriteLinkedSEXP, SEXP NormalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentIndex(SegmentIndexSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentEndIndex(SegmentEndIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufIndex(BufIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufEndIndex(BufEndIndexSEXP);
    Rcpp::traits::input_parameter< int >::type WriteIndex(WriteIndexSEXP);
    Rcpp::traits::input_parameter< int >::type WriteEndIndex(WriteEndIndexSEXP);
    Rcpp::traits::input_parameter< bool >::type BufWriteLinked(BufWriteLinkedSEXP);
    Rcpp::traits::input_parameter< bool >::type Normalize(NormalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(GetStickSpectrumFromH5(Filename, SegmentIndex, SegmentEndIndex, BufIndex, BufEndIndex, WriteIndex, WriteEndIndex, BufWriteLinked, Normalize));
    return rcpp_result_gen;
END_RCPP
}
// GetStickSpectrum2FromH5
SEXP GetStickSpectrum2FromH5(std::string Filename, int SegmentIndex, int SegmentEndIndex, int BufIndex, int BufEndIndex, int WriteIndex, int WriteEndIndex, bool BufWriteLinked, bool Normalize);
RcppExport SEXP _TofDaqR_GetStickSpectrum2FromH5(SEXP FilenameSEXP, SEXP SegmentIndexSEXP, SEXP SegmentEndIndexSEXP, SEXP BufIndexSEXP, SEXP BufEndIndexSEXP, SEXP WriteIndexSEXP, SEXP WriteEndIndexSEXP, SEXP BufWriteLinkedSEXP, SEXP NormalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentIndex(SegmentIndexSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentEndIndex(SegmentEndIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufIndex(BufIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufEndIndex(BufEndIndexSEXP);
    Rcpp::traits::input_parameter< int >::type WriteIndex(WriteIndexSEXP);
    Rcpp::traits::input_parameter< int >::type WriteEndIndex(WriteEndIndexSEXP);
    Rcpp::traits::input_parameter< bool >::type BufWriteLinked(BufWriteLinkedSEXP);
    Rcpp::traits::input_parameter< bool >::type Normalize(NormalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(GetStickSpectrum2FromH5(Filename, SegmentIndex, SegmentEndIndex, BufIndex, BufEndIndex, WriteIndex, WriteEndIndex, BufWriteLinked, Normalize));
    return rcpp_result_gen;
END_RCPP
}
// GetPeakParametersFromH5
List GetPeakParametersFromH5(std::string Filename, int PeakIndex);
RcppExport SEXP _TofDaqR_GetPeakParametersFromH5(SEXP FilenameSEXP, SEXP PeakIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type PeakIndex(PeakIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(GetPeakParametersFromH5(Filename, PeakIndex));
    return rcpp_result_gen;
END_RCPP
}
// GetBufTimeFromH5
double GetBufTimeFromH5(std::string Filename, int BufIndex, int WriteIndex);
RcppExport SEXP _TofDaqR_GetBufTimeFromH5(SEXP FilenameSEXP, SEXP BufIndexSEXP, SEXP WriteIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type BufIndex(BufIndexSEXP);
    Rcpp::traits::input_parameter< int >::type WriteIndex(WriteIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(GetBufTimeFromH5(Filename, BufIndex, WriteIndex));
    return rcpp_result_gen;
END_RCPP
}
// GetSpecXaxisFromH5
NumericVector GetSpecXaxisFromH5(std::string Filename, int Type, int writeIndex);
RcppExport SEXP _TofDaqR_GetSpecXaxisFromH5(SEXP FilenameSEXP, SEXP TypeSEXP, SEXP writeIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type Type(TypeSEXP);
    Rcpp::traits::input_parameter< int >::type writeIndex(writeIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(GetSpecXaxisFromH5(Filename, Type, writeIndex));
    return rcpp_result_gen;
END_RCPP
}
// GetSegmentProfileFromH5
SEXP GetSegmentProfileFromH5(std::string Filename, int PeakIndex, int BufStartIndex, int BufEndIndex, int WriteStartIndex, int WriteEndIndex, bool BufWriteLinked);
RcppExport SEXP _TofDaqR_GetSegmentProfileFromH5(SEXP FilenameSEXP, SEXP PeakIndexSEXP, SEXP BufStartIndexSEXP, SEXP BufEndIndexSEXP, SEXP WriteStartIndexSEXP, SEXP WriteEndIndexSEXP, SEXP BufWriteLinkedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type PeakIndex(PeakIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufStartIndex(BufStartIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufEndIndex(BufEndIndexSEXP);
    Rcpp::traits::input_parameter< int >::type WriteStartIndex(WriteStartIndexSEXP);
    Rcpp::traits::input_parameter< int >::type WriteEndIndex(WriteEndIndexSEXP);
    Rcpp::traits::input_parameter< bool >::type BufWriteLinked(BufWriteLinkedSEXP);
    rcpp_result_gen = Rcpp::wrap(GetSegmentProfileFromH5(Filename, PeakIndex, BufStartIndex, BufEndIndex, WriteStartIndex, WriteEndIndex, BufWriteLinked));
    return rcpp_result_gen;
END_RCPP
}
// GetSegmentProfile2FromH5
SEXP GetSegmentProfile2FromH5(std::string Filename, int PeakIndex, int BufStartIndex, int BufEndIndex, int WriteStartIndex, int WriteEndIndex, bool BufWriteLinked);
RcppExport SEXP _TofDaqR_GetSegmentProfile2FromH5(SEXP FilenameSEXP, SEXP PeakIndexSEXP, SEXP BufStartIndexSEXP, SEXP BufEndIndexSEXP, SEXP WriteStartIndexSEXP, SEXP WriteEndIndexSEXP, SEXP BufWriteLinkedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type PeakIndex(PeakIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufStartIndex(BufStartIndexSEXP);
    Rcpp::traits::input_parameter< int >::type BufEndIndex(BufEndIndexSEXP);
    Rcpp::traits::input_parameter< int >::type WriteStartIndex(WriteStartIndexSEXP);
    Rcpp::traits::input_parameter< int >::type WriteEndIndex(WriteEndIndexSEXP);
    Rcpp::traits::input_parameter< bool >::type BufWriteLinked(BufWriteLinkedSEXP);
    rcpp_result_gen = Rcpp::wrap(GetSegmentProfile2FromH5(Filename, PeakIndex, BufStartIndex, BufEndIndex, WriteStartIndex, WriteEndIndex, BufWriteLinked));
    return rcpp_result_gen;
END_RCPP
}
// GetBufWriteProfileFromH5
SEXP GetBufWriteProfileFromH5(std::string Filename, int PeakIndex, int SegmentStartIndex, int SegmentEndIndex);
RcppExport SEXP _TofDaqR_GetBufWriteProfileFromH5(SEXP FilenameSEXP, SEXP PeakIndexSEXP, SEXP SegmentStartIndexSEXP, SEXP SegmentEndIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type PeakIndex(PeakIndexSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentStartIndex(SegmentStartIndexSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentEndIndex(SegmentEndIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(GetBufWriteProfileFromH5(Filename, PeakIndex, SegmentStartIndex, SegmentEndIndex));
    return rcpp_result_gen;
END_RCPP
}
// GetBufWriteProfile2FromH5
SEXP GetBufWriteProfile2FromH5(std::string Filename, int PeakIndex, int SegmentStartIndex, int SegmentEndIndex);
RcppExport SEXP _TofDaqR_GetBufWriteProfile2FromH5(SEXP FilenameSEXP, SEXP PeakIndexSEXP, SEXP SegmentStartIndexSEXP, SEXP SegmentEndIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type PeakIndex(PeakIndexSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentStartIndex(SegmentStartIndexSEXP);
    Rcpp::traits::input_parameter< int >::type SegmentEndIndex(SegmentEndIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(GetBufWriteProfile2FromH5(Filename, PeakIndex, SegmentStartIndex, SegmentEndIndex));
    return rcpp_result_gen;
END_RCPP
}
// GetRegUserDataSourcesFromH5
List GetRegUserDataSourcesFromH5(std::string Filename);
RcppExport SEXP _TofDaqR_GetRegUserDataSourcesFromH5(SEXP FilenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    rcpp_result_gen = Rcpp::wrap(GetRegUserDataSourcesFromH5(Filename));
    return rcpp_result_gen;
END_RCPP
}
// GetRegUserDataFromH5
SEXP GetRegUserDataFromH5(std::string Filename, std::string location, int bufIndex, int writeIndex, bool readDescription);
RcppExport SEXP _TofDaqR_GetRegUserDataFromH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP bufIndexSEXP, SEXP writeIndexSEXP, SEXP readDescriptionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< std::string >::type location(locationSEXP);
    Rcpp::traits::input_parameter< int >::type bufIndex(bufIndexSEXP);
    Rcpp::traits::input_parameter< int >::type writeIndex(writeIndexSEXP);
    Rcpp::traits::input_parameter< bool >::type readDescription(readDescriptionSEXP);
    rcpp_result_gen = Rcpp::wrap(GetRegUserDataFromH5(Filename, location, bufIndex, writeIndex, readDescription));
    return rcpp_result_gen;
END_RCPP
}
// GetTofData
SEXP GetTofData(std::string Filename, int sampleOffset, int sampleCount, int segOffset, int segCount, int bufOffset, int bufCount, int writeOffset, int writeCount);
RcppExport SEXP _TofDaqR_GetTofData(SEXP FilenameSEXP, SEXP sampleOffsetSEXP, SEXP sampleCountSEXP, SEXP segOffsetSEXP, SEXP segCountSEXP, SEXP bufOffsetSEXP, SEXP bufCountSEXP, SEXP writeOffsetSEXP, SEXP writeCountSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type sampleOffset(sampleOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type sampleCount(sampleCountSEXP);
    Rcpp::traits::input_parameter< int >::type segOffset(segOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type segCount(segCountSEXP);
    Rcpp::traits::input_parameter< int >::type bufOffset(bufOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type bufCount(bufCountSEXP);
    Rcpp::traits::input_parameter< int >::type writeOffset(writeOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type writeCount(writeCountSEXP);
    rcpp_result_gen = Rcpp::wrap(GetTofData(Filename, sampleOffset, sampleCount, segOffset, segCount, bufOffset, bufCount, writeOffset, writeCount));
    return rcpp_result_gen;
END_RCPP
}
// GetTofData2
SEXP GetTofData2(std::string Filename, int sampleOffset, int sampleCount, int segOffset, int segCount, int bufOffset, int bufCount, int writeOffset, int writeCount);
RcppExport SEXP _TofDaqR_GetTofData2(SEXP FilenameSEXP, SEXP sampleOffsetSEXP, SEXP sampleCountSEXP, SEXP segOffsetSEXP, SEXP segCountSEXP, SEXP bufOffsetSEXP, SEXP bufCountSEXP, SEXP writeOffsetSEXP, SEXP writeCountSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type sampleOffset(sampleOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type sampleCount(sampleCountSEXP);
    Rcpp::traits::input_parameter< int >::type segOffset(segOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type segCount(segCountSEXP);
    Rcpp::traits::input_parameter< int >::type bufOffset(bufOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type bufCount(bufCountSEXP);
    Rcpp::traits::input_parameter< int >::type writeOffset(writeOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type writeCount(writeCountSEXP);
    rcpp_result_gen = Rcpp::wrap(GetTofData2(Filename, sampleOffset, sampleCount, segOffset, segCount, bufOffset, bufCount, writeOffset, writeCount));
    return rcpp_result_gen;
END_RCPP
}
// GetPeakData
SEXP GetPeakData(std::string Filename, int peakOffset, int peakCount, int segOffset, int segCount, int bufOffset, int bufCount, int writeOffset, int writeCount);
RcppExport SEXP _TofDaqR_GetPeakData(SEXP FilenameSEXP, SEXP peakOffsetSEXP, SEXP peakCountSEXP, SEXP segOffsetSEXP, SEXP segCountSEXP, SEXP bufOffsetSEXP, SEXP bufCountSEXP, SEXP writeOffsetSEXP, SEXP writeCountSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type peakOffset(peakOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type peakCount(peakCountSEXP);
    Rcpp::traits::input_parameter< int >::type segOffset(segOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type segCount(segCountSEXP);
    Rcpp::traits::input_parameter< int >::type bufOffset(bufOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type bufCount(bufCountSEXP);
    Rcpp::traits::input_parameter< int >::type writeOffset(writeOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type writeCount(writeCountSEXP);
    rcpp_result_gen = Rcpp::wrap(GetPeakData(Filename, peakOffset, peakCount, segOffset, segCount, bufOffset, bufCount, writeOffset, writeCount));
    return rcpp_result_gen;
END_RCPP
}
// GetPeakData2
SEXP GetPeakData2(std::string Filename, int peakOffset, int peakCount, int segOffset, int segCount, int bufOffset, int bufCount, int writeOffset, int writeCount);
RcppExport SEXP _TofDaqR_GetPeakData2(SEXP FilenameSEXP, SEXP peakOffsetSEXP, SEXP peakCountSEXP, SEXP segOffsetSEXP, SEXP segCountSEXP, SEXP bufOffsetSEXP, SEXP bufCountSEXP, SEXP writeOffsetSEXP, SEXP writeCountSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type peakOffset(peakOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type peakCount(peakCountSEXP);
    Rcpp::traits::input_parameter< int >::type segOffset(segOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type segCount(segCountSEXP);
    Rcpp::traits::input_parameter< int >::type bufOffset(bufOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type bufCount(bufCountSEXP);
    Rcpp::traits::input_parameter< int >::type writeOffset(writeOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type writeCount(writeCountSEXP);
    rcpp_result_gen = Rcpp::wrap(GetPeakData2(Filename, peakOffset, peakCount, segOffset, segCount, bufOffset, bufCount, writeOffset, writeCount));
    return rcpp_result_gen;
END_RCPP
}
// GetTimingData
NumericVector GetTimingData(std::string Filename, int bufOffset, int bufCount, int writeOffset, int writeCount);
RcppExport SEXP _TofDaqR_GetTimingData(SEXP FilenameSEXP, SEXP bufOffsetSEXP, SEXP bufCountSEXP, SEXP writeOffsetSEXP, SEXP writeCountSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type bufOffset(bufOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type bufCount(bufCountSEXP);
    Rcpp::traits::input_parameter< int >::type writeOffset(writeOffsetSEXP);
    Rcpp::traits::input_parameter< int >::type writeCount(writeCountSEXP);
    rcpp_result_gen = Rcpp::wrap(GetTimingData(Filename, bufOffset, bufCount, writeOffset, writeCount));
    return rcpp_result_gen;
END_RCPP
}
// GetIntAttributeFromH5
int GetIntAttributeFromH5(std::string Filename, std::string location, std::string name);
RcppExport SEXP _TofDaqR_GetIntAttributeFromH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< std::string >::type location(locationSEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(GetIntAttributeFromH5(Filename, location, name));
    return rcpp_result_gen;
END_RCPP
}
// GetUintAttributeFromH5
unsigned int GetUintAttributeFromH5(std::string Filename, std::string location, std::string name);
RcppExport SEXP _TofDaqR_GetUintAttributeFromH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< std::string >::type location(locationSEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(GetUintAttributeFromH5(Filename, location, name));
    return rcpp_result_gen;
END_RCPP
}
// GetInt64AttributeFromH5
CharacterVector GetInt64AttributeFromH5(std::string Filename, std::string location, std::string name);
RcppExport SEXP _TofDaqR_GetInt64AttributeFromH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< std::string >::type location(locationSEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(GetInt64AttributeFromH5(Filename, location, name));
    return rcpp_result_gen;
END_RCPP
}
// GetUint64AttributeFromH5
CharacterVector GetUint64AttributeFromH5(std::string Filename, std::string location, std::string name);
RcppExport SEXP _TofDaqR_GetUint64AttributeFromH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< std::string >::type location(locationSEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(GetUint64AttributeFromH5(Filename, location, name));
    return rcpp_result_gen;
END_RCPP
}
// GetFloatAttributeFromH5
float GetFloatAttributeFromH5(std::string Filename, std::string location, std::string name);
RcppExport SEXP _TofDaqR_GetFloatAttributeFromH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< std::string >::type location(locationSEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(GetFloatAttributeFromH5(Filename, location, name));
    return rcpp_result_gen;
END_RCPP
}
// GetDoubleAttributeFromH5
double GetDoubleAttributeFromH5(std::string Filename, std::string location, std::string name);
RcppExport SEXP _TofDaqR_GetDoubleAttributeFromH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< std::string >::type location(locationSEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(GetDoubleAttributeFromH5(Filename, location, name));
    return rcpp_result_gen;
END_RCPP
}
// GetStringAttributeFromH5
String GetStringAttributeFromH5(std::string Filename, std::string location, std::string name);
RcppExport SEXP _TofDaqR_GetStringAttributeFromH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< std::string >::type location(locationSEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(GetStringAttributeFromH5(Filename, location, name));
    return rcpp_result_gen;
END_RCPP
}
// SetIntAttributeInH5
void SetIntAttributeInH5(std::string Filename, std::string location, std::string name, int attribute);
RcppExport SEXP _TofDaqR_SetIntAttributeInH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP nameSEXP, SEXP attributeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< std::string >::type location(locationSEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    Rcpp::traits::input_parameter< int >::type attribute(attributeSEXP);
    SetIntAttributeInH5(Filename, location, name, attribute);
    return R_NilValue;
END_RCPP
}
// SetUintAttributeInH5
void SetUintAttributeInH5(std::string Filename, std::string location, std::string name, double attribute);
RcppExport SEXP _TofDaqR_SetUintAttributeInH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP nameSEXP, SEXP attributeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< std::string >::type location(locationSEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    Rcpp::traits::input_parameter< double >::type attribute(attributeSEXP);
    SetUintAttributeInH5(Filename, location, name, attribute);
    return R_NilValue;
END_RCPP
}
// SetInt64AttributeInH5
void SetInt64AttributeInH5(std::string Filename, std::string location, std::string name, std::string attribute);
RcppExport SEXP _TofDaqR_SetInt64AttributeInH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP nameSEXP, SEXP attributeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< std::string >::type location(locationSEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    Rcpp::traits::input_parameter< std::string >::type attribute(attributeSEXP);
    SetInt64AttributeInH5(Filename, location, name, attribute);
    return R_NilValue;
END_RCPP
}
// SetUint64AttributeInH5
void SetUint64AttributeInH5(std::string Filename, std::string location, std::string name, std::string attribute);
RcppExport SEXP _TofDaqR_SetUint64AttributeInH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP nameSEXP, SEXP attributeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< std::string >::type location(locationSEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    Rcpp::traits::input_parameter< std::string >::type attribute(attributeSEXP);
    SetUint64AttributeInH5(Filename, location, name, attribute);
    return R_NilValue;
END_RCPP
}
// SetFloatAttributeInH5
void SetFloatAttributeInH5(std::string Filename, std::string location, std::string name, double attribute);
RcppExport SEXP _TofDaqR_SetFloatAttributeInH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP nameSEXP, SEXP attributeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< std::string >::type location(locationSEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    Rcpp::traits::input_parameter< double >::type attribute(attributeSEXP);
    SetFloatAttributeInH5(Filename, location, name, attribute);
    return R_NilValue;
END_RCPP
}
// SetDoubleAttributeInH5
void SetDoubleAttributeInH5(std::string Filename, std::string location, std::string name, double attribute);
RcppExport SEXP _TofDaqR_SetDoubleAttributeInH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP nameSEXP, SEXP attributeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< std::string >::type location(locationSEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    Rcpp::traits::input_parameter< double >::type attribute(attributeSEXP);
    SetDoubleAttributeInH5(Filename, location, name, attribute);
    return R_NilValue;
END_RCPP
}
// SetStringAttributeInH5
void SetStringAttributeInH5(std::string Filename, std::string location, std::string name, std::string attribute);
RcppExport SEXP _TofDaqR_SetStringAttributeInH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP nameSEXP, SEXP attributeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< std::string >::type location(locationSEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    Rcpp::traits::input_parameter< std::string >::type attribute(attributeSEXP);
    SetStringAttributeInH5(Filename, location, name, attribute);
    return R_NilValue;
END_RCPP
}
// GetUserDataFromH5
List GetUserDataFromH5(std::string Filename, std::string location, int rowIndex);
RcppExport SEXP _TofDaqR_GetUserDataFromH5(SEXP FilenameSEXP, SEXP locationSEXP, SEXP rowIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< std::string >::type location(locationSEXP);
    Rcpp::traits::input_parameter< int >::type rowIndex(rowIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(GetUserDataFromH5(Filename, location, rowIndex));
    return rcpp_result_gen;
END_RCPP
}
// GetAcquisitionLogFromH5
List GetAcquisitionLogFromH5(std::string Filename, int index);
RcppExport SEXP _TofDaqR_GetAcquisitionLogFromH5(SEXP FilenameSEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(GetAcquisitionLogFromH5(Filename, index));
    return rcpp_result_gen;
END_RCPP
}
// GetEventListSpectrumFromH5
SEXP GetEventListSpectrumFromH5(std::string Filename, int segmentIndex, int bufIndex, int writeIndex);
RcppExport SEXP _TofDaqR_GetEventListSpectrumFromH5(SEXP FilenameSEXP, SEXP segmentIndexSEXP, SEXP bufIndexSEXP, SEXP writeIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type segmentIndex(segmentIndexSEXP);
    Rcpp::traits::input_parameter< int >::type bufIndex(bufIndexSEXP);
    Rcpp::traits::input_parameter< int >::type writeIndex(writeIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(GetEventListSpectrumFromH5(Filename, segmentIndex, bufIndex, writeIndex));
    return rcpp_result_gen;
END_RCPP
}
// H5GetMassCalibPar
List H5GetMassCalibPar(std::string Filename, int writeIndex);
RcppExport SEXP _TofDaqR_H5GetMassCalibPar(SEXP FilenameSEXP, SEXP writeIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type writeIndex(writeIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(H5GetMassCalibPar(Filename, writeIndex));
    return rcpp_result_gen;
END_RCPP
}
// H5AddLogEntry
void H5AddLogEntry(std::string Filename, std::string LogEntryText, std::string LogEntryTime);
RcppExport SEXP _TofDaqR_H5AddLogEntry(SEXP FilenameSEXP, SEXP LogEntryTextSEXP, SEXP LogEntryTimeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< std::string >::type LogEntryText(LogEntryTextSEXP);
    Rcpp::traits::input_parameter< std::string >::type LogEntryTime(LogEntryTimeSEXP);
    H5AddLogEntry(Filename, LogEntryText, LogEntryTime);
    return R_NilValue;
END_RCPP
}
// H5AddUserDataMultiRow
void H5AddUserDataMultiRow(std::string filename, std::string location, int nbrElements, int nbrRows, NumericVector data, Nullable<Rcpp::StringVector> elementDescription, int compressionLevel);
RcppExport SEXP _TofDaqR_H5AddUserDataMultiRow(SEXP filenameSEXP, SEXP locationSEXP, SEXP nbrElementsSEXP, SEXP nbrRowsSEXP, SEXP dataSEXP, SEXP elementDescriptionSEXP, SEXP compressionLevelSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< std::string >::type location(locationSEXP);
    Rcpp::traits::input_parameter< int >::type nbrElements(nbrElementsSEXP);
    Rcpp::traits::input_parameter< int >::type nbrRows(nbrRowsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type data(dataSEXP);
    Rcpp::traits::input_parameter< Nullable<Rcpp::StringVector> >::type elementDescription(elementDescriptionSEXP);
    Rcpp::traits::input_parameter< int >::type compressionLevel(compressionLevelSEXP);
    H5AddUserDataMultiRow(filename, location, nbrElements, nbrRows, data, elementDescription, compressionLevel);
    return R_NilValue;
END_RCPP
}
// DeleteAttributeInH5
void DeleteAttributeInH5(std::string filename, std::string location, std::string name);
RcppExport SEXP _TofDaqR_DeleteAttributeInH5(SEXP filenameSEXP, SEXP locationSEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< std::string >::type location(locationSEXP);
    Rcpp::traits::input_parameter< std::string >::type name(nameSEXP);
    DeleteAttributeInH5(filename, location, name);
    return R_NilValue;
END_RCPP
}
// WaitForExclusiveFileAccess
void WaitForExclusiveFileAccess(std::string filename, int timeoutMs);
RcppExport SEXP _TofDaqR_WaitForExclusiveFileAccess(SEXP filenameSEXP, SEXP timeoutMsSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< int >::type timeoutMs(timeoutMsSEXP);
    WaitForExclusiveFileAccess(filename, timeoutMs);
    return R_NilValue;
END_RCPP
}
// WriteNetCdfTimeSeriesFile
void WriteNetCdfTimeSeriesFile(std::string filename, std::string inject_ts, std::string expTitle, std::string operator_name, std::string company_method_name, std::string source_file_reference, std::string retention_unit, std::string detector_unit, std::string sample_name, std::string raw_data_table_name, NumericVector retention, NumericVector ordinate);
RcppExport SEXP _TofDaqR_WriteNetCdfTimeSeriesFile(SEXP filenameSEXP, SEXP inject_tsSEXP, SEXP expTitleSEXP, SEXP operator_nameSEXP, SEXP company_method_nameSEXP, SEXP source_file_referenceSEXP, SEXP retention_unitSEXP, SEXP detector_unitSEXP, SEXP sample_nameSEXP, SEXP raw_data_table_nameSEXP, SEXP retentionSEXP, SEXP ordinateSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< std::string >::type inject_ts(inject_tsSEXP);
    Rcpp::traits::input_parameter< std::string >::type expTitle(expTitleSEXP);
    Rcpp::traits::input_parameter< std::string >::type operator_name(operator_nameSEXP);
    Rcpp::traits::input_parameter< std::string >::type company_method_name(company_method_nameSEXP);
    Rcpp::traits::input_parameter< std::string >::type source_file_reference(source_file_referenceSEXP);
    Rcpp::traits::input_parameter< std::string >::type retention_unit(retention_unitSEXP);
    Rcpp::traits::input_parameter< std::string >::type detector_unit(detector_unitSEXP);
    Rcpp::traits::input_parameter< std::string >::type sample_name(sample_nameSEXP);
    Rcpp::traits::input_parameter< std::string >::type raw_data_table_name(raw_data_table_nameSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type retention(retentionSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ordinate(ordinateSEXP);
    WriteNetCdfTimeSeriesFile(filename, inject_ts, expTitle, operator_name, company_method_name, source_file_reference, retention_unit, detector_unit, sample_name, raw_data_table_name, retention, ordinate);
    return R_NilValue;
END_RCPP
}
// H5SetMassCalib
void H5SetMassCalib(std::string Filename, int mode, int nbrParams, NumericVector p, NumericVector mass, NumericVector tof, NumericVector weight);
RcppExport SEXP _TofDaqR_H5SetMassCalib(SEXP FilenameSEXP, SEXP modeSEXP, SEXP nbrParamsSEXP, SEXP pSEXP, SEXP massSEXP, SEXP tofSEXP, SEXP weightSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type mode(modeSEXP);
    Rcpp::traits::input_parameter< int >::type nbrParams(nbrParamsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mass(massSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tof(tofSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weight(weightSEXP);
    H5SetMassCalib(Filename, mode, nbrParams, p, mass, tof, weight);
    return R_NilValue;
END_RCPP
}
// H5SetMassCalib2
void H5SetMassCalib2(std::string Filename, int mode, int nbrParams, NumericVector p, NumericVector mass, NumericVector tof, NumericVector weight);
RcppExport SEXP _TofDaqR_H5SetMassCalib2(SEXP FilenameSEXP, SEXP modeSEXP, SEXP nbrParamsSEXP, SEXP pSEXP, SEXP massSEXP, SEXP tofSEXP, SEXP weightSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type mode(modeSEXP);
    Rcpp::traits::input_parameter< int >::type nbrParams(nbrParamsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mass(massSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tof(tofSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weight(weightSEXP);
    H5SetMassCalib2(Filename, mode, nbrParams, p, mass, tof, weight);
    return R_NilValue;
END_RCPP
}
// H5SetMassCalibEx
void H5SetMassCalibEx(std::string Filename, int mode, int nbrParams, NumericVector p, NumericVector mass, NumericVector tof, NumericVector weight, StringVector label);
RcppExport SEXP _TofDaqR_H5SetMassCalibEx(SEXP FilenameSEXP, SEXP modeSEXP, SEXP nbrParamsSEXP, SEXP pSEXP, SEXP massSEXP, SEXP tofSEXP, SEXP weightSEXP, SEXP labelSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type mode(modeSEXP);
    Rcpp::traits::input_parameter< int >::type nbrParams(nbrParamsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mass(massSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tof(tofSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weight(weightSEXP);
    Rcpp::traits::input_parameter< StringVector >::type label(labelSEXP);
    H5SetMassCalibEx(Filename, mode, nbrParams, p, mass, tof, weight, label);
    return R_NilValue;
END_RCPP
}
// H5SetMassCalib2Ex
void H5SetMassCalib2Ex(std::string Filename, int mode, int nbrParams, NumericVector p, NumericVector mass, NumericVector tof, NumericVector weight, StringVector label);
RcppExport SEXP _TofDaqR_H5SetMassCalib2Ex(SEXP FilenameSEXP, SEXP modeSEXP, SEXP nbrParamsSEXP, SEXP pSEXP, SEXP massSEXP, SEXP tofSEXP, SEXP weightSEXP, SEXP labelSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< int >::type mode(modeSEXP);
    Rcpp::traits::input_parameter< int >::type nbrParams(nbrParamsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mass(massSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tof(tofSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weight(weightSEXP);
    Rcpp::traits::input_parameter< StringVector >::type label(labelSEXP);
    H5SetMassCalib2Ex(Filename, mode, nbrParams, p, mass, tof, weight, label);
    return R_NilValue;
END_RCPP
}
// H5SetMassCalibDynamic
void H5SetMassCalibDynamic(std::string filename, int writeIndex, NumericVector par, NumericVector stat);
RcppExport SEXP _TofDaqR_H5SetMassCalibDynamic(SEXP filenameSEXP, SEXP writeIndexSEXP, SEXP parSEXP, SEXP statSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    Rcpp::traits::input_parameter< int >::type writeIndex(writeIndexSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type par(parSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type stat(statSEXP);
    H5SetMassCalibDynamic(filename, writeIndex, par, stat);
    return R_NilValue;
END_RCPP
}
// ChangePeakTable
void ChangePeakTable(std::string Filename, List PeakPar, int compressionLevel);
RcppExport SEXP _TofDaqR_ChangePeakTable(SEXP FilenameSEXP, SEXP PeakParSEXP, SEXP compressionLevelSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< List >::type PeakPar(PeakParSEXP);
    Rcpp::traits::input_parameter< int >::type compressionLevel(compressionLevelSEXP);
    ChangePeakTable(Filename, PeakPar, compressionLevel);
    return R_NilValue;
END_RCPP
}
// ChangePeakTableFromFile
void ChangePeakTableFromFile(std::string Filename, std::string massTable, int compressionLevel);
RcppExport SEXP _TofDaqR_ChangePeakTableFromFile(SEXP FilenameSEXP, SEXP massTableSEXP, SEXP compressionLevelSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type Filename(FilenameSEXP);
    Rcpp::traits::input_parameter< std::string >::type massTable(massTableSEXP);
    Rcpp::traits::input_parameter< int >::type compressionLevel(compressionLevelSEXP);
    ChangePeakTableFromFile(Filename, massTable, compressionLevel);
    return R_NilValue;
END_RCPP
}
// FitSinglePeak
List FitSinglePeak(NumericVector yVals, NumericVector xVals, int peakType, double blOffset, double blSlope, double amplitude, double fwhmLo, double fwhmHi, double peakPos, double mu);
RcppExport SEXP _TofDaqR_FitSinglePeak(SEXP yValsSEXP, SEXP xValsSEXP, SEXP peakTypeSEXP, SEXP blOffsetSEXP, SEXP blSlopeSEXP, SEXP amplitudeSEXP, SEXP fwhmLoSEXP, SEXP fwhmHiSEXP, SEXP peakPosSEXP, SEXP muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type yVals(yValsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xVals(xValsSEXP);
    Rcpp::traits::input_parameter< int >::type peakType(peakTypeSEXP);
    Rcpp::traits::input_parameter< double >::type blOffset(blOffsetSEXP);
    Rcpp::traits::input_parameter< double >::type blSlope(blSlopeSEXP);
    Rcpp::traits::input_parameter< double >::type amplitude(amplitudeSEXP);
    Rcpp::traits::input_parameter< double >::type fwhmLo(fwhmLoSEXP);
    Rcpp::traits::input_parameter< double >::type fwhmHi(fwhmHiSEXP);
    Rcpp::traits::input_parameter< double >::type peakPos(peakPosSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    rcpp_result_gen = Rcpp::wrap(FitSinglePeak(yVals, xVals, peakType, blOffset, blSlope, amplitude, fwhmLo, fwhmHi, peakPos, mu));
    return rcpp_result_gen;
END_RCPP
}
// FitSinglePeak2
List FitSinglePeak2(NumericVector yVals, NumericVector xVals, int peakType, NumericVector param);
RcppExport SEXP _TofDaqR_FitSinglePeak2(SEXP yValsSEXP, SEXP xValsSEXP, SEXP peakTypeSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type yVals(yValsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xVals(xValsSEXP);
    Rcpp::traits::input_parameter< int >::type peakType(peakTypeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(FitSinglePeak2(yVals, xVals, peakType, param));
    return rcpp_result_gen;
END_RCPP
}
// EvalSinglePeak
NumericVector EvalSinglePeak(NumericVector xVals, double blOffset, double blSlope, double amplitude, double fwhmLo, double fwhmHi, double peakPos, double mu);
RcppExport SEXP _TofDaqR_EvalSinglePeak(SEXP xValsSEXP, SEXP blOffsetSEXP, SEXP blSlopeSEXP, SEXP amplitudeSEXP, SEXP fwhmLoSEXP, SEXP fwhmHiSEXP, SEXP peakPosSEXP, SEXP muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type xVals(xValsSEXP);
    Rcpp::traits::input_parameter< double >::type blOffset(blOffsetSEXP);
    Rcpp::traits::input_parameter< double >::type blSlope(blSlopeSEXP);
    Rcpp::traits::input_parameter< double >::type amplitude(amplitudeSEXP);
    Rcpp::traits::input_parameter< double >::type fwhmLo(fwhmLoSEXP);
    Rcpp::traits::input_parameter< double >::type fwhmHi(fwhmHiSEXP);
    Rcpp::traits::input_parameter< double >::type peakPos(peakPosSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    rcpp_result_gen = Rcpp::wrap(EvalSinglePeak(xVals, blOffset, blSlope, amplitude, fwhmLo, fwhmHi, peakPos, mu));
    return rcpp_result_gen;
END_RCPP
}
// GetMoleculeMass
double GetMoleculeMass(std::string molecule);
RcppExport SEXP _TofDaqR_GetMoleculeMass(SEXP moleculeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type molecule(moleculeSEXP);
    rcpp_result_gen = Rcpp::wrap(GetMoleculeMass(molecule));
    return rcpp_result_gen;
END_RCPP
}
// MultiPeakFit
List MultiPeakFit(NumericVector dataX, NumericVector dataY, NumericVector mass, NumericVector intensity, NumericVector commonPar, List options);
RcppExport SEXP _TofDaqR_MultiPeakFit(SEXP dataXSEXP, SEXP dataYSEXP, SEXP massSEXP, SEXP intensitySEXP, SEXP commonParSEXP, SEXP optionsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type dataX(dataXSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type dataY(dataYSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mass(massSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type intensity(intensitySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type commonPar(commonParSEXP);
    Rcpp::traits::input_parameter< List >::type options(optionsSEXP);
    rcpp_result_gen = Rcpp::wrap(MultiPeakFit(dataX, dataY, mass, intensity, commonPar, options));
    return rcpp_result_gen;
END_RCPP
}
// EvalMultiPeak
NumericVector EvalMultiPeak(NumericVector dataX, NumericVector mass, NumericVector intensity, NumericVector commonPar);
RcppExport SEXP _TofDaqR_EvalMultiPeak(SEXP dataXSEXP, SEXP massSEXP, SEXP intensitySEXP, SEXP commonParSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type dataX(dataXSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mass(massSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type intensity(intensitySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type commonPar(commonParSEXP);
    rcpp_result_gen = Rcpp::wrap(EvalMultiPeak(dataX, mass, intensity, commonPar));
    return rcpp_result_gen;
END_RCPP
}
// FitResolution
List FitResolution(NumericVector mass, NumericVector resolution, double R0, double m0, double dm);
RcppExport SEXP _TofDaqR_FitResolution(SEXP massSEXP, SEXP resolutionSEXP, SEXP R0SEXP, SEXP m0SEXP, SEXP dmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type mass(massSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type resolution(resolutionSEXP);
    Rcpp::traits::input_parameter< double >::type R0(R0SEXP);
    Rcpp::traits::input_parameter< double >::type m0(m0SEXP);
    Rcpp::traits::input_parameter< double >::type dm(dmSEXP);
    rcpp_result_gen = Rcpp::wrap(FitResolution(mass, resolution, R0, m0, dm));
    return rcpp_result_gen;
END_RCPP
}
// EvalResolution
NumericVector EvalResolution(double R0, double m0, double dm, NumericVector mass);
RcppExport SEXP _TofDaqR_EvalResolution(SEXP R0SEXP, SEXP m0SEXP, SEXP dmSEXP, SEXP massSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type R0(R0SEXP);
    Rcpp::traits::input_parameter< double >::type m0(m0SEXP);
    Rcpp::traits::input_parameter< double >::type dm(dmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mass(massSEXP);
    rcpp_result_gen = Rcpp::wrap(EvalResolution(R0, m0, dm, mass));
    return rcpp_result_gen;
END_RCPP
}
// GetIsotopePattern
List GetIsotopePattern(std::string molecule, double abundanceLimit);
RcppExport SEXP _TofDaqR_GetIsotopePattern(SEXP moleculeSEXP, SEXP abundanceLimitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type molecule(moleculeSEXP);
    Rcpp::traits::input_parameter< double >::type abundanceLimit(abundanceLimitSEXP);
    rcpp_result_gen = Rcpp::wrap(GetIsotopePattern(molecule, abundanceLimit));
    return rcpp_result_gen;
END_RCPP
}
// GetIsotopePattern2
List GetIsotopePattern2(std::string molecule, double abundanceLimit);
RcppExport SEXP _TofDaqR_GetIsotopePattern2(SEXP moleculeSEXP, SEXP abundanceLimitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type molecule(moleculeSEXP);
    Rcpp::traits::input_parameter< double >::type abundanceLimit(abundanceLimitSEXP);
    rcpp_result_gen = Rcpp::wrap(GetIsotopePattern2(molecule, abundanceLimit));
    return rcpp_result_gen;
END_RCPP
}
// Tof2Mass
NumericVector Tof2Mass(NumericVector tofSample, int massCalibMode, NumericVector p);
RcppExport SEXP _TofDaqR_Tof2Mass(SEXP tofSampleSEXP, SEXP massCalibModeSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type tofSample(tofSampleSEXP);
    Rcpp::traits::input_parameter< int >::type massCalibMode(massCalibModeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(Tof2Mass(tofSample, massCalibMode, p));
    return rcpp_result_gen;
END_RCPP
}
// Mass2Tof
NumericVector Mass2Tof(NumericVector mass, int massCalibMode, NumericVector p);
RcppExport SEXP _TofDaqR_Mass2Tof(SEXP massSEXP, SEXP massCalibModeSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type mass(massSEXP);
    Rcpp::traits::input_parameter< int >::type massCalibMode(massCalibModeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(Mass2Tof(mass, massCalibMode, p));
    return rcpp_result_gen;
END_RCPP
}
// MassCalibrate
NumericVector MassCalibrate(int massCalibMode, NumericVector mass, NumericVector tof, Nullable<NumericVector> weight);
RcppExport SEXP _TofDaqR_MassCalibrate(SEXP massCalibModeSEXP, SEXP massSEXP, SEXP tofSEXP, SEXP weightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type massCalibMode(massCalibModeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mass(massSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tof(tofSEXP);
    Rcpp::traits::input_parameter< Nullable<NumericVector> >::type weight(weightSEXP);
    rcpp_result_gen = Rcpp::wrap(MassCalibrate(massCalibMode, mass, tof, weight));
    return rcpp_result_gen;
END_RCPP
}
// GetMassCalibInfo
List GetMassCalibInfo(int massCalibMode);
RcppExport SEXP _TofDaqR_GetMassCalibInfo(SEXP massCalibModeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type massCalibMode(massCalibModeSEXP);
    rcpp_result_gen = Rcpp::wrap(GetMassCalibInfo(massCalibMode));
    return rcpp_result_gen;
END_RCPP
}
// SiInitializeHistograms
void SiInitializeHistograms(NumericVector loMass, NumericVector hiMass, Nullable<IntegerVector> specType);
RcppExport SEXP _TofDaqR_SiInitializeHistograms(SEXP loMassSEXP, SEXP hiMassSEXP, SEXP specTypeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type loMass(loMassSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type hiMass(hiMassSEXP);
    Rcpp::traits::input_parameter< Nullable<IntegerVector> >::type specType(specTypeSEXP);
    SiInitializeHistograms(loMass, hiMass, specType);
    return R_NilValue;
END_RCPP
}
// SiSetProcessingOptions
void SiSetProcessingOptions(std::string option, double value, int specType);
RcppExport SEXP _TofDaqR_SiSetProcessingOptions(SEXP optionSEXP, SEXP valueSEXP, SEXP specTypeSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type option(optionSEXP);
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    Rcpp::traits::input_parameter< int >::type specType(specTypeSEXP);
    SiSetProcessingOptions(option, value, specType);
    return R_NilValue;
END_RCPP
}
// SiProcessSpectrum
List SiProcessSpectrum(NumericVector spectrum, int specType);
RcppExport SEXP _TofDaqR_SiProcessSpectrum(SEXP spectrumSEXP, SEXP specTypeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type spectrum(spectrumSEXP);
    Rcpp::traits::input_parameter< int >::type specType(specTypeSEXP);
    rcpp_result_gen = Rcpp::wrap(SiProcessSpectrum(spectrum, specType));
    return rcpp_result_gen;
END_RCPP
}
// SiGetHistogram
List SiGetHistogram(int histogramIndex);
RcppExport SEXP _TofDaqR_SiGetHistogram(SEXP histogramIndexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type histogramIndex(histogramIndexSEXP);
    rcpp_result_gen = Rcpp::wrap(SiGetHistogram(histogramIndex));
    return rcpp_result_gen;
END_RCPP
}
// SiGetSumHistogram
List SiGetSumHistogram(int specType, double minMass, double maxMass, double minRate, double maxRate);
RcppExport SEXP _TofDaqR_SiGetSumHistogram(SEXP specTypeSEXP, SEXP minMassSEXP, SEXP maxMassSEXP, SEXP minRateSEXP, SEXP maxRateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type specType(specTypeSEXP);
    Rcpp::traits::input_parameter< double >::type minMass(minMassSEXP);
    Rcpp::traits::input_parameter< double >::type maxMass(maxMassSEXP);
    Rcpp::traits::input_parameter< double >::type minRate(minRateSEXP);
    Rcpp::traits::input_parameter< double >::type maxRate(maxRateSEXP);
    rcpp_result_gen = Rcpp::wrap(SiGetSumHistogram(specType, minMass, maxMass, minRate, maxRate));
    return rcpp_result_gen;
END_RCPP
}
// SiResetHistograms
void SiResetHistograms();
RcppExport SEXP _TofDaqR_SiResetHistograms() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    SiResetHistograms();
    return R_NilValue;
END_RCPP
}
// SiCleanup
void SiCleanup();
RcppExport SEXP _TofDaqR_SiCleanup() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    SiCleanup();
    return R_NilValue;
END_RCPP
}
// SiFitPhd
List SiFitPhd(NumericVector intensity, NumericVector counts);
RcppExport SEXP _TofDaqR_SiFitPhd(SEXP intensitySEXP, SEXP countsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type intensity(intensitySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type counts(countsSEXP);
    rcpp_result_gen = Rcpp::wrap(SiFitPhd(intensity, counts));
    return rcpp_result_gen;
END_RCPP
}
// SiEvalPhd
NumericVector SiEvalPhd(NumericVector par, NumericVector intensity);
RcppExport SEXP _TofDaqR_SiEvalPhd(SEXP parSEXP, SEXP intensitySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type par(parSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type intensity(intensitySEXP);
    rcpp_result_gen = Rcpp::wrap(SiEvalPhd(par, intensity));
    return rcpp_result_gen;
END_RCPP
}
// SiFitRateFromPhd
List SiFitRateFromPhd(NumericVector intensity, NumericVector counts, NumericVector siPar);
RcppExport SEXP _TofDaqR_SiFitRateFromPhd(SEXP intensitySEXP, SEXP countsSEXP, SEXP siParSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type intensity(intensitySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type counts(countsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type siPar(siParSEXP);
    rcpp_result_gen = Rcpp::wrap(SiFitRateFromPhd(intensity, counts, siPar));
    return rcpp_result_gen;
END_RCPP
}
// FindTpsIp
String FindTpsIp(std::string TpsSerial, int timeout);
RcppExport SEXP _TofDaqR_FindTpsIp(SEXP TpsSerialSEXP, SEXP timeoutSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type TpsSerial(TpsSerialSEXP);
    Rcpp::traits::input_parameter< int >::type timeout(timeoutSEXP);
    rcpp_result_gen = Rcpp::wrap(FindTpsIp(TpsSerial, timeout));
    return rcpp_result_gen;
END_RCPP
}
// DecomposeMass
List DecomposeMass(double targetMass, double tolerance, NumericVector atomMass, StringVector atomLabel, IntegerVector elementIndex1, IntegerVector elementIndex2, NumericVector filterMinVal, NumericVector filterMaxVal);
RcppExport SEXP _TofDaqR_DecomposeMass(SEXP targetMassSEXP, SEXP toleranceSEXP, SEXP atomMassSEXP, SEXP atomLabelSEXP, SEXP elementIndex1SEXP, SEXP elementIndex2SEXP, SEXP filterMinValSEXP, SEXP filterMaxValSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type targetMass(targetMassSEXP);
    Rcpp::traits::input_parameter< double >::type tolerance(toleranceSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type atomMass(atomMassSEXP);
    Rcpp::traits::input_parameter< StringVector >::type atomLabel(atomLabelSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type elementIndex1(elementIndex1SEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type elementIndex2(elementIndex2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type filterMinVal(filterMinValSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type filterMaxVal(filterMaxValSEXP);
    rcpp_result_gen = Rcpp::wrap(DecomposeMass(targetMass, tolerance, atomMass, atomLabel, elementIndex1, elementIndex2, filterMinVal, filterMaxVal));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_TofDaqR_tof", (DL_FUNC) &_TofDaqR_tof, 6},
    {"_TofDaqR_EventList2TofSpec", (DL_FUNC) &_TofDaqR_EventList2TofSpec, 4},
    {"_TofDaqR_DecodeEventList", (DL_FUNC) &_TofDaqR_DecodeEventList, 3},
    {"_TofDaqR_DecodeEventListThreshold", (DL_FUNC) &_TofDaqR_DecodeEventListThreshold, 6},
    {"_TofDaqR_SiProcessSpectrumFromShMem", (DL_FUNC) &_TofDaqR_SiProcessSpectrumFromShMem, 2},
    {"_TofDaqR_KeepSharedMemMapped", (DL_FUNC) &_TofDaqR_KeepSharedMemMapped, 0},
    {"_TofDaqR_InitializeDll", (DL_FUNC) &_TofDaqR_InitializeDll, 0},
    {"_TofDaqR_CleanupDll", (DL_FUNC) &_TofDaqR_CleanupDll, 0},
    {"_TofDaqR_GetDllVersion", (DL_FUNC) &_TofDaqR_GetDllVersion, 0},
    {"_TofDaqR_TofDaqRunning", (DL_FUNC) &_TofDaqR_TofDaqRunning, 0},
    {"_TofDaqR_DaqActive", (DL_FUNC) &_TofDaqR_DaqActive, 0},
    {"_TofDaqR_StartAcquisition", (DL_FUNC) &_TofDaqR_StartAcquisition, 0},
    {"_TofDaqR_StopAcquisition", (DL_FUNC) &_TofDaqR_StopAcquisition, 0},
    {"_TofDaqR_ContinueAcquisition", (DL_FUNC) &_TofDaqR_ContinueAcquisition, 0},
    {"_TofDaqR_ManualContinueNeeded", (DL_FUNC) &_TofDaqR_ManualContinueNeeded, 0},
    {"_TofDaqR_CloseTofDaqRec", (DL_FUNC) &_TofDaqR_CloseTofDaqRec, 0},
    {"_TofDaqR_IssueDio4Pulse", (DL_FUNC) &_TofDaqR_IssueDio4Pulse, 2},
    {"_TofDaqR_SetDio4State", (DL_FUNC) &_TofDaqR_SetDio4State, 1},
    {"_TofDaqR_InitializeDaqDevice", (DL_FUNC) &_TofDaqR_InitializeDaqDevice, 0},
    {"_TofDaqR_SetTimeout", (DL_FUNC) &_TofDaqR_SetTimeout, 1},
    {"_TofDaqR_GetTimeout", (DL_FUNC) &_TofDaqR_GetTimeout, 0},
    {"_TofDaqR_AutoSetupDaqDevice", (DL_FUNC) &_TofDaqR_AutoSetupDaqDevice, 0},
    {"_TofDaqR_OnDemandMassCalibration", (DL_FUNC) &_TofDaqR_OnDemandMassCalibration, 1},
    {"_TofDaqR_ShowConfigWindow", (DL_FUNC) &_TofDaqR_ShowConfigWindow, 1},
    {"_TofDaqR_LoadIniFile", (DL_FUNC) &_TofDaqR_LoadIniFile, 1},
    {"_TofDaqR_SaveIniFile", (DL_FUNC) &_TofDaqR_SaveIniFile, 1},
    {"_TofDaqR_GetDaqParameter", (DL_FUNC) &_TofDaqR_GetDaqParameter, 1},
    {"_TofDaqR_GetDaqParameterInt", (DL_FUNC) &_TofDaqR_GetDaqParameterInt, 1},
    {"_TofDaqR_GetDaqParameterBool", (DL_FUNC) &_TofDaqR_GetDaqParameterBool, 1},
    {"_TofDaqR_GetDaqParameterFloat", (DL_FUNC) &_TofDaqR_GetDaqParameterFloat, 1},
    {"_TofDaqR_GetDaqParameterInt64", (DL_FUNC) &_TofDaqR_GetDaqParameterInt64, 1},
    {"_TofDaqR_GetDaqParameterDouble", (DL_FUNC) &_TofDaqR_GetDaqParameterDouble, 1},
    {"_TofDaqR_GetDaqParameterIntRef", (DL_FUNC) &_TofDaqR_GetDaqParameterIntRef, 1},
    {"_TofDaqR_GetDaqParameterBoolRef", (DL_FUNC) &_TofDaqR_GetDaqParameterBoolRef, 1},
    {"_TofDaqR_GetDaqParameterFloatRef", (DL_FUNC) &_TofDaqR_GetDaqParameterFloatRef, 1},
    {"_TofDaqR_GetDaqParameterInt64Ref", (DL_FUNC) &_TofDaqR_GetDaqParameterInt64Ref, 1},
    {"_TofDaqR_GetDaqParameterDoubleRef", (DL_FUNC) &_TofDaqR_GetDaqParameterDoubleRef, 1},
    {"_TofDaqR_GetDaqParameterStringRef", (DL_FUNC) &_TofDaqR_GetDaqParameterStringRef, 1},
    {"_TofDaqR_SetDaqParameter", (DL_FUNC) &_TofDaqR_SetDaqParameter, 2},
    {"_TofDaqR_SetDaqParameterInt", (DL_FUNC) &_TofDaqR_SetDaqParameterInt, 2},
    {"_TofDaqR_SetDaqParameterBool", (DL_FUNC) &_TofDaqR_SetDaqParameterBool, 2},
    {"_TofDaqR_SetDaqParameterFloat", (DL_FUNC) &_TofDaqR_SetDaqParameterFloat, 2},
    {"_TofDaqR_SetDaqParameterInt64", (DL_FUNC) &_TofDaqR_SetDaqParameterInt64, 2},
    {"_TofDaqR_SetDaqParameterDouble", (DL_FUNC) &_TofDaqR_SetDaqParameterDouble, 2},
    {"_TofDaqR_ConfigVarNbrMemories", (DL_FUNC) &_TofDaqR_ConfigVarNbrMemories, 3},
    {"_TofDaqR_SetMassCalib", (DL_FUNC) &_TofDaqR_SetMassCalib, 6},
    {"_TofDaqR_SetMassCalib2", (DL_FUNC) &_TofDaqR_SetMassCalib2, 6},
    {"_TofDaqR_SetMassCalibEx", (DL_FUNC) &_TofDaqR_SetMassCalibEx, 7},
    {"_TofDaqR_SetMassCalib2Ex", (DL_FUNC) &_TofDaqR_SetMassCalib2Ex, 7},
    {"_TofDaqR_GetDescriptor", (DL_FUNC) &_TofDaqR_GetDescriptor, 0},
    {"_TofDaqR_GetPeakParameters", (DL_FUNC) &_TofDaqR_GetPeakParameters, 1},
    {"_TofDaqR_ReleaseSharedMemory", (DL_FUNC) &_TofDaqR_ReleaseSharedMemory, 0},
    {"_TofDaqR_WaitForNewData", (DL_FUNC) &_TofDaqR_WaitForNewData, 2},
    {"_TofDaqR_WaitForEndOfAcquisition", (DL_FUNC) &_TofDaqR_WaitForEndOfAcquisition, 1},
    {"_TofDaqR_GetMassCalib", (DL_FUNC) &_TofDaqR_GetMassCalib, 0},
    {"_TofDaqR_GetMassCalib2", (DL_FUNC) &_TofDaqR_GetMassCalib2, 0},
    {"_TofDaqR_GetMassCalibEx", (DL_FUNC) &_TofDaqR_GetMassCalibEx, 0},
    {"_TofDaqR_GetMassCalib2Ex", (DL_FUNC) &_TofDaqR_GetMassCalib2Ex, 0},
    {"_TofDaqR_GetSumSpectrumFromShMem", (DL_FUNC) &_TofDaqR_GetSumSpectrumFromShMem, 1},
    {"_TofDaqR_GetSumSpectrumFromShMem2", (DL_FUNC) &_TofDaqR_GetSumSpectrumFromShMem2, 1},
    {"_TofDaqR_GetTofSpectrumFromShMem", (DL_FUNC) &_TofDaqR_GetTofSpectrumFromShMem, 4},
    {"_TofDaqR_GetTofSpectrumFromShMem2", (DL_FUNC) &_TofDaqR_GetTofSpectrumFromShMem2, 4},
    {"_TofDaqR_GetSpecXaxisFromShMem", (DL_FUNC) &_TofDaqR_GetSpecXaxisFromShMem, 1},
    {"_TofDaqR_GetStickSpectrumFromShMem", (DL_FUNC) &_TofDaqR_GetStickSpectrumFromShMem, 3},
    {"_TofDaqR_GetStickSpectrumFromShMem2", (DL_FUNC) &_TofDaqR_GetStickSpectrumFromShMem2, 3},
    {"_TofDaqR_GetSegmentProfileFromShMem", (DL_FUNC) &_TofDaqR_GetSegmentProfileFromShMem, 2},
    {"_TofDaqR_GetSegmentProfileFromShMem2", (DL_FUNC) &_TofDaqR_GetSegmentProfileFromShMem2, 2},
    {"_TofDaqR_GetBufTimeFromShMem", (DL_FUNC) &_TofDaqR_GetBufTimeFromShMem, 2},
    {"_TofDaqR_AddLogEntry", (DL_FUNC) &_TofDaqR_AddLogEntry, 2},
    {"_TofDaqR_AddAttributeInt", (DL_FUNC) &_TofDaqR_AddAttributeInt, 3},
    {"_TofDaqR_AddAttributeDouble", (DL_FUNC) &_TofDaqR_AddAttributeDouble, 3},
    {"_TofDaqR_AddAttributeString", (DL_FUNC) &_TofDaqR_AddAttributeString, 3},
    {"_TofDaqR_AddUserData", (DL_FUNC) &_TofDaqR_AddUserData, 5},
    {"_TofDaqR_AddUserDataMultiRow", (DL_FUNC) &_TofDaqR_AddUserDataMultiRow, 6},
    {"_TofDaqR_RegisterUserDataBuf", (DL_FUNC) &_TofDaqR_RegisterUserDataBuf, 4},
    {"_TofDaqR_RegisterUserDataWrite", (DL_FUNC) &_TofDaqR_RegisterUserDataWrite, 4},
    {"_TofDaqR_RegisterUserDataNoStore", (DL_FUNC) &_TofDaqR_RegisterUserDataNoStore, 3},
    {"_TofDaqR_UnregisterUserData", (DL_FUNC) &_TofDaqR_UnregisterUserData, 1},
    {"_TofDaqR_UpdateUserData", (DL_FUNC) &_TofDaqR_UpdateUserData, 3},
    {"_TofDaqR_ReadRegUserData", (DL_FUNC) &_TofDaqR_ReadRegUserData, 2},
    {"_TofDaqR_QueryRegUserDataSize", (DL_FUNC) &_TofDaqR_QueryRegUserDataSize, 1},
    {"_TofDaqR_GetRegUserDataSources", (DL_FUNC) &_TofDaqR_GetRegUserDataSources, 0},
    {"_TofDaqR_GetRegUserDataDesc", (DL_FUNC) &_TofDaqR_GetRegUserDataDesc, 1},
    {"_TofDaqR_KeepFileOpen", (DL_FUNC) &_TofDaqR_KeepFileOpen, 1},
    {"_TofDaqR_TpsConnect", (DL_FUNC) &_TofDaqR_TpsConnect, 0},
    {"_TofDaqR_TpsConnect2", (DL_FUNC) &_TofDaqR_TpsConnect2, 2},
    {"_TofDaqR_TpsDisconnect", (DL_FUNC) &_TofDaqR_TpsDisconnect, 0},
    {"_TofDaqR_TpsGetMonitorValue", (DL_FUNC) &_TofDaqR_TpsGetMonitorValue, 1},
    {"_TofDaqR_TpsGetTargetValue", (DL_FUNC) &_TofDaqR_TpsGetTargetValue, 1},
    {"_TofDaqR_TpsGetLastSetValue", (DL_FUNC) &_TofDaqR_TpsGetLastSetValue, 1},
    {"_TofDaqR_TpsSetTargetValue", (DL_FUNC) &_TofDaqR_TpsSetTargetValue, 2},
    {"_TofDaqR_TpsGetNbrModules", (DL_FUNC) &_TofDaqR_TpsGetNbrModules, 0},
    {"_TofDaqR_TpsGetModuleCodes", (DL_FUNC) &_TofDaqR_TpsGetModuleCodes, 0},
    {"_TofDaqR_TpsInitialize", (DL_FUNC) &_TofDaqR_TpsInitialize, 0},
    {"_TofDaqR_TpsSetAllVoltages", (DL_FUNC) &_TofDaqR_TpsSetAllVoltages, 0},
    {"_TofDaqR_TpsShutdown", (DL_FUNC) &_TofDaqR_TpsShutdown, 0},
    {"_TofDaqR_TpsGetStatus", (DL_FUNC) &_TofDaqR_TpsGetStatus, 0},
    {"_TofDaqR_TpsLoadSetFile", (DL_FUNC) &_TofDaqR_TpsLoadSetFile, 1},
    {"_TofDaqR_TpsSaveSetFile", (DL_FUNC) &_TofDaqR_TpsSaveSetFile, 1},
    {"_TofDaqR_TpsGetActiveFilament", (DL_FUNC) &_TofDaqR_TpsGetActiveFilament, 0},
    {"_TofDaqR_TpsSetActiveFilament", (DL_FUNC) &_TofDaqR_TpsSetActiveFilament, 1},
    {"_TofDaqR_TpsGetModuleLimits", (DL_FUNC) &_TofDaqR_TpsGetModuleLimits, 1},
    {"_TofDaqR_TpsChangeIonMode", (DL_FUNC) &_TofDaqR_TpsChangeIonMode, 1},
    {"_TofDaqR_GetH5Descriptor", (DL_FUNC) &_TofDaqR_GetH5Descriptor, 1},
    {"_TofDaqR_CloseH5", (DL_FUNC) &_TofDaqR_CloseH5, 1},
    {"_TofDaqR_CloseAll", (DL_FUNC) &_TofDaqR_CloseAll, 0},
    {"_TofDaqR_GetSumSpectrumFromH5", (DL_FUNC) &_TofDaqR_GetSumSpectrumFromH5, 2},
    {"_TofDaqR_GetTofSpectrumFromH5", (DL_FUNC) &_TofDaqR_GetTofSpectrumFromH5, 9},
    {"_TofDaqR_GetTofSpectrum2FromH5", (DL_FUNC) &_TofDaqR_GetTofSpectrum2FromH5, 9},
    {"_TofDaqR_GetStickSpectrumFromH5", (DL_FUNC) &_TofDaqR_GetStickSpectrumFromH5, 9},
    {"_TofDaqR_GetStickSpectrum2FromH5", (DL_FUNC) &_TofDaqR_GetStickSpectrum2FromH5, 9},
    {"_TofDaqR_GetPeakParametersFromH5", (DL_FUNC) &_TofDaqR_GetPeakParametersFromH5, 2},
    {"_TofDaqR_GetBufTimeFromH5", (DL_FUNC) &_TofDaqR_GetBufTimeFromH5, 3},
    {"_TofDaqR_GetSpecXaxisFromH5", (DL_FUNC) &_TofDaqR_GetSpecXaxisFromH5, 3},
    {"_TofDaqR_GetSegmentProfileFromH5", (DL_FUNC) &_TofDaqR_GetSegmentProfileFromH5, 7},
    {"_TofDaqR_GetSegmentProfile2FromH5", (DL_FUNC) &_TofDaqR_GetSegmentProfile2FromH5, 7},
    {"_TofDaqR_GetBufWriteProfileFromH5", (DL_FUNC) &_TofDaqR_GetBufWriteProfileFromH5, 4},
    {"_TofDaqR_GetBufWriteProfile2FromH5", (DL_FUNC) &_TofDaqR_GetBufWriteProfile2FromH5, 4},
    {"_TofDaqR_GetRegUserDataSourcesFromH5", (DL_FUNC) &_TofDaqR_GetRegUserDataSourcesFromH5, 1},
    {"_TofDaqR_GetRegUserDataFromH5", (DL_FUNC) &_TofDaqR_GetRegUserDataFromH5, 5},
    {"_TofDaqR_GetTofData", (DL_FUNC) &_TofDaqR_GetTofData, 9},
    {"_TofDaqR_GetTofData2", (DL_FUNC) &_TofDaqR_GetTofData2, 9},
    {"_TofDaqR_GetPeakData", (DL_FUNC) &_TofDaqR_GetPeakData, 9},
    {"_TofDaqR_GetPeakData2", (DL_FUNC) &_TofDaqR_GetPeakData2, 9},
    {"_TofDaqR_GetTimingData", (DL_FUNC) &_TofDaqR_GetTimingData, 5},
    {"_TofDaqR_GetIntAttributeFromH5", (DL_FUNC) &_TofDaqR_GetIntAttributeFromH5, 3},
    {"_TofDaqR_GetUintAttributeFromH5", (DL_FUNC) &_TofDaqR_GetUintAttributeFromH5, 3},
    {"_TofDaqR_GetInt64AttributeFromH5", (DL_FUNC) &_TofDaqR_GetInt64AttributeFromH5, 3},
    {"_TofDaqR_GetUint64AttributeFromH5", (DL_FUNC) &_TofDaqR_GetUint64AttributeFromH5, 3},
    {"_TofDaqR_GetFloatAttributeFromH5", (DL_FUNC) &_TofDaqR_GetFloatAttributeFromH5, 3},
    {"_TofDaqR_GetDoubleAttributeFromH5", (DL_FUNC) &_TofDaqR_GetDoubleAttributeFromH5, 3},
    {"_TofDaqR_GetStringAttributeFromH5", (DL_FUNC) &_TofDaqR_GetStringAttributeFromH5, 3},
    {"_TofDaqR_SetIntAttributeInH5", (DL_FUNC) &_TofDaqR_SetIntAttributeInH5, 4},
    {"_TofDaqR_SetUintAttributeInH5", (DL_FUNC) &_TofDaqR_SetUintAttributeInH5, 4},
    {"_TofDaqR_SetInt64AttributeInH5", (DL_FUNC) &_TofDaqR_SetInt64AttributeInH5, 4},
    {"_TofDaqR_SetUint64AttributeInH5", (DL_FUNC) &_TofDaqR_SetUint64AttributeInH5, 4},
    {"_TofDaqR_SetFloatAttributeInH5", (DL_FUNC) &_TofDaqR_SetFloatAttributeInH5, 4},
    {"_TofDaqR_SetDoubleAttributeInH5", (DL_FUNC) &_TofDaqR_SetDoubleAttributeInH5, 4},
    {"_TofDaqR_SetStringAttributeInH5", (DL_FUNC) &_TofDaqR_SetStringAttributeInH5, 4},
    {"_TofDaqR_GetUserDataFromH5", (DL_FUNC) &_TofDaqR_GetUserDataFromH5, 3},
    {"_TofDaqR_GetAcquisitionLogFromH5", (DL_FUNC) &_TofDaqR_GetAcquisitionLogFromH5, 2},
    {"_TofDaqR_GetEventListSpectrumFromH5", (DL_FUNC) &_TofDaqR_GetEventListSpectrumFromH5, 4},
    {"_TofDaqR_H5GetMassCalibPar", (DL_FUNC) &_TofDaqR_H5GetMassCalibPar, 2},
    {"_TofDaqR_H5AddLogEntry", (DL_FUNC) &_TofDaqR_H5AddLogEntry, 3},
    {"_TofDaqR_H5AddUserDataMultiRow", (DL_FUNC) &_TofDaqR_H5AddUserDataMultiRow, 7},
    {"_TofDaqR_DeleteAttributeInH5", (DL_FUNC) &_TofDaqR_DeleteAttributeInH5, 3},
    {"_TofDaqR_WaitForExclusiveFileAccess", (DL_FUNC) &_TofDaqR_WaitForExclusiveFileAccess, 2},
    {"_TofDaqR_WriteNetCdfTimeSeriesFile", (DL_FUNC) &_TofDaqR_WriteNetCdfTimeSeriesFile, 12},
    {"_TofDaqR_H5SetMassCalib", (DL_FUNC) &_TofDaqR_H5SetMassCalib, 7},
    {"_TofDaqR_H5SetMassCalib2", (DL_FUNC) &_TofDaqR_H5SetMassCalib2, 7},
    {"_TofDaqR_H5SetMassCalibEx", (DL_FUNC) &_TofDaqR_H5SetMassCalibEx, 8},
    {"_TofDaqR_H5SetMassCalib2Ex", (DL_FUNC) &_TofDaqR_H5SetMassCalib2Ex, 8},
    {"_TofDaqR_H5SetMassCalibDynamic", (DL_FUNC) &_TofDaqR_H5SetMassCalibDynamic, 4},
    {"_TofDaqR_ChangePeakTable", (DL_FUNC) &_TofDaqR_ChangePeakTable, 3},
    {"_TofDaqR_ChangePeakTableFromFile", (DL_FUNC) &_TofDaqR_ChangePeakTableFromFile, 3},
    {"_TofDaqR_FitSinglePeak", (DL_FUNC) &_TofDaqR_FitSinglePeak, 10},
    {"_TofDaqR_FitSinglePeak2", (DL_FUNC) &_TofDaqR_FitSinglePeak2, 4},
    {"_TofDaqR_EvalSinglePeak", (DL_FUNC) &_TofDaqR_EvalSinglePeak, 8},
    {"_TofDaqR_GetMoleculeMass", (DL_FUNC) &_TofDaqR_GetMoleculeMass, 1},
    {"_TofDaqR_MultiPeakFit", (DL_FUNC) &_TofDaqR_MultiPeakFit, 6},
    {"_TofDaqR_EvalMultiPeak", (DL_FUNC) &_TofDaqR_EvalMultiPeak, 4},
    {"_TofDaqR_FitResolution", (DL_FUNC) &_TofDaqR_FitResolution, 5},
    {"_TofDaqR_EvalResolution", (DL_FUNC) &_TofDaqR_EvalResolution, 4},
    {"_TofDaqR_GetIsotopePattern", (DL_FUNC) &_TofDaqR_GetIsotopePattern, 2},
    {"_TofDaqR_GetIsotopePattern2", (DL_FUNC) &_TofDaqR_GetIsotopePattern2, 2},
    {"_TofDaqR_Tof2Mass", (DL_FUNC) &_TofDaqR_Tof2Mass, 3},
    {"_TofDaqR_Mass2Tof", (DL_FUNC) &_TofDaqR_Mass2Tof, 3},
    {"_TofDaqR_MassCalibrate", (DL_FUNC) &_TofDaqR_MassCalibrate, 4},
    {"_TofDaqR_GetMassCalibInfo", (DL_FUNC) &_TofDaqR_GetMassCalibInfo, 1},
    {"_TofDaqR_SiInitializeHistograms", (DL_FUNC) &_TofDaqR_SiInitializeHistograms, 3},
    {"_TofDaqR_SiSetProcessingOptions", (DL_FUNC) &_TofDaqR_SiSetProcessingOptions, 3},
    {"_TofDaqR_SiProcessSpectrum", (DL_FUNC) &_TofDaqR_SiProcessSpectrum, 2},
    {"_TofDaqR_SiGetHistogram", (DL_FUNC) &_TofDaqR_SiGetHistogram, 1},
    {"_TofDaqR_SiGetSumHistogram", (DL_FUNC) &_TofDaqR_SiGetSumHistogram, 5},
    {"_TofDaqR_SiResetHistograms", (DL_FUNC) &_TofDaqR_SiResetHistograms, 0},
    {"_TofDaqR_SiCleanup", (DL_FUNC) &_TofDaqR_SiCleanup, 0},
    {"_TofDaqR_SiFitPhd", (DL_FUNC) &_TofDaqR_SiFitPhd, 2},
    {"_TofDaqR_SiEvalPhd", (DL_FUNC) &_TofDaqR_SiEvalPhd, 2},
    {"_TofDaqR_SiFitRateFromPhd", (DL_FUNC) &_TofDaqR_SiFitRateFromPhd, 3},
    {"_TofDaqR_FindTpsIp", (DL_FUNC) &_TofDaqR_FindTpsIp, 2},
    {"_TofDaqR_DecomposeMass", (DL_FUNC) &_TofDaqR_DecomposeMass, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_TofDaqR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
